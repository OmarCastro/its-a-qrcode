/* eslint-disable no-multi-spaces -- tabular view of data present */
import { deepFreeze } from '../utils/deep-freeze.util.js'

export const CORRECTION_LEVEL_L = 1
export const CORRECTION_LEVEL_M = 0
export const CORRECTION_LEVEL_Q = 3
export const CORRECTION_LEVEL_H = 2

/**
 * The error correction block table.
 *
 * There are 3 to 6 elements per version, in groups of 3. In each group, the first number indicate the number of blocks, then the total width¹, and finally the data width².
 *
 * ¹ total width - total codewords count ( total width = data width + EC width³) of a block
 * ² data width - data codewords count
 * ³ EC width - Error correction codewords count
 */
export const EC_BLOCK_TABLE = deepFreeze([
  // EC          M (bit 00)                L (bit 01)                   H (bit 10)                Q (bit 11 )
  /* Version */
  /*    1    */  [1, 26, 16],              [1, 26, 19],                 [1, 26, 9],               [1, 26, 13],
  /*    2    */  [1, 44, 28],              [1, 44, 34],                 [1, 44, 16],              [1, 44, 22],
  /*    3    */  [1, 70, 44],              [1, 70, 55],                 [2, 35, 13],              [2, 35, 17],
  /*    4    */  [2, 50, 32],              [1, 100, 80],                [4, 25, 9],               [2, 50, 24],
  /*    5    */  [2, 67, 43],              [1, 134, 108],               [2, 33, 11, 2, 34, 12],   [2, 33, 15, 2, 34, 16],
  /*    6    */  [4, 43, 27],              [2, 86, 68],                 [4, 43, 15],              [4, 43, 19],
  /*    7    */  [4, 49, 31],              [2, 98, 78],                 [4, 39, 13, 1, 40, 14],   [2, 32, 14, 4, 33, 15],
  /*    8    */  [2, 60, 38, 2, 61, 39],   [2, 121, 97],                [4, 40, 14, 2, 41, 15],   [4, 40, 18, 2, 41, 19],
  /*    9    */  [3, 58, 36, 2, 59, 37],   [2, 146, 116],               [4, 36, 12, 4, 37, 13],   [4, 36, 16, 4, 37, 17],
  /*   10    */  [4, 69, 43, 1, 70, 44],   [2, 86, 68, 2, 87, 69],      [6, 43, 15, 2, 44, 16],   [6, 43, 19, 2, 44, 20],
  /*   11    */  [1, 80, 50, 4, 81, 51],   [4, 101, 81],                [3, 36, 12, 8, 37, 13],   [4, 50, 22, 4, 51, 23],
  /*   12    */  [6, 58, 36, 2, 59, 37],   [2, 116, 92, 2, 117, 93],    [7, 42, 14, 4, 43, 15],   [4, 46, 20, 6, 47, 21],
  /*   13    */  [8, 59, 37, 1, 60, 38],   [4, 133, 107],               [12, 33, 11, 4, 34, 12],  [8, 44, 20, 4, 45, 21],
  /*   14    */  [4, 64, 40, 5, 65, 41],   [3, 145, 115, 1, 146, 116],  [11, 36, 12, 5, 37, 13],  [11, 36, 16, 5, 37, 17],
  /*   15    */  [5, 65, 41, 5, 66, 42],   [5, 109, 87, 1, 110, 88],    [11, 36, 12, 7, 37, 13],  [5, 54, 24, 7, 55, 25],
  /*   16    */  [7, 73, 45, 3, 74, 46],   [5, 122, 98, 1, 123, 99],    [3, 45, 15, 13, 46, 16],  [15, 43, 19, 2, 44, 20],
  /*   17    */  [10, 74, 46, 1, 75, 47],  [1, 135, 107, 5, 136, 108],  [2, 42, 14, 17, 43, 15],  [1, 50, 22, 15, 51, 23],
  /*   18    */  [9, 69, 43, 4, 70, 44],   [5, 150, 120, 1, 151, 121],  [2, 42, 14, 19, 43, 15],  [17, 50, 22, 1, 51, 23],
  /*   19    */  [3, 70, 44, 11, 71, 45],  [3, 141, 113, 4, 142, 114],  [9, 39, 13, 16, 40, 14],  [17, 47, 21, 4, 48, 22],
  /*   20    */  [3, 67, 41, 13, 68, 42],  [3, 135, 107, 5, 136, 108],  [15, 43, 15, 10, 44, 16], [15, 54, 24, 5, 55, 25],
  /*   21    */  [17, 68, 42],             [4, 144, 116, 4, 145, 117],  [19, 46, 16, 6, 47, 17],  [17, 50, 22, 6, 51, 23],
  /*   22    */  [17, 74, 46],             [2, 139, 111, 7, 140, 112],  [34, 37, 13],             [7, 54, 24, 16, 55, 25],
  /*   23    */  [4, 75, 47, 14, 76, 48],  [4, 151, 121, 5, 152, 122],  [16, 45, 15, 14, 46, 16], [11, 54, 24, 14, 55, 25],
  /*   24    */  [6, 73, 45, 14, 74, 46],  [6, 147, 117, 4, 148, 118],  [30, 46, 16, 2, 47, 17],  [11, 54, 24, 16, 55, 25],
  /*   25    */  [8, 75, 47, 13, 76, 48],  [8, 132, 106, 4, 133, 107],  [22, 45, 15, 13, 46, 16], [7, 54, 24, 22, 55, 25],
  /*   26    */  [19, 74, 46, 4, 75, 47],  [10, 142, 114, 2, 143, 115], [33, 46, 16, 4, 47, 17],  [28, 50, 22, 6, 51, 23],
  /*   27    */  [22, 73, 45, 3, 74, 46],  [8, 152, 122, 4, 153, 123],  [12, 45, 15, 28, 46, 16], [8, 53, 23, 26, 54, 24],
  /*   28    */  [3, 73, 45, 23, 74, 46],  [3, 147, 117, 10, 148, 118], [11, 45, 15, 31, 46, 16], [4, 54, 24, 31, 55, 25],
  /*   29    */  [21, 73, 45, 7, 74, 46],  [7, 146, 116, 7, 147, 117],  [19, 45, 15, 26, 46, 16], [1, 53, 23, 37, 54, 24],
  /*   30    */  [19, 75, 47, 10, 76, 48], [5, 145, 115, 10, 146, 116], [23, 45, 15, 25, 46, 16], [15, 54, 24, 25, 55, 25],
  /*   31    */  [2, 74, 46, 29, 75, 47],  [13, 145, 115, 3, 146, 116], [23, 45, 15, 28, 46, 16], [42, 54, 24, 1, 55, 25],
  /*   32    */  [10, 74, 46, 23, 75, 47], [17, 145, 115],              [19, 45, 15, 35, 46, 16], [10, 54, 24, 35, 55, 25],
  /*   33    */  [14, 74, 46, 21, 75, 47], [17, 145, 115, 1, 146, 116], [11, 45, 15, 46, 46, 16], [29, 54, 24, 19, 55, 25],
  /*   34    */  [14, 74, 46, 23, 75, 47], [13, 145, 115, 6, 146, 116], [59, 46, 16, 1, 47, 17],  [44, 54, 24, 7, 55, 25],
  /*   35    */  [12, 75, 47, 26, 76, 48], [12, 151, 121, 7, 152, 122], [22, 45, 15, 41, 46, 16], [39, 54, 24, 14, 55, 25],
  /*   36    */  [6, 75, 47, 34, 76, 48],  [6, 151, 121, 14, 152, 122], [2, 45, 15, 64, 46, 16],  [46, 54, 24, 10, 55, 25],
  /*   37    */  [29, 74, 46, 14, 75, 47], [17, 152, 122, 4, 153, 123], [24, 45, 15, 46, 46, 16], [49, 54, 24, 10, 55, 25],
  /*   38    */  [13, 74, 46, 32, 75, 47], [4, 152, 122, 18, 153, 123], [42, 45, 15, 32, 46, 16], [48, 54, 24, 14, 55, 25],
  /*   39    */  [40, 75, 47, 7, 76, 48],  [20, 147, 117, 4, 148, 118], [10, 45, 15, 67, 46, 16], [43, 54, 24, 22, 55, 25],
  /*   40    */  [18, 75, 47, 31, 76, 48], [19, 148, 118, 6, 149, 119], [20, 45, 15, 61, 46, 16], [34, 54, 24, 34, 55, 25],
])
