{
  "version": 3,
  "sources": ["esm/utils/deep-freeze.util.js", "esm/error-correction/qr-ec-block-table.constants.js", "esm/error-correction/ec-level.js", "esm/error-correction/qr-ec-block.utils.js", "esm/utils/alignment-pattern.util.js", "esm/utils/qr-util.js", "esm/utils/qr-bit-buffer.js", "esm/modes/number.mode.js", "esm/modes/alphanum.mode.js", "esm/utils/utf8-to-jis-table.constants.js", "esm/utils/utf8-to-jis-table.js", "esm/utils/text-decode-encode.util.js", "esm/modes/kanji.mode.js", "esm/modes/byte.mode.js", "esm/modes/mode-utils.util.js", "esm/utils/qr-math.util.js", "esm/utils/qr-polynomial.js", "esm/error-correction/ec-polynomial.js", "esm/utils/create-data.util.js", "esm/qr-code.js", "esm/utils/escape-xml.util.js", "esm/utils/css-colors.util.js", "esm/utils/css-qrcode-style.util.js", "esm/render/svg.render.js", "esm/render/canvas-2d-context.render.js", "esm/render/data-url-canvas.render.js", "esm/render/img-tag.render.js", "esm/utils/data-pre-processing.util.js", "esm/web-component/qr-code.element.css.generated.js", "esm/web-component/qr-code.element.js", "esm/entrypoint/browser.js"],
  "sourcesContent": ["/**\n * Recursively deep freeze an object with circular references\n * No shallow-frozen references expeced in the project, so no need to check for it\n * @template T\n * @param {DeepFrozen<T>} x - object structure to freeze\n * @returns {DeepFrozen<T>} - frozen object structure\n */\nexport function deepFreeze (x) {\n  Object.freeze(x)\n  x && Object.values(x).filter(x => !Object.isFrozen(x)).forEach(deepFreeze)\n  return x\n}\n\n/**\n * @template T\n * @typedef {T extends Function | boolean | number | string | null | undefined ? T :\n *  T extends Array<infer U> ? ReadonlyArray<DeepFrozen<U>> :\n *  T extends Map<infer K, infer V> ? ReadonlyMap<DeepFrozen<K>, DeepFrozen<V>> :\n *  T extends Set<infer S> ? ReadonlySet<DeepFrozen<S>> :\n * {readonly [P in keyof T]: DeepFrozen<T[P]>}\n * } DeepFrozen<T>\n *\n *  This types tells that the object and all their properties, recursively, are immutable.\n */\n", "/* eslint-disable no-multi-spaces -- tabular view of data present */\nimport { deepFreeze } from '../utils/deep-freeze.util.js'\n\n/**\n * The error correction block table.\n *\n * There are 3 to 6 elements per version, in groups of 3. In each group, the first number indicate the number of blocks, then the total width\u00B9, and finally the data width\u00B2.\n *\n * \u00B9 total width - total codewords count ( total width = data width + EC width\u00B3) of a block\n * \u00B2 data width - data codewords count\n * \u00B3 EC width - Error correction codewords count\n */\nexport const EC_BLOCK_TABLE = deepFreeze([\n  // EC          M (bit 00)                L (bit 01)                   H (bit 10)                Q (bit 11 )\n  /* Version */\n  /*    1    */  [1, 26, 16],              [1, 26, 19],                 [1, 26, 9],               [1, 26, 13],\n  /*    2    */  [1, 44, 28],              [1, 44, 34],                 [1, 44, 16],              [1, 44, 22],\n  /*    3    */  [1, 70, 44],              [1, 70, 55],                 [2, 35, 13],              [2, 35, 17],\n  /*    4    */  [2, 50, 32],              [1, 100, 80],                [4, 25, 9],               [2, 50, 24],\n  /*    5    */  [2, 67, 43],              [1, 134, 108],               [2, 33, 11, 2, 34, 12],   [2, 33, 15, 2, 34, 16],\n  /*    6    */  [4, 43, 27],              [2, 86, 68],                 [4, 43, 15],              [4, 43, 19],\n  /*    7    */  [4, 49, 31],              [2, 98, 78],                 [4, 39, 13, 1, 40, 14],   [2, 32, 14, 4, 33, 15],\n  /*    8    */  [2, 60, 38, 2, 61, 39],   [2, 121, 97],                [4, 40, 14, 2, 41, 15],   [4, 40, 18, 2, 41, 19],\n  /*    9    */  [3, 58, 36, 2, 59, 37],   [2, 146, 116],               [4, 36, 12, 4, 37, 13],   [4, 36, 16, 4, 37, 17],\n  /*   10    */  [4, 69, 43, 1, 70, 44],   [2, 86, 68, 2, 87, 69],      [6, 43, 15, 2, 44, 16],   [6, 43, 19, 2, 44, 20],\n  /*   11    */  [1, 80, 50, 4, 81, 51],   [4, 101, 81],                [3, 36, 12, 8, 37, 13],   [4, 50, 22, 4, 51, 23],\n  /*   12    */  [6, 58, 36, 2, 59, 37],   [2, 116, 92, 2, 117, 93],    [7, 42, 14, 4, 43, 15],   [4, 46, 20, 6, 47, 21],\n  /*   13    */  [8, 59, 37, 1, 60, 38],   [4, 133, 107],               [12, 33, 11, 4, 34, 12],  [8, 44, 20, 4, 45, 21],\n  /*   14    */  [4, 64, 40, 5, 65, 41],   [3, 145, 115, 1, 146, 116],  [11, 36, 12, 5, 37, 13],  [11, 36, 16, 5, 37, 17],\n  /*   15    */  [5, 65, 41, 5, 66, 42],   [5, 109, 87, 1, 110, 88],    [11, 36, 12, 7, 37, 13],  [5, 54, 24, 7, 55, 25],\n  /*   16    */  [7, 73, 45, 3, 74, 46],   [5, 122, 98, 1, 123, 99],    [3, 45, 15, 13, 46, 16],  [15, 43, 19, 2, 44, 20],\n  /*   17    */  [10, 74, 46, 1, 75, 47],  [1, 135, 107, 5, 136, 108],  [2, 42, 14, 17, 43, 15],  [1, 50, 22, 15, 51, 23],\n  /*   18    */  [9, 69, 43, 4, 70, 44],   [5, 150, 120, 1, 151, 121],  [2, 42, 14, 19, 43, 15],  [17, 50, 22, 1, 51, 23],\n  /*   19    */  [3, 70, 44, 11, 71, 45],  [3, 141, 113, 4, 142, 114],  [9, 39, 13, 16, 40, 14],  [17, 47, 21, 4, 48, 22],\n  /*   20    */  [3, 67, 41, 13, 68, 42],  [3, 135, 107, 5, 136, 108],  [15, 43, 15, 10, 44, 16], [15, 54, 24, 5, 55, 25],\n  /*   21    */  [17, 68, 42],             [4, 144, 116, 4, 145, 117],  [19, 46, 16, 6, 47, 17],  [17, 50, 22, 6, 51, 23],\n  /*   22    */  [17, 74, 46],             [2, 139, 111, 7, 140, 112],  [34, 37, 13],             [7, 54, 24, 16, 55, 25],\n  /*   23    */  [4, 75, 47, 14, 76, 48],  [4, 151, 121, 5, 152, 122],  [16, 45, 15, 14, 46, 16], [11, 54, 24, 14, 55, 25],\n  /*   24    */  [6, 73, 45, 14, 74, 46],  [6, 147, 117, 4, 148, 118],  [30, 46, 16, 2, 47, 17],  [11, 54, 24, 16, 55, 25],\n  /*   25    */  [8, 75, 47, 13, 76, 48],  [8, 132, 106, 4, 133, 107],  [22, 45, 15, 13, 46, 16], [7, 54, 24, 22, 55, 25],\n  /*   26    */  [19, 74, 46, 4, 75, 47],  [10, 142, 114, 2, 143, 115], [33, 46, 16, 4, 47, 17],  [28, 50, 22, 6, 51, 23],\n  /*   27    */  [22, 73, 45, 3, 74, 46],  [8, 152, 122, 4, 153, 123],  [12, 45, 15, 28, 46, 16], [8, 53, 23, 26, 54, 24],\n  /*   28    */  [3, 73, 45, 23, 74, 46],  [3, 147, 117, 10, 148, 118], [11, 45, 15, 31, 46, 16], [4, 54, 24, 31, 55, 25],\n  /*   29    */  [21, 73, 45, 7, 74, 46],  [7, 146, 116, 7, 147, 117],  [19, 45, 15, 26, 46, 16], [1, 53, 23, 37, 54, 24],\n  /*   30    */  [19, 75, 47, 10, 76, 48], [5, 145, 115, 10, 146, 116], [23, 45, 15, 25, 46, 16], [15, 54, 24, 25, 55, 25],\n  /*   31    */  [2, 74, 46, 29, 75, 47],  [13, 145, 115, 3, 146, 116], [23, 45, 15, 28, 46, 16], [42, 54, 24, 1, 55, 25],\n  /*   32    */  [10, 74, 46, 23, 75, 47], [17, 145, 115],              [19, 45, 15, 35, 46, 16], [10, 54, 24, 35, 55, 25],\n  /*   33    */  [14, 74, 46, 21, 75, 47], [17, 145, 115, 1, 146, 116], [11, 45, 15, 46, 46, 16], [29, 54, 24, 19, 55, 25],\n  /*   34    */  [14, 74, 46, 23, 75, 47], [13, 145, 115, 6, 146, 116], [59, 46, 16, 1, 47, 17],  [44, 54, 24, 7, 55, 25],\n  /*   35    */  [12, 75, 47, 26, 76, 48], [12, 151, 121, 7, 152, 122], [22, 45, 15, 41, 46, 16], [39, 54, 24, 14, 55, 25],\n  /*   36    */  [6, 75, 47, 34, 76, 48],  [6, 151, 121, 14, 152, 122], [2, 45, 15, 64, 46, 16],  [46, 54, 24, 10, 55, 25],\n  /*   37    */  [29, 74, 46, 14, 75, 47], [17, 152, 122, 4, 153, 123], [24, 45, 15, 46, 46, 16], [49, 54, 24, 10, 55, 25],\n  /*   38    */  [13, 74, 46, 32, 75, 47], [4, 152, 122, 18, 153, 123], [42, 45, 15, 32, 46, 16], [48, 54, 24, 14, 55, 25],\n  /*   39    */  [40, 75, 47, 7, 76, 48],  [20, 147, 117, 4, 148, 118], [10, 45, 15, 67, 46, 16], [43, 54, 24, 22, 55, 25],\n  /*   40    */  [18, 75, 47, 31, 76, 48], [19, 148, 118, 6, 149, 119], [20, 45, 15, 61, 46, 16], [34, 54, 24, 34, 55, 25],\n])\n", "export const CORRECTION_LEVEL_L = 1\nexport const CORRECTION_LEVEL_M = 0\nexport const CORRECTION_LEVEL_Q = 3\nexport const CORRECTION_LEVEL_H = 2\n\nconst correctionLevelNames = ['Medium', 'Low', 'High', 'Quartile']\n\n/** @type {Record<string, { bit: number, name: string }>} */\nconst correctionLevelMap = correctionLevelNames.reduce((acc, name, bit) => {\n  const result = { bit, name }\n  return { ...acc, [name.toUpperCase()]: result, [name[0]]: result }\n}, {})\n\n/**\n * Get error correction level from string\n * @param {string} string - correction level text\n * @throws error on invalid correction level\n * @returns {{ bit: number }} correction level object\n */\nexport function fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error(`expected string instead of ${typeof string}`)\n  }\n\n  const result = correctionLevelMap[string.toUpperCase()]\n  if (!result) {\n    const validKeys = [1, 0, 3, 2].flatMap(idx => [correctionLevelNames[idx][0], correctionLevelNames[idx]]).map(name => `\"${name}\"`).join(', ')\n    throw new Error(`Unknown Error Correction Level: \"${string}\" expected one of the following values (case insensitive): ${validKeys}`)\n  }\n  return result\n}\n\n/**\n * Checks if error correction level is valid.\n *\n * Error corection is valid if `string` is one of the following values (case insensitive): `L`,`Low`,`M`,`Medium`,`Q`,`Quartile`,`H` and `High`\n * @param {string} string - target string\n * @returns {boolean} true if correction level is valid, false otherwise\n */\nexport function isValid (string) {\n  if (typeof string !== 'string') {\n    return false\n  }\n  return Object.hasOwn(correctionLevelMap, string.toUpperCase())\n}\n", "import { EC_BLOCK_TABLE } from './qr-ec-block-table.constants.js'\nimport { CORRECTION_LEVEL_M, CORRECTION_LEVEL_Q } from './ec-level.js'\n\n/**\n * @param {number} totalCount - total codewords capacity\n * @param {number} dataCount - data codewords capacity\n * @returns {Readonly<ECBlock>} created Error Correction block object\n */\nconst ECBlock = (totalCount, dataCount) => Object.freeze({ totalCount, dataCount, ecCount: totalCount - dataCount })\n\n/**\n * @param {number} typeNumber - qr code version\n * @param {number} errorCorrectionLevel - numeric value of error Correction Level\n */\nconst queryECBlocks = function (typeNumber, errorCorrectionLevel) {\n  const index = (typeNumber - 1) * 4 + errorCorrectionLevel\n  const rawEcBlock = EC_BLOCK_TABLE[index]\n\n  const length = rawEcBlock.length / 3\n\n  const list = []\n\n  for (let i = 0; i < length; i += 1) {\n    const count = rawEcBlock[i * 3 + 0]\n    const totalCount = rawEcBlock[i * 3 + 1]\n    const dataCount = rawEcBlock[i * 3 + 2]\n\n    for (let j = 0; j < count; j += 1) {\n      list.push(ECBlock(totalCount, dataCount))\n    }\n  }\n\n  return Object.freeze(list)\n}\n\n/**\n * @param {number} typeNumber - qr code version\n * @param {number} errorCorrectionLevel - numeric value of error Correction Level\n * @returns {ECBlocksInfo} block info\n */\nfunction buildECBlocksInfo (typeNumber, errorCorrectionLevel) {\n  const blocks = queryECBlocks(typeNumber, errorCorrectionLevel)\n  let totalCount = 0\n  let totalDcCount = 0\n  let totalEcCount = 0\n  let maxDcCount = 0\n  let maxEcCount = 0\n\n  for (const block of blocks) {\n    totalCount += block.totalCount\n    totalDcCount += block.dataCount\n    totalEcCount += block.ecCount\n    maxDcCount = Math.max(maxDcCount, block.dataCount)\n    maxEcCount = Math.max(maxEcCount, block.ecCount)\n  }\n\n  return Object.freeze({ blocks, totalCount, totalDcCount, totalEcCount, maxDcCount, maxEcCount })\n}\n\n/**\n * The idea was to pre-calculate everything on the EC block table, but it is better to memoize to reduce JS hydration\n */\nconst memoEcBlockInfo = /** @type {ECBlocksInfo[]} */([])\n\n/**\n * @param {number} typeNumber - qr code version\n * @param {number} errorCorrectionLevel - numeric value of error Correction Level\n * @returns {ECBlocksInfo} error correction blocks information\n */\nexport function ECBlocksInfo (typeNumber, errorCorrectionLevel) {\n  versionEcCheck(typeNumber, errorCorrectionLevel)\n  const index = (typeNumber - 1) * 4 + errorCorrectionLevel\n  const memo = memoEcBlockInfo[index]\n  if (memo) {\n    return memo\n  }\n  const result = buildECBlocksInfo(typeNumber, errorCorrectionLevel)\n  memoEcBlockInfo[index] = result\n  return result\n}\n\n/**\n * @param {number} typeNumber - qr code version\n * @param {number} errorCorrectionLevel - numeric value of error Correction Level\n */\nfunction versionEcCheck (typeNumber, errorCorrectionLevel) {\n  if (\n    typeof errorCorrectionLevel !== 'number' ||\n    typeof typeNumber !== 'number' ||\n    errorCorrectionLevel < CORRECTION_LEVEL_M ||\n    errorCorrectionLevel > CORRECTION_LEVEL_Q ||\n    typeNumber < 1 ||\n    typeNumber > 40\n  ) {\n    throw Error(`bad rs block @ typeNumber:${typeNumber}', errorCorrectionLevel: ${errorCorrectionLevel}`)\n  }\n}\n\n/**\n * @typedef {object} ECBlocksInfoData\n * @property {ECBlocks} blocks - total codewords count capacity\n * @property {number} totalCount - total codewords count\n * @property {number} totalDcCount - total data codewords count\n * @property {number} totalEcCount - total error correction codewords count\n * @property {number} maxDcCount - max data codewords count capacity\n * @property {number} maxEcCount - max error codewords count capacity\n */\n\n/**\n * @typedef {Readonly<ECBlocksInfoData>} ECBlocksInfo Error Correction blocks information\n */\n\n/**\n * @typedef {object} ECBlockData - Error Correction block\n * @property {number} totalCount - total codewords count capacity\n * @property {number} dataCount - data codewords count capacity\n * @property {number} ecCount - error correction codewords count capacity\n */\n\n/**\n * @typedef {Readonly<ECBlockData>} ECBlock Error Correction block\n */\n\n/**\n * @typedef {readonly ECBlock[]} ECBlocks Error Correction blocks\n */\n", "/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n * @param  {number} version - QR Code version\n * @returns {number[]} Array of coordinate\n */\nexport function calculateCoordinates (version) {\n  if (version === 1) return []\n  const intervals = Math.floor(version / 7) + 1\n  const distance = 4 * version + 4 // between first and last pattern\n  const step = version === 32 ? 26 : Math.ceil(distance / intervals / 2) * 2\n  return [6, ...Array.from({ length: intervals }, (_, index) => distance + 6 - (intervals - 1 - index) * step)]\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link calculateCoordinates}\n * and filtering out the items that overlaps with finder pattern\n * @param  {number} version - QR Code version\n * @returns {PatternPositions} list of pattern positions\n */\nexport function calculatePositions (version) {\n  /** @type {Point[]} */\n  const coords = []\n  const pos = calculateCoordinates(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push(Object.freeze([pos[i], pos[j]]))\n    }\n  }\n\n  return Object.freeze(coords)\n}\n\n/**\n * Used to memoize getPatternPosition calls\n * @type {PatternPositions[]}\n */\nconst positionsMemo = []\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n * @param {number} version - QR code version\n * @returns {PatternPositions} list of pattern positions\n */\nexport function getPatternPositions (version) {\n  if (!Number.isInteger(version) || version < 1 || version > 40) {\n    throw Error(`invalid pattern @ version:${version}'`)\n  }\n  // eslint-disable-next-line sonarjs/no-empty-collection -- its a nullish coalesce assignment, it is expected\n  return (positionsMemo[version - 1] ??= calculatePositions(version))\n}\n\n/**\n * @typedef {readonly [number, number]} Point\n */\n\n/**\n * @typedef {readonly Point[]} PatternPositions\n */\n", "/**\n * Get BCH code digit\n * @param {number} data - numeric data\n */\nfunction getBCHDigit (data) {\n  let digit = 0\n  while (data !== 0) {\n    digit += 1\n    data >>>= 1\n  }\n  return digit\n};\n\nconst G15 = 0b000010100110111\nconst G18 = 0b001111100100101\nconst G15_MASK = 0b101010000010010\n\n/**\n * Get type info using Reed\u2013Solomon error correction with Bose\u2013Chaudhuri\u2013Hocquenghem codes (BCH codes)\n * @param {number} data - masked error Correction Level info\n * @returns {number} bits of BHC code of type info\n */\nexport function getBCHTypeInfo (data) {\n  let d = data << 10\n  while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n    d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15)))\n  }\n  return ((data << 10) | d) ^ G15_MASK\n};\n\n/**\n * @param {number} data - QR code version\n * @returns {number} bits of BHC code of QR code version\n */\nexport function getBCHTypeNumber (data) {\n  let d = data << 12\n  while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n    d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18)))\n  }\n  return (data << 12) | d\n};\n\n/** @type {((i: number, j: number) => boolean)[]} */\nconst maskPatternFunctions = [\n  (i, j) => (i + j) % 2 === 0, // QRMaskPattern.PATTERN000\n  (i, _) => i % 2 === 0, // QRMaskPattern.PATTERN001\n  (_, j) => j % 3 === 0, // QRMaskPattern.PATTERN010\n  (i, j) => (i + j) % 3 === 0, // QRMaskPattern.PATTERN011\n  (i, j) => (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0, // QRMaskPattern.PATTERN100\n  (i, j) => (i * j) % 2 + (i * j) % 3 === 0, // QRMaskPattern.PATTERN101\n  (i, j) => ((i * j) % 2 + (i * j) % 3) % 2 === 0, // QRMaskPattern.PATTERN110\n  (i, j) => ((i * j) % 3 + (i + j) % 2) % 2 === 0, // QRMaskPattern.PATTERN110\n]\n\n/**\n * @param {number} maskPattern - mask pattern value\n * @returns {((i: number, j: number) => boolean)} mask pattern function\n */\nexport function getMaskFunction (maskPattern) {\n  const result = maskPatternFunctions[maskPattern]\n  if (!result) {\n    throw Error(`bad maskPattern: ${maskPattern}`)\n  }\n  return result\n};\n", "export class QrBitBuffer {\n  /** @type {number[]} */\n  #byteBuffer = []\n  #bitLength = 0\n\n  /**\n   * Append bit sequence to bit buffer\n   * @param {number} num - bit sequence as number\n   * @param {number} length - bit sequence length\n   */\n  put (num, length) {\n    const byteBuffer = this.#byteBuffer\n    const bitLength = this.#bitLength\n    const newBitLength = bitLength + length\n    const newBufferLenght = (newBitLength + 7) >> 3\n\n    let restBits = Math.min((byteBuffer.length << 3) - bitLength, length)\n    let bufIndex = bitLength >> 3\n    while (byteBuffer.length < newBufferLenght) {\n      byteBuffer.push(0)\n    }\n    let i = 0\n    if (restBits === 0) {\n      restBits = Math.min(8, length)\n    }\n    while (i < length) {\n      const shiftLeft = bufIndex === newBufferLenght - 1 ? (8 - restBits) : 0\n      byteBuffer[bufIndex] |= (num << shiftLeft >>> (length - i - restBits)) & (0xff)\n      i += restBits\n      bufIndex++\n      restBits = Math.min(8, length - i)\n    }\n    this.#bitLength = newBitLength\n  };\n\n  get byteBuffer () {\n    return this.#byteBuffer.slice()\n  }\n\n  toByteArray () {\n    return Uint8Array.from(this.#byteBuffer)\n  }\n\n  get bitLength () {\n    return this.#bitLength\n  }\n\n  /**\n   * Get bit value at index, value is either 0 or 1\n   * @param {number} index - index position\n   * @returns {number} bit value\n   */\n  getBitAt (index) {\n    const bufIndex = index >> 3\n    return (this.#byteBuffer[bufIndex] >>> (7 - index & 0b111)) & 1\n  }\n\n  /**\n   * @param {0|1|boolean} bit bit to put\n   */\n  putBit (bit) {\n    const byteBuffer = this.#byteBuffer\n    const bitLength = this.#bitLength\n    const bufIndex = bitLength >> 3\n    if (byteBuffer.length <= bufIndex) {\n      byteBuffer.push(0)\n    }\n\n    if (bit) {\n      byteBuffer[bufIndex] |= (0x80 >>> (bitLength & 0b111))\n    }\n    this.#bitLength += 1\n  }\n}\n", "import { MODE_NUMBER } from './mode-bits.constants.js'\n\n/**\n * Create QR code numeric mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject} created mode object\n */\nexport const QrNumber = (data) => Object.freeze({\n  data,\n  mode: MODE_NUMBER,\n  length: data.length,\n  write: writeDataToBitBuffer.bind(null, data),\n})\n\n/**\n * Writes numeric data to bit buffer that will be used to generate the QR code\n * @param {string} data - QrNumber mode object data\n * @param {import(\"./../utils/qr-bit-buffer.js\").QrBitBuffer} buffer - target bit buffer\n */\nfunction writeDataToBitBuffer (data, buffer) {\n  let i = 0\n\n  while (i + 2 < data.length) {\n    buffer.put(strToNum(data.substring(i, i + 3)), 10)\n    i += 3\n  }\n\n  if (i < data.length) {\n    if (data.length - i === 1) {\n      buffer.put(strToNum(data.substring(i, i + 1)), 4)\n    } else if (data.length - i === 2) {\n      buffer.put(strToNum(data.substring(i, i + 2)), 7)\n    }\n  }\n}\n\n/**\n * @param {string} s - target string\n * @returns {number} `s` as number\n */\nfunction strToNum (s) {\n  let num = 0\n  for (let i = 0, e = s.length; i < e; i++) {\n    num = num * 10 + charToNum(s.charAt(i))\n  }\n  return num\n};\n\n/**\n *\n * @param {string} c - target character\n * @returns {number} `c` as number\n */\nfunction charToNum (c) {\n  if (c >= '0' && c <= '9') {\n    return c.charCodeAt(0) - zeroCharCode\n  }\n  throw Error(`illegal char: ${c}`)\n};\n\nconst zeroCharCode = '0'.charCodeAt(0)\n", "import { MODE_ALPHA_NUM } from './mode-bits.constants.js'\n\n/**\n * Create QR code alphanumeric mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject} created mode object\n */\nexport const QrAlphaNum = (data) => Object.freeze({\n  data,\n  mode: MODE_ALPHA_NUM,\n  length: data.length,\n  write: writeDataToBitBuffer.bind(null, data),\n})\n\n/**\n * Writes alphanumeric data to bit buffer that will be used to generate the QR code\n * @param {string} data - QrAlphaNum mode object data\n * @param {import(\"./../utils/qr-bit-buffer.js\").QrBitBuffer} buffer - target bit buffer\n */\nfunction writeDataToBitBuffer (data, buffer) {\n  let i = 0\n\n  while (i + 1 < data.length) {\n    buffer.put(\n      getCode(data.charAt(i)) * 45 +\n          getCode(data.charAt(i + 1)), 11)\n    i += 2\n  }\n\n  if (i < data.length) {\n    buffer.put(getCode(data.charAt(i)), 6)\n  }\n}\n\n/**\n * Get value for character `c`\n * @param {string} c - target character\n * @returns {number} character code point\n */\nfunction getCode (c) {\n  if (c >= '0' && c <= '9') {\n    return c.charCodeAt(0) - '0'.charCodeAt(0)\n  } else if (c >= 'A' && c <= 'Z') {\n    return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10\n  } else {\n    switch (c) {\n      case ' ' : return 36\n      case '$' : return 37\n      case '%' : return 38\n      case '*' : return 39\n      case '+' : return 40\n      case '-' : return 41\n      case '.' : return 42\n      case '/' : return 43\n      case ':' : return 44\n      default :\n        throw Error(`illegal char: ${c}`)\n    }\n  }\n}\n", "export default {\n  21: '772h>1e,776A>1f',\n  2121: '44CA>2,77yM,77yO,44O7,7[7[y[a>;1fB;]]],44Kb>1,wrQ=,772A,wqg=,7[7[y+,+j,y/]],4[4[O9>1,Kd>1,CD]],5Lud,4[4CF>2,4O8,oCV,oCQ],7[7[yP,y8,2e]],4oCW:4oil,772c,4[o[C[;mlY;>1,c>1]]],77yI>1,44CU>1,7[7[y7,y9,2b,2d]],44CI>9,77yL,77yN,w[rE=,5c=,7c=],77yd,4omg,77yc,77ye,4[o[mm>1,ie,i0],pmC,pmA],wrA=,4oCy>1,4oSD,7[7[+l,yE,+g>1,y[;FDGKg;]]],wqc=,4[p[iG,iF,e[;LPOH;]]]',\n  2221: '4[p[eG,a[;hgzy98;]],oC7,4CS,o[a[S,Q>1,T]],4CT]',\n  2272: '4[oSr,oCw,p[m[;vtq;]],oCg>1],wrY=',\n  2330: '77yQ>9',\n  2341: '77yh>19',\n  2361: '772B>19',\n  2421: '44GB>3e,44KA>13',\n  2521: '44Kh>1e,44OA>36',\n  2621: 'zpE=>10,zqM=>6',\n  2641: 'z[rE=>e,4A=>1,4M=>6]',\n  2721: '0[JA=>5,IE=,JY=>19]',\n  2751: '0[LA=>5,ZE=,LY=>9,YA=>f]',\n  2821: '4[p[S[;ACMQYUcsk08BDPTbXjzr7;],WL,S[;gvo3/dwl4;],WC]]',\n  3021: '5[Lqc,ZSW,aiD],6Zi/,5[ZOA,oSb,oyo,ae2],6[YCi,JG1,Iyc],5[6mQ,oKq,o+h,ril,pet],6[JGm,Iqm,a+1],5[qKT,Zyn,pah,omx,a6b,aeQ],6Jm7,6aO0,57Wi,57a+,6a6O,5oiW,57Kf,6KK3,5[a6J,bq1,oyJ,pqX,qGI],6ZeH,6Z6N,5[p2P,L[ul,yK,2N,6d],YGJ,Zuy,a[S3,eU,iB],bCJ,o[Of,SP,Ww],piT,qSF,4K6,5WP,5Ww,6e7,7at,7ev],6[IOD,JCO,KGj,KyC,YGV,YG6],5[Yy7,LqV,Lql,Z+f],6IKy,6YOB,5[6Ov,LiA,aOx,rqi],6YC4,56iy,6[Iyo,IqL,bCv],5[YWB,Y2w,Z[K9,Oh,ug],ae7,byV],6aOy,5rer,6IOk,6JSt',\n  3121: '6[Z[mi,mw,qg,+7]],5[ZCL,Y+z,a6H,4OP,769],6L+C,6Zuo,5Y2v,6bWc,5[6q6,LiR,6KT],6Ie8,5[rim,ZiY,ZSE,qyd],6JSa,6bC7,5[ael,Y6p,rWm,5Oc],6ZaP,5ZmC,5LqR,6[YGL,Zuy,I2P,aSM],5[Y+h,Za2,ayw,b2x,pig,puz,qCE,r[C4,Oz,Sp],5Gb,5uI,6mO],6[aC0,Iux,KGb,Kmg,Yut],5[ray,5ar,5uK],6aeF,5oKm,6[KyB,LaK,Zay],5[qaO,Y6t,YaG,ZyS,a[Cw,WE,60],bu2,o[Co,6p,+0],rK/,ryU,4[KO,SU,WZ,eV,y/],7iB],6[Im2,IuR,JaX,YGg,Ymb,bSb],5[aGp,pa8,rGa,5Sl,Ye5,aSu,aWl,b6A,b+c]',\n  3221: '5[oq8,pe6,q[iq,yn,60],46L,7+B],6[KWW,b[Ss,SO,uE]],5bKh,5rKW,6I27,5[YSE,bGL,oa2],6IeG,5[qG2,4mh,LmZ,L+6,Y24,oGp,rip,6mP],6Z+z,5[LiL,YyW,L[uu,2V,y9,6h,2z],Yqg,Y+v,ZiJ,a[SP,uB,62,+h],6eR,p[qH,6c,62],q2M,rKz,4Gr,4+C,6[aN,a+,i8,6H]],6[I[qx,ub,yE,23,+v,+T],J2m,Kqy],5Zip,6[LKo,L+m,YGO,Zye,JqK],5[L+E,bOo,oiR,4mZ,5S7],6[Iel,Iq9,Ju+,LOA,ZuF,aST,aeV],5LuL,5Lya,6Kej,5[Zue,aGK,aOK,bu7,b+r,o[Cq,KU,Gi,eQ,iS,uQ],pS5]',\n  3321: '6a2B,5[pmm,qKw,rW3,4Gw,5WM,5qG,7W1],6[Iql,J+5,ZaL,ZqO,LKd],5[Yex,Yq+,aSW,ZKz,a6z,bSW,oWo,qaC,rav,6KN],6[JOL,KGX,Kmy,Y6n,aq4],5rWs,6aao,6JuZ,5Z6j,5p+/,6JuO,6YiO,5[YqD,ZqH,ZCE,buT,ouh,pK5,q[C8,C4,67],42y,6K6,6mr],6[Kaa,KeS,LWr,LyD,YOt,Z[aj,qU,2p]],5[a2m,bKz,qW9],6aGN>1,5[o6b,6yg,q[ir,m/,K2]],6bCN,5[r2f,Ymy,Zad,oGw,ous,r[S7,iH,uR]],6[JGb,KSQ,L2E],5LiU,6bC5,5[Y+2,qSb,qi6],6Z6E,5[qCq,YWc,6uD],6[JKy,Yec,Y6M],5Zmb,6bSo,5qCi,6IyF,6JCx',\n  3421: '57Kl,5YiI,6IuF,5[5Om,Lm+,L6D,Yag,a+S,Y[iK,uY,un],be7,Zaa,a[Cq,em,6M,6Y,+b],bmy,bm5,o[Kj,Sf,Wj,a+,+b],pWi,p+R,q[GT,O6,y+,2T],r[GX,yi,6X,2F],5[Kw,SY,uj,yL],6u/,66h,7[Ch,ep,y2,+w]],6[I[Kd,mm,6e],Kaz,KuM,LKr,YKE,Z[GR,a[;TRi;],ml,+T],aSo,IiY],5[Li4,ZCr,bK4,beM,46p,5mM,5y8,bKp,7+r],6[LSL,ZuB,a[CR,GU,GY]],5[LyB,LyO,Y2x,Z[ac,mo,+6],a[WH,yJ,+E],b[KQ,iM,m+,+M],o+u,p[y6,eX,ei,yf],qOL,qOE]',\n  3521: '5[qmf,biw,q+F,rCX,rG9,5W/,6WI,a2j,6iA,7SA,b69],6[KaP,KiY,L[K0,W3,uM,yd],a[Oi,iO,y8]],5[LqA,YG9,YSA,aaT,a6c,oiv,oqA,pOs,qy6,4qg,5aR,6WH,76p],6[J+7,Kq8,K2w],5o6s,6I+K,6Z6g,5[Z[CJ,CD,ar],qGU,qmY],6Kmw,56Cn,5p21,6buN,5Y20,5a6i,6[ISa,JmQ,YCG],5[L[iY,mF,uH,yR],Y+K,ZC4,a6u,byT,oCl,pWR,py9,r[GC,Gy,Oj],4G4,5CD,6[m2,qu,yI],7[Sa,O+,Wm],pen,4mb,Y67,bGF,beo,o[uS,ug,yZ],rig],6[Jma,Kix,Led,Yu4],5ryB,56am,6a2a,5Lqo,5Lqr>1',\n  3621: '5[L6b,L6g,YOR,YWH,6u2,Y[Wx,e2,2U,yh,2/,+r],Zas,aKD,b[Oh,y3,2K],o[Cv,GQ,Gt,yf],pWZ,qmL,rOB,4uC,4ut,5+v],6[I[O4,SF,iI],JWO,YO3,Y+h,Z+/,aWX,ama],5[Luw,Yed,bCt,pqB,qWt,bGA,puy,qW1,46J,qGQ,7KB,YOF,Yuk,Z2H,be+],6Yym,5[pak,qyj,qy9,5C0,6[aB,a9,2L],7eK],6[Iq5,I+M,K[G/,Wf,y5],L+R,YeR],5ZCf,6YqA,5[Lmd,Y[C2,+l,y6],4uX,46W,5+p],6[Ium,Lqv,a[e[;GIS;]]],5YW3,5oSa,6Jme,5[Zaw,6m6,YG2,a+T],6YGH,6ZqF,5Liy,5qub,6Yen,5bGR,5bGI',\n  3721: '5[o6Y,6qf,rKT],6Z20,6L2h,56qq,54aK,6ZqI,5[7KC,qCX,7mw,qGR],6Y2s,5Yuy,5ZCb,6Jar,6KiT,576k,6LuN,6YOh,5Y2m,6KKI,5[6WB,L+C,Y[K+,iR,WE],ZWT,Zyt,4+q,Z6L,aWR,b2i,b6E,o[G1,W2,Wn,ap,6y],p[C6,Ws,mv],qGC,riT,5Wm,6i9,7[O7,WM,aZ,mL,2r]],6[IyO,I2K,JuN,K[iI,mj,2m],Lu9,aCa,baP,Iq4,L+O,a+o],5[YqH,oif,pKD,r+A],6ZqZ,5[qGB,YKR,qyg,rG6,r2U,6m0,7WQ],6KGA,6Kij,5[pyI,Lu2,Y[C5,Cm,Gl,W8,i4,mj],Zan,ZyP,aCF,auM,bu6,o[ay,e4,uz,2y]]',\n  3821: '5[qSc,qip,4[m9,qs,yu],6CU,6Gv,7W5,5yM],6[IKp,KaL,KyZ,LOi,LuS,YGj,Y21,Zm6,aGV,aiT,bm4],5[Y[WD,6f,6z],bm7,bym,rib,rqQ,46E,4++,7WD],6[Ii3,KiA,Ku6,ZmQ],5[LmO,YCL,Y+k,ZG8,Zu6,aeR,a2k,b[ex,qr,yn],oi4,pWF,p6v,rmW,4uQ,7OK],6[KK0,I[Kh,Oh,+w],JmO,KqH,Leo,Yi3,ZuH,aGn,byT],5[L[qU,qS,yN],Y2I,ZGJ,ZC+,aiv,b6M,b6h,oKf,qKn,qqO,5Ga,6KB],6[K[qe,qk,23],YaQ],5Lme,6a+J,5[L[qk,28,6v],Y[CZ,CW,WJ,Ws,qf,q5,u+,6a,+j],ZCR]',\n  3921: '5[Z[CO,aJ,2R,6i],a[W9,2U,2d,6P],b[e[;ln3;],m4,q[;Da3;],yY],o[GS,WM,qX,uY,6n],p[S7,iC,mD,u0,2t],q[Ch,KX,eL],r[Gf,Sq,Wp,iv,qd],5Sy,5qH,6Gs,6i/,7[Og,SF,SY,We,ax]],6[I[CV,CD,Kv,Kx,WU,aP,iq,2S],K[GM,Gh,yb],LKi,LO8,Y[OK,W1,mx]],56C/,6[Yu8,Zak,ZmN,a[CF,aZ,uY],bS7],5[Y[mb,qr,+3],ZCI,aOV,ou3,r+g],6[LGq,L2f,bq5],5[YWL,Yi7,ZGK,Zu9,6mA],6[YW3,bWg,buS],542E,5ryJ,6IWw,5[5SR,b+9,oOa],6aqo,54ub,6L68',\n  4021: '5[r6E,pG6,a+4,LiW,4Cs,5Wd,piv,Y[eE,i2,ui],aeT,b6B,oCn,oiQ,p[S/,W0,if,m0],q[Oy,CW,2j],riF,4my,5Sf,5ub,7K+],6IGW,5aOw,6[K[O9,W/,qg,qT,uL],YCd,YaS,Z2S,Z2Z],5paJ,56iO,6ISG,6Zq7,5[bit,oOc,oia,p[al,iU,6Q],5+z,6mN,7GN,7i+],6[ISK,L[Ks,Wk,eh,mf]],5[6Kp,YiH,ouZ,o6l,pGC,oqY],6Kit,56qD,56+A,6Kqs,6Zuq,57W2,6IiM,6J2J,5[LuZ,Y[WI,2D,2g],a6j,b[CC,CW,ed],oim,omH,pKw,qCT,qC0,r[OJ,WF,SX],p+T,r2c,4WO,4W9,peL,6m/,66t,7ea]',\n  4121: '57mK,576o,6[I[W6,ib,i5],Jam,Kmu,LOO,Le1,Y[G4,G3,qt,qR],ZaD,a6u],5[YmN,ZaE,ry4,4S2,YWo,6aF,7mV],6Iaz,5[7OO,ZmM,aGR,bKo,o6q,pu+,pu9,qWa,4uZ,5aP,5aO,6[SO,WW,ef],7[KX,Sg,WE]],6[JiH,Ki0,Zi7,YGh,byg],5[Y[On,m1,+M,+i,CJ],Zaq,aOu,aWP,4i9,a6L,bGk,Yyd,o[Oj,Oz,2c,6D,y/,67],p[ON,ep,u5],bej,qeN,qe9,ryV,4el,LqJ,5ep,5u4,6qT,7[Of,eP,ac]],6[I[Gh,2J,2Y],J[Gs,K8,e7],KOF,LWw,Y[CB,Gt,6X],Zyc,aiS],5[YOP,aKX,oaO]',\n  4221: '6[IeT,JS1,LSI,YCg],5[L+D,Y[G0,mH,2z],oGv,o2J,p2f,ris],6Laz,6YCf,5L+X,5bGe,6LOK,5[peP,7aa,Y2S],6KKW,5[YW2,o+D,a2Y,a2r,bCK,pCN,p2R],6YGc,5[LuW,aSa,aSq,rGw],6KmR,5[ZS+,aCV,aal,oOw,omT,p+B],6Ii1,5qWV,6[ZmA,aeE,aio],5[L2T,aCG,a++],6ICQ,5[b[Kx,iv,6F],o[Cg,WL,i0],pu/,rOw,rue],6[I[OO,W/,uU],KKL,LK4,YCA,YCu,ZqK,bub,a+b],5[Luj,Y+w,aSn,6ys],6[YaN,aGM,be5],5[rud,4Cn,Y2T,ZWE,a6F,o[mY,qe,uT],rKi,r+v,5Ci],6KiX,6ZC4,5r+B,6Ku+,6Iy4,5Yen,6Ju4,5Y+q',\n  4321: '5Y+p,5L2G,6YGU,6L6w,5aWq,6ISx,5be9,56uq,6L6/,5qOa,6LC3,54u4,6bGI,5qi9,6Kqw,5[Li5,Y2Y,ZiG,Z2m,ouF,o6i,pem,q2O,reh,rmb,4Kt,5+t,6uv,66q,7a7],6[IC9,IOG,JuL,KqV,Y2b],5[Zuj,aOH,by+,pat,pqW,qqA,q61,5S3],6KuH,5[YCk,5+l,Zyw,byb,oGl,pm6,rGg,5e0,6ia,72u],6[Ie0,JyY,YGF,aaz],5[6+J,5Wc,6u5,62R],6JOE,6YCQ,56ep,56qS,6Iy2,5[auh,52A,Lit,Luy,a6Z,b+g,oq9,pi8,p+x,rOo],6[Jmr,KG3,Ki7,YWO,Yuz,aeQ],5[qiX,4Cm,4yq],6[Iun,JGX,LKv],5[LiB,YWG,YeL,ZaL,a+1]',\n  4421: '5[b[iW,iz,qB,yU,y1,2r,60],oey,oyR,pqi,pyd,r2u,4mS,5S6,5y6],6[I[G0,S5,W4],J22,Kq/,Kuc,LaF,Lez,Yqa,ZW3,aCC,bOl],5[YuF,o2X,5u0,pyV,rKI,4+N],6[LOD,Y6u,Zmz],5[rSl,aKc,qSO,qeM],6L+9,6Y6a,55eb,6YCa,5[aGa,qCC,o60,qe7,L2D,rys,p+Y],6L67,6JSm,57a0,6Y2U,5[qS/,r2w,Z2q,aO3,ays,7Ss,4iq,ZCK],6Yej,6ba0,5[Lqt,L2O,Y[Gc,G1,mD]],6LKe,5[ZGI,aCk,a6a,b[id,qV,qt,u3,yf],o[KM,q1,y6,+Q],qKv,rGA,6[KH,aO,iL],7eg],6[ImH,KiC,Kum,LmE,YCT]',\n  4521: '6[Y[K4,St,eY],byO],5[rOl,p[GY,Oi,W1],ru0,5qE,6yb],6YGp,6Y+R,5[rq6,ZOy,b65,pKk],6[L2N,L+t,YmE],5[YW4,aGr,aSp,bGV,bqX,re7,7qP,5Sc],6[LK8,Lui,aGb],5[4K5,Lyd,q6/,r6x,5Sw],6Zu7,5[YWO,ZCQ,a[C1,GX,as],bGg,b6S,paX,p2c,rih,5m7],6[I+f,LOt,Y[CU,O9,2N]],5[6Cl,6C6,Yqq,bqm,Zyf,aW0,oCS,Y[CS,Wa,as,eN,iA],ZSQ,a[GU,GY,WX,6V],bO2,baL,oK8,oqV,pCt,p2x,q[GD,K8,Of],5uX,r[eY,mv,ab],4Gv,4eI,b2T,5eY,6[W3,2[;JUS;]],7OW,7Wx,Yiw]',\n  4621: '6[J[Gj,Wp,ek],KiO,KyE,LGG,LiP,YCD,YCP,ZCZ,Zm2,aCt,aiw,ZeY],5[YON,YuV,ZCM,aCC,bCO,oan,pKe,rSe,56z,6ul],6[IO0,JCE,YGT,YqF],5bOg,6bSH,5[Yy/,b6X,b6z,rac,4m5,52j,6a/,6+k,q+S,4us],6Kqt,5[qCD,qmh,Ye4,6qB,qS0,bGK],6bO2,6Iur,5a+F,6YWJ,5[4Ce,Zm4,bGv,oOH,pWm,rKM],6[LGa,YGB,aCT],5ZGR,5puH,6YiN,5aWI,6YKj,5[YaF,LmN,Yeq],6JaZ,6KyO,54GY,5o26,6Y2L,5qWi,6aa0,5[7iE,5W3,Y2X,qWg],6Luf,6Zuj,5[rGd,LqM,bC8,byQ],6L+p,5YyC,6[LOR,IKJ,Jm5],5[bu/,pel,Lmz,YWl]',\n  4721: '5aaC,5bC/,6Z+u,5[Lu7,aaK,b+N],6KqN,5[r+h,6aw,6Wi,a+n],6JGx,5[4yr,4ax,bm0,b+1,o27,pKa,4eD,7KY,LmD,bu8,LmL,Z+c,Zqi,oKp,r+D,7SN],6[I[O9,Sz,a/],L6y,KaX,Jqk],5[be0,oqK,pKt],6KaH,5[p23,rOi,rS+,5C2,6C0,amG,721],6Iqt,6aas,5[L+z,buD,oud,o6S,pWX,p2v,5uD,4mM],6[IOM,IK6,Lyp,YWN],5[YCN,Z+5,aqS,qKF,qWz,4Wk,4u9],6LK3,5aOy,6[LOg,Zmq,YCZ,J2/],56ek,55+n,6JCp,5[Lyv,Yml,Y2a,ouN,p+P,rOK,5m9,66U,7KV],6[Ii2,JaE,L+r],5[pud,ryg,4iG,7ib],6[I6r,aeB,bqm]',\n  4821: '5[Ye9,6[6x,Gy,64]],6IKH,5[62I,quo,bmh],6IKM,5[5WR,5Wg,YWr],6Ymi,5rqM,55m6,6YaX,6auq,5[LyQ,72w,oqc,62P],6Zal,6bOp,5Zm6,5aGZ,6Juk,6Zq8,5[Ly0,Y[ik,2K,+N,+b],biG,p[Cs,aR,2/],rC+,rGO,4[mI,qv,+t],5WU,7mB],6[Iis,Jep,LKp],56+E,6YeG,54Wp,6aCS,6aOv,5[oy9,pmp,5Wq,5uk,6OQ],6JWD,6Juu,5[Yyq,Y2R,ZCm,aaD,bqH,b28,o[Ky,mJ,m5,qr],paQ,q+U,rOM,5ay,5qu,6KR,6eY,7eL,723],6[IKl,KKr,Kq5,LK7,YG/,Z2e,aOb],5[qiL,7C4,YKZ,bC+,b6u,p6H,q+Y,5C1,5yJ,76O]',\n  4921: '6by7,5[p+K,6iX,Yy5,5aL],6aut,5b2m,6[I[ad,+x,KY]],5[by8,b+F,5Wi,62G],6YC8,5[qGn,aer,aqb,7SQ,5m+],6Kys,5[L+1,b2q,qiZ,rC3,ryC,5Oi,6Wo],6[KGo,KmV,LG5],5[buf,o+P,5eF,6eS],6[IuX,Yyo,Yuy,JKc,Jut,bCt],5[ZOB,b2s,paM,rWc,4CV],6[LKn,LOT,aC7],5[pWP,5O2,LiN,LuY,Z+g,a[Sr,mm,+M],Yao,biD,bqc,oCW,om2,p[W3,an,mu],rWu,4i2,6ym],6[I[WQ,aa,qZ],K2c,L[Kg,Om,W0],Zic,ZmE],5[L6u,pKr,q2m],6[Iie,JGh,JWq,YOo],5bCB,5qWT,6[aKo,JG6,JWX],5[LyP,Ymv,b6p,bmF,pyN]',\n  5021: '5[byM,L[i[;QVqx28/;],m[;CWY;],qC,qF]],6LGr,5LqK,6IiS,5[byN,L[q[O,e>;2iwz2;],u[;ONEGCXetf3;],yJ,2a,yw,2[;bdXH2;],6[;IPY;],2[;7pw;],6R,2v,6G,6W],YSY,L[+[;UfOYbRaQk;>1]],Y[C[;aoUqlF;]],Lyc,L+2,Y[C[;hps;]],L++,L+v,Y[CR,CG,GD,GH],pyD,Y[G[;VQIaWs4;],K[;AaF0y;]]]',\n  5121: '5[Y[OJ>1,Kz,O[;CWeltju51;],S[J,B>;1WVUah6387/;],W[;ASMUi;]],6u4,Y[Wp>1,Wu,aA,aC],ZuY,Y[a[;MJPRTV;>;1kmip;>;2zx;>;1w19;],e[;FJbg;]]],6JmV,5[Y[e[;ptw1+;],i[;ELUOnquz5;],m[;PEL;>;1eUq0pz/9;],q[;NUS;],mx,qI,qR]],6L6o',\n  5221: '6L6n,5[Y[q[s>;181;],u[;BNXejm;]]],6aOt,5[Y[u[;gz14;>1],yG,yI],5S4,Y[y[;NQPVajvxz4;],2[;AGF;]],LiX,Y[2J,2N,eW,2[;epu;]],aSY,Y[27,23,6[;CWgmluw2;],+D],7CS],6ZuZ,5[Y+f,pu8,4eu,Y[+[;uot6;]],Z[CB,C9,GA,C[s>;18u2pd;],GO,KP,G1,KO,G[;fx3w;],KS,G7,KA,G2,K[;EQG;],OH,K[;i4ls;],OE,OI,Ko]]',\n  5321: '5[Z[Kr,OC,K[;k+8;],OY,Ol>1,SP,SU,O[;9ut6i;],S5,W[;AjM;],Su,W[;cFW;>1],S4,Sz,Wd,aZ,aA,Kv,aK,af,W7,W+,a[;Yeu;],W8,a[;DpHo;],e[;aFfEckU;],iU,e3,iW,e+,e9,ib,e5,mO,mQ],4ef,Z[i[;02y4;],mr,mk,iv,ms,mq,q[;GAKgUPlu20;],uC,q8,u[;BDAIORTXu5;],yA,u/,yE,yJ]]',\n  5421: '5[Z[y[;ILNTYW;],eH,y[;cm3;>1],2O,y7,2[;APp;],+A,6I,2h,2/,6[;JTgzkqw;],+[;DGUS;>1]],aCK,Z+W,Z+j,a[C[;LZd;],Gy,Ch,G[;iLw;]],q+A,a[GS,C9,G5,K[;F5fr6;],Oe,K[;74u;],O[;FTRXZYlckfv657;>2],S[;CKQb;]],qKm,a[S[l,s>;1y4+;]],6uS,a[W[;VQOaYignsp;]]]',\n  5521: '5[a[W4,aB,ad],L2e,L6r,a[aj,ay,e[;Goc;],aN,eZ>1,i[;lfRcJa;],m[;AsJ;],i1>1,mi,mq,q[;a8+;],uL,uC,q9,u[;jXmpW6;>1],y[;MLWy;],uQ,y[;q2+;],2[;DFARVa;>;1lpwz14;]],paI,a[26,6[;ADm4;],+[;DHJUQkmielrw2z;]],b[C[F,H>;1NTgio4;>1],G[;BGOT;]]]',\n  5621: '5[bGQ,bGP,a2x,bGs,bGu,Lmi,b[G2,G5,K[;MRU;]],aab,b[K[;r7283;],OF,K+,O[;HZp96t;],aM,Oq,S[;LVX;],Wc,S[;fbRUiaZY;],W[;MSOLsz2;],a[;HECidsu9Q38;],e[;JNTSWbry1;],i[;LaZRb2;>1],m[;EDAOXUfikH1;>1,6]]],6bq8,5[b[m/,qg,u[B>;1IQP;]]]',\n  5721: '5[b[u[;Wjda;>;1iho;>;1sxzw04+;],yD,yJ,2d,2c,y[;LRWpt4;],2[;BIMO;],yv,2[R,W>;1Zhtz3;],6D,6C,2/,6[;KIRHeZYgot8;],+[;W7k4xd;]],oKz,b+/,o[Ch,Gg,C[;ZQpOxbVrmP6;],G[;aBq3fKGNjDkCsrZ;],KB,KN,On,KD,Ka]]',\n  5821: '5[o[K[;EbW;>;1SnL;],Oh,K4,Og,OT,K0],b+w,o[K9,OG,K1,OY,WN,SV,SG,O2>1,SA,O0,O6,SD,Sh,O7,Ox,SN>1,WH,S[;+on;],WK,S[;/8s09;],W[;CEz3Y;>;2r0vlxfdT1;],a[;ZWHsUaKRru;],e[;MKJ3IDG;],a6,eL],725,o[e[;Nmj260/98+;],i[A,I>;1NMUb;]]]',\n  5921: '5[o[i[;ehquwy;>1],m[;BOejbgo8;],qC,qJ,m+,qS>1,qW,uU,qD,qU,uX,uR,q7,u[;P/G;]],pOU,o[u[;IcMKCH;],qb,uJ,yM,uu,ux,y[;nCI;],uv,u1,2Q,y+,2N],pCc,o[2P,6[;WOAr;],22,6[;jPJf1;],2r,2p,6+,+[;pAGjJS2E;]],p[C[;W0GTm2;],Sd,C[;XoP;],G[;nv2O;],Sq,K[;VTlpI8;]]]',\n  6021: '5[4[e5,e/,i[;NQbotswy7;>1,/],m[;AGLY0+;],q[;CBHSWin5y;],u[;DGEOSig;>;153;]],YCP,4[y[;XKcWd0vpl+;],2O>1]],6buY,5[4[2[;Xqow4176;],+I,6z,+O,67,+[;Alue;]],5[Ki,CF,Gv,Cl],4+4,5[Cy,C6,GV,C/,G[;fZBcpwjq2+;],K[;Len;],O[;KPU;]],4+x]',\n  6121: '5[5[O[;gjnpuyw;>;143;],S[;EDFMONVTems8;],W[;ENKJbGapknrt42;],aG>1,W0,a[;KJCUadlj;],eC,az,eD,a[;1948x;],e[;NKSZje+;>1,8],iB,e[;w6y;>1],i[;LNJfng;>;2k0w7;],m[H>;1GcYh;>1,o>;2nsw;]]]',\n  6221: '5[5[m[;y248;],q[;ADILOWTZ;>;1w04;>2],u[;CNWSehlnq;]]],6Jiv,5[5[u7,y[;IHEpkel;>;1b3;>1],2[;Haorbl/+5;],6[;OLRgew25/8;>1,7],+[;HNXacju8;]],6[CM,CS,Sm,Cg,Sq,GF,KO,G0,KG,G8,K[;aMj1qv;],O[;RGLU;],K+,K8,O[;FKs;]]]',\n  6321: '5[6[O[;na90;],S[;HSRZsr;],W[;AgXfaVT6/;],a[;Kdn;]]],6b2L,5[6[a[;quz5;>1],e[;JVnshj;],i[;INY;>;1gf;],aA,i[;x7+3;],m[;DXJh;>1,p]]],6b6d,5[6[m[;w59;],q[;IXVYWp;],uI,qw,q2,uF,uE,q/]],6YKD,5[6[u[;HKNPVTZ;>;1dh;>;1mtw;],y[;CPKGzY;>;1e1o2;],2Q]]',\n  6421: '5[6[26,yE,2N,yL,2[;MF1l0nw;>;1su;],6[;dYfNcaLSP;],2d,6Z,+[;LBMP;],60,+[;Gdp;]],7CR,7CU,6+m,6+l,7[Gg,C[;AHT;]],6+z,6+3,7CX,7CN,6+2,7[C[;jnqf3r9;],G[;MDUPAQYfkWls1;],K[;DQktirhozyxu59;],O[;AFCYSci;]]],6ay7,5[7[O[;vy026;],SG]]',\n  6521: '5[7[S[;CcVK;],WF,WL,S[;uy/1;],W[;GzWOyouPj;],aT,aJ,Wb,aP,W9,a[;b6uj1;],eH,a9,ar,i9,ai,av,ec,a[;4fw;],e[;Ydke7yh;],i[;FKjhSxfJLi;],mG,mm,i[;715;],mD,i[;3y6;],m[;ndWeZ;>;15qp87;],qD,eV,m9]],6L6u,5[7[m/,q[I>;1MSQT;>;1WOb;>1],y4,y6]]',\n  6621: '5[7[2[F,M>2,Q>;1VUYf;>1,o>;1n4;],6[;CGDIHMUedajvy5u24;]]],6K2x,5[7[+[F>;1KVUhmpz5;]]],6[aOc,I[C[;GELSY;>;1cho/7;],G[;KGSYafiozyw259/;],K[;EGFbTat;]]],5YaQ,6[I[Ks,O[;blZdEaW;],SJ,Ov,Ox,S[;bpjv;],WL]]',\n  6721: '6[ZqL,I[WG,S+,WT,WR,O8,W[;xul;>1,0],a[;DIKACgVkj;],Wf,a[;Tpw1+49;],eA,eC,a6,e[;JNRZYIaf;>;1n6;>1,+],i[B>;1FHKNQWpr4z;],m[;AZYdafkioq;>1],iu,m[x,3>1,+],q[;NSrf7s;],u[;hjfS0z6;],6T,yD,u[;75e;],yG,uc,yJ,uZ]]',\n  6821: '6[I[y[;10Wyx;],2A,y5,2Q,2F,y[;vrX;>1],6[;FaqfiW;],yj,6[;OHK;],28,61,2z,21,6[;gJo;],+0],JCT,I[+[;rO9;]],JCD,I+Y,JCL,I+B,I+3,JCH,I+g,I+y,J[C[;Nig;]],I69,JC4,JSG,I+7,J[Gt,Cq,C8,Wa,KE,G3,Gr,Kt,Gu,KC,Gp,GG,Cs,Gv,G5,C1,OK,Gi,K[;5/f;],OZ,ON,K7,O[;aQBGW;],Kh,Sh,O/,O0,S[X>;1sfVU;],O8,W[;AjYI;]]]',\n  6921: '6[J[WB,iC,WL,WV,a[;AkIRKo;],Wt,aU,ab,eq,aH,ac,W3,W+,aQ,eJ,a6,eP,a5,e[;QVdlc5;],i[;KTL;],e+,e6,i[;Giaw/;],mN]],5LmV,6[J[m[;Ufnx;],q[;Tjp;>1,L>;12v;],uE,uG,qw,uJ],KCj,J[qr,u[;Uepsfbv;],y[;SGIAD;],u7,y[;RJN;],u5,y[;K0/37lpa;],2[;gf4MO0XouZ;]]]',\n  7021: '6[Z[m[;dfmys;],q[;NYVXqnx;>;1w024;>1],u[;OLJN;]],KWN,Z[uc,yN,uV,u5,y[;EGITORPWZkqw59;>1],2[;EGICJcgkmo;]]],5YuS,6[Z[2[;rx5;],6F,28,6B,26,6[;GLP;>;1comjz;>1],+[;DGILct;]],b2P,Z+y],56uf,6[Z+2,Z+1,a[C[;PM4kh39;],G[;GPLrv;>1]]]',\n  7121: '6[a[G[;x0z;],K[;qvx2;],O[;EDGpr;],S[;DJSUYhd;>;1kgsu9;>1],W[;CJFQLR;>;1MV;],a[X>;1lt;>1,8],e[;fbdYRt;>1,x>;174;],i[;BPF;],ei,i[;Zr3;],m[;FCAD;],i+,m[;VNbXfilkprq;],q[;tw8;],u[;APRT;>1,e>1,i>;1mvru0x3;]]]',\n  7221: '6[a[u7,y[;GYafi;>;1ln;>3,u>1,y],2[;EDPN;>;1RY0;],6[;TDRW;>1,f>;1o0;],+A,+K,65,+[;GPR;>;1jikUh;]],bC6,a[+[;yxw;]],b[C[;VUJTMGISKEublkhw;],GH,Cy,GG,C+,G[;agn24;],O[;nsw;],SJ,SI,Or,S[;DGqm;],av,Sj,Sf,WE,SV,SS,WB,S/,S+,WG,WI]]',\n  7321: '6[b[W[d>;1kRQZy;],a[;JHr;],Wv,W6,a[;akpy;],eE,eB,a[;746;],e[;GPCZT4mtv9;],ia>1,ie,m[;159;],q[;BIL;>;1SVRdlp4qt;]],Z2h,b[u[M,O>;2Ucedglov02;>;157;>2],yH>1]],55q3,6[b[y[;Vhs+;],2[;KSUjf;>2,m>;1sq3y2;],6[;Vcg;]]]',\n  7421: '5aCv,5qeH,6YGZ,5[5Gk,Yec,4aZ]',\n  7921: '57qK,6[KSc,Y2I,YqI,JOc],5[L+J,4K7,pix,qOI],6Yu5,5[pu7,b2F,L[io,uh,u8,y[;AD5;],2W,6[;SKaU;],+N],YGA,YCi,L+/,Y[Ce,G[;GwC;],KU,O0,OY,WK,Wk,ad,a+,es,iV,qc,qm,uA,ub,y[;AHk;],2y,6T,6y,+d]],76iO,5[Z[K[;cKp;],O/,aG,2Z,2l,6s,+I,+H]],76iP>1,5[a[Ke,Ky,SL,W[;Tbdj;],ak,a6,2W,+A],5Sv,a+Y,a+s,b[Ce,Km,K6,O1,Sn,WT]],76iR,5[b[WC,Wt,a4>1,eQ,yh,y0,2n,63]]',\n  '223a': '4[o[iI,iL,qG>1,qC>1,iq,ip]]',\n  '224a': '4oin>1,wqw=:77+i,4[o[eS,eU,iA,iD]]',\n  '225c': '4[o[ig,ql,yS,iC,iH,m[;hSq;>1],i[;a9d1r;>1]]]',\n  '227e': '4pev',\n  '2d21': '4pGg>13,4oWg>9',\n  '2d40': '4[4[2J,yU,yi,2N,y[;YnD2;],2R,2X,y[;Nmjr;],2K,y7,6c>2,6O>1,+E,6h]]',\n  '2d5f': '4[4[27,Cd,Cf],oSW,4+N,oSh,4[qk>4,ix>1,i5,2[;+98;]]]',\n  '2d73': '4oiu,4oiR',\n  '2d78': '4oif,4oq/',\n  '3a21': '5q2k,6aCD,5[LuK,Zuw,Z2k,aK+,ama,oGo,oeH,piP,piG,qC5,qKx,re3,5eV,7S6],6Imu,6a2C,5[Lqb,L2Q,Y+J,ZSG,b[Wv,em,eu],p+7,rKZ,5Gz,6CC],6[KmQ,Y6W,KOf],5[Z2Q,bqn,oyr,Y[K1,Ks,aN],pyA,ZOJ,a[Ge,a7,6w],b2p,omN,o6h,qC9,q2z,riI,4G9],6YeH,5[4qA,6[CV,Cm,Wt],paO,7Sw],6[I+c,KOB,LyJ,Zqb],5[Ymk,Zyo,p2Q,72q],6LKh,5Ya0,5Z2C,6Ziq,5aC6,5qaK,6IK0,5[ZKy,bSO,Z+8,6KV],6be6,5[L2c,YmK,ZKL,p[C+,io,yU,+1],6qE,62W,7Si],6Yyv,5qGc,6a6t,5[6y5,Y[yZ,aK,i3]]',\n  '3b21': '5[a+f,ou2,p[Ku,Om,yt],q66],6Jap,6ZuR,55qQ,6a+W,5o2M,6YyG,6a6r,5[5q/,pmS,LiJ,YKY,Y+C,bGx,oOo,pKS,pWj,qGf,4em,4+K,5Sj,66X,7qC],6[JqV,K6D,LOb,YW4,aSQ],5[pas,pqr,q6L,L[uV,uU,y6,2/],Y[i6,+4,+y],Zej,Zub,a[Or,e[;LJ/;],2Q],b[GN,iC,ir,+X],oCd,oyH,pSv,a2c,p[av,a9,eo,6d],q2i,q27,rCP,42F,6WJ,6eB,7[O4,SZ,Sr]],6[I[Ki,SC,ez],K[aW,m[;epm;],qM,uu],LOH,LOc,ZuM,aO8],5[q2v,L[qL,y8,6N],YWQ,a2X,a+6,oWI,oyB,pmC]',\n  '3c21': '5[qyh,ruL,rK7,4i+,5K9,5eU,6OB,6S6],6[I[CM,Cz,eq],JKU,L6e],5rGQ,6bm/,5byP,6K2Y,6bSr,56u6,6Lu4,5a6N,6Zur,5[LiD,Y+x,Z+3,a[Sx,uJ,6k],oKJ,rm/,ryG,5a+],6LOq,5a6f,6JSA,5[6+g,YGy,p+0],6Iqd,5bGh,6JWK,57ie,6IiO,5[YaZ,bCE,o2o],6LWm,5[pac,4Wu,6S+,7SX],6[ICF,Kyd,LuK,YGu,JuH,YKq],5[YCf,Yu6,bC6,p2T,4G8,4i1],6[Y[WM,eI,yr],Iul],5[a+C,byx,oO5,Li7,Y+W,a6I,omL,pyx,q6K,4up,4+g,6iu],6[IWr,Laj,YWS,aaW],5[YSS,Y+X,ZGq,a+/,o6I,qi5,7as],6ZyA,5[Zua,Y+O,ZGo]',\n  '3d21': '5[a6X,bCx,bee,L+u,oSB,ou+,rSy,6eA,6eL,7[WC,mN,+S]],6[Iet,Iif,JKQ,K[GG,Wy,6Q],Lm0,Lyv,Y[Cx,WL,Ws],ZuG,Yac],5[LuA,L2P,YWF,Y2B,b6T,oiO,p+U,rGB,riL,42j,7im],6YeN,6YqD,5[Y+U,aSZ,a6/,reR,6Wd,7iu,7Kb,aG+,4af,Ye6],6KGT,6L+w,5[L+K,bO7,pil,56s,6uj],6Iic,6ae/,5[YeG,b6q,pes,qWv,q6J,r[ez,qW,2k],5u+,7SU,beh],6[YG1,YaH,aCG],5[Yem,Yid,omA,pqR,puZ,ria,bq2,7eS,72y,pu4],6[Jav,Je3,Ku4],5[Yqp,Y+Z,aWz,bqP,b6Q,oGV],6Yuk,6Zmk,5YK3,5YSf',\n  '3e21': '5[Y[ud,yg,2H,+s],Z[Oo,WG,Sx,iX],a[Wo,a+,i8,61],b[C[;GPRa;],qE,qK,ug,2w],o[m/,qE,ub,6M,23],p[i[;HMt;],m2,2+],q[Ki,if,i1],r[K8,aI,iJ,mY],4[S8,Sm,Wn],5eH,5yB,6[Gd,SB,Wl,ew,ug,yR],7Kn,7S5],6[IKW,I+W,JKL,JWJ,K[Gd,Oz,if,i8,mU,mz],LGh,LOe,Y[ak,mm,2+],Z[CY,qc,6Y]],5[L[i[;KIe;],mX],YaX,Ymw,Z+O,a[C0,OM,yi],bi4,oOF,p[O+,2h,2W],rWE,4q2,5Wz,6mj],6[JK4,K2y,Ya4,Yyg],5Zix,5Z+0,6aO+',\n  '3f21': '5[out,qSN,q6W,4et,7mU],6[IG3,Imy,Kem,aOf,J2V,L6x],5[bC7,L[y4,+h,61],ZSH,a[ig,+d,+p],b+D,oWO,oyv,paw,pmL,qOu,qab,rW4,rex,5[Sz,a5,yf],6We,6em,7Sz],6[Iej,Iqv,Jaq,Kaq,Ki6,Lqr,L6b,YCy,Yed,ZyH],5[Lq6,LuB,YiD,aG1,aOs,bCL,5Sa,bC9],6[IWO,KiK,L+F,Zmj,Z2t],56yl,6[KuP,aCI,YWi],5Zuz,5Y6o,6YCX,5[ZC5,Z6C,bil,o6o,rC0,4KK,52h,7KL,7+g],6[KGw,Y[GC,WU,yQ,yY],ZqP],55Ge,6auE,5[bSH,bWp,pWw,p6i],6Lao,6Zub,5[o2u,p2J,qSZ],6[I+F,aCX,ZuA,KO+]',\n  '4a21': '56aP,6[IW5,KSH,KaG],5[re1,byX,omV,rK4,LuP,4mp],6a6S,5[YiG,ZC7,Zm0,aKz,oak,omu,4Sa,aWu,7[KJ,Oe,Sb]],6Zuw,5paH,6IGe,5[LiZ,L21,YW1,aGA,b[mj,mz,yK],p+E,Lim],6[JS9,ZaJ,Zmb],57Gz,6aCB,5[YO7,aOB,5mW,6Kn,Yil,56l],6JSR,5[66G,YGP,aSJ,4mH,6+H,7eo],6[L66,L+U,YGN],5[L6/,YuJ,aip,byB],6Z6t,5L+d,6IiX,6Yuq,5[ZyD,o2V,q2p,5Sr],6KOc,6LyU,5[6mC,Yuf,aKT,oWV,oiK,pqu,q+N,7C/],6I+p,5[YCj,L+4,YyF,ZGG,a[Cx,WJ,6d],b[Ow,Ov,Sp,qW],oqx,o2n,p[S+,a5,yL]]',\n  '4b21': '5[rOV,rOh,4O5,6Cy,7ir],6[IOe,Iqz,J[CM,Os,yC],KSS,Kiq,LGK,YKm,YuS,aO9,bOz,bWs],5[LmP,Lqh,YKN,YmW,Z2K,aao,bi9,b+Y>1,oi/,p[q0,yb,+Q],qOS,YaS,7Sh],6[IKq,Iao,KyA,LKM,LK/,Ym+,Ziy],5ZCg,6aCs,5[Y[yX,OV,2c],aKo,pKy,py0,4mn,52m,6mG],6Yem,5[YuD,rKh,q6G,aCA,bmM,aWU,pys,7+7,Yeh,5uG,pGp,6Oo],6a2U,6bq7,5[Z+L,aa5,pin,p6a,q+O,ZOp,qeZ,bmV],6Iac,5p6V,6a6q,5p++,6bGS,5[qGd,Lqm,L+j,Y+I,oq5,pyr,rKr],6L+E,5L6t,57mt,6bq/,5[LiH,oWi,rqA]',\n  '4c21': '5ryr,6JST,5ZGz,5pyq,6a2F,5[bez,66V,bKs,a+G],6Jyc,5rmK,6JOR,56iU,6ISI,5[aaZ,7KN,rCR,5yg,YuZ,aSi,4Sh,4mf,5+b],6Zyn,6bWh,5[qSL,am/,aiY,Yal,ZCN,ZG9,piO,5uf],6[L+3,YqY,bO0],5[aeq,4md,ruF,YWN,qOJ,7a/,7es],6Z2i,6bq6,5pG4,5qih,6IyC,5[aaE,a2f,q+b,4yb,5uy,7ay],6ICX,6JKZ,5YSy,5pyo,6buZ,5[5uu,p2i,Yu/],6aSF,5[bCk,oi7,7G+],6LKw,5[ZWP,oK2,7SL],6ZaA,5[YyB,Lmf,Ya2,aSc,4i6],6IC2,6YeO,5[byl,5+i,Y6E,b25,7SE],6[Jas,Kiz,LqN,Z2W],5p+z,6Jau,6ZGT,5[oSJ,oSI,rK5,5mS]',\n  '4d21': '6Kut,6Ly4,5[ZSv,L2R,Y[Sq,uH,+L],a6l,bm9,o[Kg,aC,+W],pyJ,p+a,rmn,raM,4y2>1,5Sx,6WQ],6[KOV,KqY,Y[GK,KR,O1],ZuE,J6N],5[aSV,L[qI,2Z,iO]],6[KqJ,Ly/,aCQ],5[YKt,bm8,aaW,a65,bq4,o+a,o+6,pOB,puc,qWK,qeY,rSL,rq2,4aU,5So,6qv,76K],6[ICA,JGJ,JOJ,KaB,Kyh,LiK,YGl,Zm9,aSK],5[oW+,oqR,qyy,rKD,rW0,7+M,7+8,reA,76F],6J66,6KO4,5p2l,6[I6x,aC8,Zu3],5rSb,57Wh,6JC9,6YWq,5[Lmx,Y21,bWQ,qyE,r+r],6[JeN,Jit,Kan],5[Yip,ZCP,bGl,p2O,qKo,5CG,5KD]',\n  '4e21': '55ei,6[KOP,KOh,YeM,Zui,Zm4],5[b6L,46H,6uL],6JGO,5[o6g,5Wl,YqJ,rWB,rqc,5CJ,5WZ,6Gr,7KS],6ZqG,56uc,6b6N,5[L62,oWu,peF],6Jmc,5[LqG,Lqu,YOa,Lih,YeM,a+u,paZ,qKB,ra8,4yf,5mC,56t,6ic,7On],6[Imv,KuS,YG8,YeP,Zm1,aCY],5[Yqb,7eR,YCr,Y6Y,p6X,reL,4eQ,5Cz],6[Ieo,Lyq,Zqj,bGX,bqf],5[5Gg,aGB,raZ,7Sv],6aGe,5[L[uk,y2,6L],Ya3,Yqx,ba6,oCc,46y,6S8],6[IuT,Yi0,Z[q3,u2,yK],bqX,b2i],5[pqm,q20,YiX,Yqj,4OI],6KOC,5[buJ,oGL,oaQ,ryj,4WJ,7C+,7e0],6IGv',\n  '4f21': '6[JOu,YCj,Yys],5ZGC,6a2v,5quT,54KJ,6[LOC,Lev,Zyy],5[Yq0,amB,buK,byE,pyX,qW8,qaU,rWq,ryP,4mi,4u8,6+t],6[ICB,IG+,J2L,YOO],5YWt,6bqT,56aE,6[IKL,Yyy,KuW],5YCt,5ZKM,6Kmx,5q2q,6LOE,6ISH,5oOR,5p6g,6bey,5LqZ,5LqY,6[bCQ,Kmr,JeB,JWo],5[qSA,rm+,6KX],6IWV',\n  '5a21': '5[p[O[;aSFH;],K7,O[;YCxn;]]],6IiJ,5[pOg>1,oqs,p[Oj,Ov,Ss,O[;20y6;],SA,O9,S[;YcFkjr0;>;1324;]],5WL,p[W[;IWVNYedy4;],aC>1]],6K6K,5[p[a[;bfr3;],e[;DGBEMSbZg;>1,x],2y,iK,iD,e7,2z,i[1>;10c;],m[;PEJBedkn;>;1fiw;],q[;DIOJEYd;],uB,q5,uJ,q+,q8]]',\n  '5b21': '5[p[uE,q4,u[;Wag;],i/,u[;mpw13;],y[;PWem;>1]]],6Zy4,5[p[y[;u/2;],2B,y4,y3,2[;GegZj;>1],6J,2w,6p,28,2q,6[;MLmhF3;],+v,60,+s,6z,+p,64,+[;kediu;],65,+[;OGn;]],q[qc,Ce,GG,Cp,GA,GN,Cy,GO,Kz,Cr,G[;Zj3/;],K[;fPtUdbD;],qu,K5,G0,K[;1g6;],SP,KN,G+,SB,OK,SI,OY,Si,Sm,Oh,SM,ON]]',\n  '5c21': '5[q[O[;UnV;],S[;2SE;],OX,Oj,Sl,O[;5gv;],S[;oqajh;],OG,W[;53c4rU+u;],S5,W0,S9,WZ,Sw,W[;hed;],aB,Wq,ay,au,eQ,a/,eB,eT,a+,eO],a+o,q[eK,ed,a7,eD,an,iu,a[;RgcV0;],ee,eo,iC,ib,e/,yK,e[;5yn;],iF,ax,ie,et,iU,er,iK,iS,uB,ij,iT,mE,iM,my,i2,m[;4HiZmI;],i4,ii,q[;QNgEi;>1]]]',\n  '5d21': '5qqX,6JiX,5[q[q7,uD,uC,q[;4zs;],u[;eRf;],qq,u[;aq7;],yF]],6JiW,5[q[u6,yS,yW]],6ayx,5[q[y[;f43;]],5uc,qy5],6aOu,5[q[2[;HDJQZUbfh4;>1,/],6[;AEDNYVekq;>;1vyxz38;],+[;GLTfsrzv;]]],6bq+,5[r[C[I,T>;1bkj;],G[;eViq;],K[;CNaBb;],G[;+oz;],KS,KQ,O[;ExT;],K9,O[;XFd;],K[;ux+;]]]',\n  '5e21': '5[r[K6,O[;bvZq;],Sf]],6KGN,5[r[S[;2r94Z1zSM;],Wj,aT,W[;ka5Z;],aO,aV,+k,aF,e5,iV,iK,a1,eH,em,a4,e[;GseMoSF6ZkVqu;],it,mu,iu,iZ,my,mf,i+,ij,mr,ir,m2,mN,if,mD,i6,mO,ik,u/,id,i4,q[;CqY;],uJ,q3,uT,q9,qv,uE,qy,uU>1,qP,ql,uC,qf,2B,yR],4GM,r[u[;s4+;],y/,uy,yx,uv,yy,uM]]',\n  '5f21': '5[r[y+,yT,u3,6G,26,24,6B,6A,2v,2b,+z,2t,6C,28,2Y,6O,6R,+C,2m,6[;zjhk5;],+G,6q,+[;fVsUYxub;]],4CJ,4CL,r+6,4[C[;RBP;]],r++,4Cb,4Ca,r20,4[C[;dYfw+y;],GR,Gj,K[;ZSv;],Ox,K[;s4zu;],O[;fLdZ;],SJ,O9,Sc,SZ,Wl,WV,aI,W[;miMWs;],aP,e7,a[;EVos;],eX,a5,a+,e[;SJUOgsn18;]]]',\n  '6a21': '6[J[2[;Tjq;]],KCF,J[6[;ifCv;],+L,69,+A,+Q],ZuW,J[6r,+E,6z,+H,+G,67,+[;vyg;]],KCP,KCN,J++,J+2>1,KCO,J+S,K[C[;RWVihx25n7;],G[;ECSZeir;],KB,G+,Ke,G1,G9,K1,Gy,K[;CXSuZiNkw/x;],O[D>;1UY;>;1d5;],SC,O[;80oy;],S[;EMKT;],WD,S[;elq;>1],WB,WE,S[;724;],WM,Sd,Wg,We]]',\n  '6b21': '6[K[W[;mktqv03+;],a[;DIKTYhpmsvy69/;],e[;Aac;>;1n04;],i[;DWQMbdl2;],m[;BbSGI8tsi;],q[;FCEohRl;>;1aj;],u[;ENCarznkx;],yU,u[;gi3eb;],y[;MHa;],uh,y[;WQXgz;]],Z6r,K[y[;mr+o;],2[;BMPOJWbar;]]]',\n  '6c21': '6[K[2[;fsv09;],6[;AMOS;>;1WZ;>1]],L[C6,GB,C/,G[;IMOQVis46;],K[;CJFKN;>1,U],G8,KY]],5oid,6[L[K[;tq9y;>;1u2;],O[;IBkja96;>1],S[E>;1KHPNQ;]],b2O,L[ST,ON,SU,SW,W[;ntxz;],aB,aZ,eC,a+,a6,e[;PaWMbLq;>;1fj8;],iI>1,e/,i[d>;1Qf;],mC,i[;1w0;],mK]]',\n  '6d21': '6[L[m[;HJMQIZkg;],iq,m[;jV2y8;],q[;BHFELKTRUZqhsw;],uG,qx,q+,u[;FILbj87r+;],y[;KFVSZTcfbMmz75;],2F,2C,y+,2[;MJGOXci;>2],6[;cfjtv3;],+[;aliqv;]],YKH,L+0,YCF,L+5>1,Y[C[;RVhNeWLn215;]],L+4]',\n  '6e21': '6[Y[GP>3,CO,GJ,C+,G[;WYeov2;]],Zqo,Y[Gy,KC,G9,K[;BAKJPovx1;],Oi,Ok]],5omI,6[Y[Ob,S[;CSZyw;],W[;KWYjlpzy;],a[;LJCirvq106;],e[A>;1JLQWfhb81;>1],ie,e/,i[;UsVR;],m[;eXFJkI;],qV,i/,mL,mQ,q[;cWTb;],ma,uP,q5,q3,up,yP,u6,2E,yu]]',\n  '6f21': '6[Y[y[;Ziaj617;],2[;cg8uW;],6[w,s>;1U5;],+[W>;1olYDdQIk;]],Z[C[;aUTDHQ2r1h6;],G[;BSEbgieq;]],Yip,Z[G[;w139a8+;],KB,G/,a[;CHKUWY;>;1gont875+;],eK]],5r+2,6[Z[e[;DNMVUWchli;],i[;hou;>1],m[;CMPL3ce;]]]',\n  '7a21': '5[b+e,o[Gd,KF,KK,Oe,OV,Sg,Oy,S[;R3w;],aY,iT,qm,+1],p[Gg,Kd,OO,WO,i[;AV7Juek;],m[;lXZ;]]],76iS,5[p[mz,q[;Zgy/;],u6,yO]],76Sp,5[p2m,p67,qGS,p+A,q[CB,GE,OP]],76iT,5qWo,76iU,5[q[aY,ei,iw,m[;rGz+;],ui,uk,+W],r[C/,Gc,KG,Gv,Oa,SE,aH,Wv,aW,as,e[;P4y8;],i5,mc,in,i8,q/,6I,61,+1],4[C[;FHo;],KF,Kr,SP,SE,Wc,WG>1]],76iV,5[4[eB,e+,qx]]',\n  '7b21': '54q+,54yk,76iW,5[4[23,69,+[;JWjS;]],5CH,4+1,5[C[;mqpu;],Gi,KJ,Kf,SB,Wv,q[;Ccebm;]]],76iX,5[52G,Yqv,6[Ch,G[;Ok6;],Sw]],76iY>2,56aU,76ib,5[6[ab,uR,un]],76ic,56ur,566e,76id,5[7[WI,Wc,a3,ag,eW,mS,2H,6h]],76ie,6[I[yB,2i,2/,+H,+2],J[GI,K0,W[;TZr;]]],76if,6Jaw,76ig>1,6[K[CH,O1,iS,i3,m5,qn,q+,uf]],76ii,6[K[u2,2T,2/],L[Ow,O0,SS,W2]],76ij,6LuP,76ik>1,6YGn,6YOe,76im,6[Y[SV,Sn,ea]]',\n  '7c21': '6[Y[e[;Xet;>1,k>1],i[;GQK6;],mA,i8,m[;OZR;],i5,mn,qn,m3>1,u[;nXZQ;]]],76in,6[Y[u[;VgT;],yl,yh,u7]],76io,6[Y[ye,u/,yd,yC,2w,2X,6k,+[;Ge4;]],Z[Cx,GF,GI,aS]],76ec,76ip,6[Z[qd,qv,yz,y7,2[;DNPRV;]],aGX,aGl],76iq>1,6aSn,76is,6[a[ae,mO,uZ,uc,21,2y,6[;Px7;]],b[CA,Ww,Wr]],76it,6biZ,6buR',\n  '7c71': '4oWw>9',\n  '7c7c': '7[7[+k,yH,yC]]',\n  '1215d': '4oiS',\n}\n", "import { base64ToHex } from './text-decode-encode.util.js'\nimport UTF8_TO_JIS_TABLE from './utf8-to-jis-table.constants.js'\n\n/** @param {string} x - hex string */\nconst xInt = x => parseInt(x, 16)\n/** @param {string} x - base64 string */\nconst b64Int = x => xInt(base64ToHex(x))\n\n/** @typedef {{[key: string]: string}} CompressedTable */\n/** @typedef {{[utf8Value: number]: number}} Utf8ToJisTable */\n\n/**\n * @param {CompressedTable} compressedTable - target table\n * @returns {Utf8ToJisTable} decompressed table\n */\nfunction decompressUtf8ToJisTable (compressedTable) {\n  /** @type {Record<number, number>} */\n  const result = {}\n  for (const [jisChar, compressedUtf8ValsStr] of Object.entries(compressedTable)) {\n    const utf8Vals = decompressUtf8ValsStr(compressedUtf8ValsStr).split(',')\n    let charIterator = xInt(jisChar)\n    for (const utf8Value of utf8Vals) {\n      if (utf8Value.includes(':')) {\n        utf8Value.split(':').map(b64Int).forEach(key => { result[key] = charIterator })\n        charIterator++\n      } else if (utf8Value.includes('>')) {\n        const kv = utf8Value.split('>')\n        const init = b64Int(kv[0])\n        for (let i = 0, e = xInt(kv[1]); i <= e; ++i) {\n          result[init + i] = charIterator++\n        }\n      } else {\n        result[b64Int(utf8Value)] = charIterator++\n      }\n    }\n  }\n  return result\n}\n\n/**\n * decompress each value in utf8-to-jis-table.constants.js object (e.g \"4[p[S[A,C,M,Q,Y,U,c,s,k,0,8,B,D,P,T,b,X,j,z,r,7],WL,S[g,v,o,3,/,d,w,l,4],WC]]\" to\n * \"4pSA,4pSC,4pSM,4pSQ,4pSY,4pSU,4pSc,4pSs,4pSk,4pS0,4pS8,4pSB,4pSD,4pSP,4pST,4pSb,4pSX,4pSj,4pSz,4pSr,4pS7,4pWL,4pSg,4pSv,4pSo,4pS3,4pS/,4pSd,4pSw,4pSl,4pS4,4pWC\")\n * @param {string} compressedVals - compressed utf8-to-jis-table.constants.js field value\n */\nfunction decompressUtf8ValsStr (compressedVals) {\n  const commaSeparatedVals = compressedVals.replace(/;[a-zA-Z0-9+/]+;/g, match => match.slice(1, -1).split('').join(','))\n  let result = ''\n  let prefix = ''\n  let initPrefix = ''\n  for (const char of commaSeparatedVals) {\n    switch (char) {\n      case '[':\n        initPrefix = prefix\n        break\n      case ']':\n        initPrefix = initPrefix.slice(0, -1)\n        break\n      case ',':\n        result += prefix + ','\n        prefix = initPrefix\n        break\n      default:\n        prefix += char\n    }\n  }\n  result += prefix\n  return result\n}\n\n/** @type {(x:CompressedTable) => {Utf8ToJisTable: () => Utf8ToJisTable}} x  */\nexport const usingTable = (compressedTable) => {\n  let generatedTable = null\n  return {\n    Utf8ToJisTable () {\n      generatedTable ??= decompressUtf8ToJisTable(compressedTable)\n      return generatedTable\n    },\n  }\n}\n\nexport const getUtf8ToJisTable = usingTable(UTF8_TO_JIS_TABLE).Utf8ToJisTable\n", "import { getUtf8ToJisTable } from './utf8-to-jis-table.js'\n\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\nconst sjisDecoder = new TextDecoder('sjis')\n\n/**\n * @param {string} str - input text\n * @returns {Uint8Array} utf8 encoded byte array\n */\nexport const textToBytes = (str) => encoder.encode(str)\n\n/**\n * @param {Uint8Array} bytes - utf8 encoded byte array\n * @returns {string} decoded output\n */\nexport const bytesToText = (bytes) => decoder.decode(bytes)\n\n/**\n * @param {string} base64 - input base64 text\n * @returns {Uint8Array} byte array\n */\nexport const base64ToBytes = (base64) => Uint8Array.from(atob(base64), (m) => /** @type {number} */(m.codePointAt(0)))\n\n/**\n * @param {Uint8Array} bytes - byte array\n * @returns {string} base64 text\n */\nexport const bytesToBase64 = (bytes) => btoa(Array.from(bytes, (x) => String.fromCodePoint(x)).join(''))\n\n/**\n * @param {string} str - input text\n * @returns {string} encoded input text in base64\n */\nexport const textToBase64 = (str) => bytesToBase64(encoder.encode(str))\n\n/**\n * @param {string} base64 - input base64 text\n * @returns {string} decoded input text\n */\nexport const base64ToText = (base64) => decoder.decode(base64ToBytes(base64))\n\n/**\n * @param {string} hex - hex string\n * @returns {string} converted string in base64\n */\nexport const hexToBase64 = (hex) => bytesToBase64(hexToBytes(hex))\n\n/**\n * @param {string} base64 - input base64 text\n * @returns {string} converted string in hexadecimal\n */\nexport const base64ToHex = (base64) => bytesToHex(base64ToBytes(base64))\n\n/**\n * @param {string} hex - hex string\n * @returns {Uint8Array} byte array\n */\nexport function hexToBytes (hex) {\n  const bytes = []\n  for (let c = 0, e = hex.length; c < e; c += 2) {\n    bytes.push(parseInt(hex.substring(c, c + 2), 16))\n  }\n  return Uint8Array.from(bytes)\n}\n\n/**\n * @param {Uint8Array} bytes - byte array\n * @returns {string} hex string\n */\nexport const bytesToHex = (bytes) => Array.from(bytes).map(byte => ((byte + 256) & 0xff).toString(16)).join('')\n\n/**\n * @param {string} str - input text\n * @returns {Uint8Array} SJIS encoded byte array\n */\nexport const textToSjisBytes = (str) => UTF8ToSJIS(textToBytes(str))\n\n/**\n * @param {Uint8Array} bytes - SJIS encoded byte array\n * @returns {string} decoded output\n */\nexport const sjisBytesToText = (bytes) => sjisDecoder.decode(bytes)\n\n/**\n * @param {Uint8Array} data - utf8 encoded byte array\n * @returns {Uint8Array} SJIS encoded byte array\n */\n// eslint-disable-next-line sonarjs/cognitive-complexity -- its low level, it is meant to be complex\nfunction UTF8ToSJIS (data) {\n  const FALLBACK_CHARACTER = 63 // '?'\n  const UTF8_TO_JIS_TABLE = getUtf8ToJisTable()\n\n  /** @type {number[]} */\n  const results = []\n  const len = data && data.length\n  let b1, b2, utf8, jis\n\n  for (let i = 0; i < len; i++) {\n    const b = data[i]\n\n    if (b >= 0x80) {\n      if (b <= 0xDF) {\n        // 2 bytes\n        utf8 = (b << 8) + data[++i]\n      } else if (b <= 0xEF) {\n        // 3 bytes\n        utf8 = (b << 16) +\n               (data[++i] << 8) +\n               (data[++i] & 0xFF)\n      } else {\n        // 4 bytes\n        utf8 = (b << 24) +\n               (data[++i] << 16) +\n               (data[++i] << 8) +\n               (data[++i] & 0xFF)\n      }\n\n      jis = UTF8_TO_JIS_TABLE[utf8]\n      if (jis == null) {\n        results[results.length] = FALLBACK_CHARACTER\n      } else {\n        if (jis < 0xFF) {\n          results[results.length] = jis + 0x80\n        } else {\n          if (jis > 0x10000) {\n            jis -= 0x10000\n          }\n\n          b1 = jis >> 8\n          b2 = jis & 0xFF\n          if (b1 & 0x01) {\n            b1 >>= 1\n            if (b1 < 0x2F) {\n              b1 += 0x71\n            } else {\n              b1 -= 0x4F\n            }\n\n            if (b2 > 0x5F) {\n              b2 += 0x20\n            } else {\n              b2 += 0x1F\n            }\n          } else {\n            b1 >>= 1\n            if (b1 <= 0x2F) {\n              b1 += 0x70\n            } else {\n              b1 -= 0x50\n            }\n            b2 += 0x7E\n          }\n          results[results.length] = b1 & 0xFF\n          results[results.length] = b2 & 0xFF\n        }\n      }\n    } else {\n      results[results.length] = data[i] & 0xFF\n    }\n  }\n\n  return Uint8Array.from(results)\n}\n", "import { MODE_KANJI } from './mode-bits.constants.js'\nimport { textToSjisBytes } from '../utils/text-decode-encode.util.js'\n\n/**\n * Create QR code Kanji mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject & {readonly bytes: Uint8Array}} created mode object\n */\nexport const QrKanji = (data) => {\n  const bytes = textToSjisBytes(data)\n  return Object.freeze({\n    data,\n    bytes,\n    mode: MODE_KANJI,\n    length: ~~(bytes.length / 2),\n    write: writeDataToBitBuffer.bind(null, bytes),\n  })\n}\n\n/**\n * Writes kanji data to bit buffer that will be used to generate the QR code\n * @param {Uint8Array} bytes - QrKanji mode object data byte array\n * @param {import(\"./../utils/qr-bit-buffer.js\").QrBitBuffer} buffer - target bit buffer\n */\nfunction writeDataToBitBuffer (bytes, buffer) {\n  let i = 0\n\n  while (i + 1 < bytes.length) {\n    let c = ((0xff & bytes[i]) << 8) | (0xff & bytes[i + 1])\n\n    if (c >= 0x8140 && c <= 0x9FFC) {\n      c -= 0x8140\n    } else if (c >= 0xE040 && c <= 0xEBBF) {\n      c -= 0xC140\n    } else {\n      throw Error(`illegal char at ${i + 1}/${c}`)\n    }\n\n    c = ((c >>> 8) & 0xff) * 0xC0 + (c & 0xff)\n    buffer.put(c, 13)\n    i += 2\n  }\n\n  if (i < bytes.length) {\n    throw Error(`illegal char at ${i + 1}`)\n  }\n}\n\n/**\n * @param {string} text - text to validate\n * @returns {import('./mode-bits.constants.js').ModeObject & {readonly bytes: Uint8Array} | null} created mode object or null if invalid\n */\nexport function getValidQrKanjiOrNull (text) {\n  const modeObject = QrKanji(text)\n  const { bytes } = modeObject\n\n  let i = 0\n\n  while (i + 1 < bytes.length) {\n    let c = ((0xff & bytes[i]) << 8) | (0xff & bytes[i + 1])\n\n    if (c >= 0x8140 && c <= 0x9FFC) {\n      c -= 0x8140\n    } else if (c >= 0xE040 && c <= 0xEBBF) {\n      c -= 0xC140\n    } else {\n      return null\n    }\n\n    c = ((c >>> 8) & 0xff) * 0xC0 + (c & 0xff)\n    i += 2\n  }\n  return i >= bytes.length ? modeObject : null\n}\n", "import { MODE_8BIT_BYTE } from './mode-bits.constants.js'\nimport { textToBytes } from '../utils/text-decode-encode.util.js'\n\n/**\n * Create QR code byte mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject} created mode object\n */\nexport const Qr8BitByte = (data) => Object.freeze({\n  data,\n  mode: MODE_8BIT_BYTE,\n  length: data.length,\n  write: writeDataToBitBuffer.bind(null, textToBytes(data)),\n})\n\n/**\n * Writes byte data to bit buffer that will be used to generate the QR code\n * @param {Uint8Array} data - Qr8BitByte mode object data byte array\n * @param {import(\"./../utils/qr-bit-buffer.js\").QrBitBuffer} buffer - target bit buffer\n */\nfunction writeDataToBitBuffer (data, buffer) {\n  for (const byte of data) {\n    buffer.put(byte, 8)\n  }\n}\n", "import { QrNumber } from './number.mode.js'\nimport { QrAlphaNum } from './alphanum.mode.js'\nimport { getValidQrKanjiOrNull } from './kanji.mode.js'\nimport { Qr8BitByte } from './byte.mode.js'\nimport { MODE_8BIT_BYTE, MODE_ALPHA_NUM, MODE_KANJI, MODE_NUMBER } from '../modes/mode-bits.constants.js'\n\n/**\n * Create QR code Kanji mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject} get best matching mode\n */\nexport function getBestMode (data) {\n  if (/^\\d+$/.test(data)) {\n    return QrNumber(data)\n  }\n  if (/^[0-9A-Z $%*+-./:]+$/.test(data)) {\n    return QrAlphaNum(data)\n  }\n  return getValidQrKanjiOrNull(data) ?? Qr8BitByte(data)\n}\n\n/** @type {{[mode: number]: number[]}} */\nconst CharCountBitLengthTable = {\n  [MODE_NUMBER]:    [10, 12, 14],\n  [MODE_ALPHA_NUM]: [9, 11, 13],\n  [MODE_8BIT_BYTE]: [8, 16, 16],\n  [MODE_KANJI]:     [8, 10, 12],\n}\n\n/**\n * @param {number} mode - mode balue\n * @param {number} type - qr version\n * @returns {number} the number of bits in character count indicator\n */\nexport function getCharCountBitLength (mode, type) {\n  if (!(type >= 1 && type < 41)) {\n    throw Error(`invalid type: ${type}`)\n  }\n  const typesBitLength = CharCountBitLengthTable[mode]\n  if (!typesBitLength) {\n    throw Error(`invalid mode: ${mode}`)\n  }\n  const typeIndex = type < 10 ? 0 : type < 27 ? 1 : 2\n  return typesBitLength[typeIndex]\n};\n", "/**\n * The Galois field exponent table.\n */\nconst EXP_TABLE = new Uint8Array(256)\n/**\n * The Galois field logarithmic table.\n */\nconst LOG_TABLE = new Uint8Array(256)\n\n// fill exponent table\nfor (let i = 0; i < 8; i += 1) {\n  EXP_TABLE[i] = 1 << i\n}\nfor (let i = 8; i < 256; i += 1) {\n  EXP_TABLE[i] = EXP_TABLE[i - 4] ^\n    EXP_TABLE[i - 5] ^\n    EXP_TABLE[i - 6] ^\n    EXP_TABLE[i - 8]\n}\n// fill logarithmic table\nfor (let i = 0; i < 255; i += 1) {\n  LOG_TABLE[EXP_TABLE[i]] = i\n}\n\n/**\n * @param {number} n - input\n * @returns {number} logarithm of {@link n} using Galois field logarithmic table\n */\nexport function glog (n) {\n  if (n < 1) { throw Error(`glog(${n})`) }\n  return LOG_TABLE[n]\n}\n\n/**\n * @param {number} n - input\n * @returns {number} exponential of {@link n} using Galois field exponent table\n */export function gexp (n) {\n  while (n < 0) { n += 255 }\n  while (n >= 256) { n -= 255 }\n  return EXP_TABLE[n]\n}\n", "import { gexp, glog } from './qr-math.util.js'\n\nclass QRPolynomial {\n  /** @type {readonly number[]} */\n  array\n\n  /**\n   * @param {ArrayLike<number>} num - polinomial value\n   * @param {number} shift - shift value\n   */\n  constructor (num, shift = 0) {\n    let offset = 0\n    const numLen = num.length\n\n    while (offset < numLen && num[offset] === 0) {\n      offset += 1\n    }\n    const lengthAfterOffset = numLen - offset\n    const array = new Array(lengthAfterOffset + shift)\n    for (let i = 0; i < lengthAfterOffset; i += 1) {\n      array[i] = num[i + offset]\n    }\n\n    this.array = Object.freeze(array)\n    return Object.freeze(this)\n  }\n\n  /** @param {number} index - value position */\n  getAt (index) {\n    return this.array[index]\n  }\n\n  get length () {\n    return this.array.length\n  }\n\n  /**\n   * @param {QRPolynomial} other - right side of operation\n   * @returns {QRPolynomial} multiplication result\n   */\n  multiply (other) {\n    const { length, array } = this\n    const { length: otherLength, array: otherArray } = other\n\n    const num = new Array(length + otherLength - 1)\n\n    for (let i = 0; i < length; i += 1) {\n      for (let j = 0; j < otherLength; j += 1) {\n        num[i + j] ^= gexp(glog(array[i]) + glog(otherArray[j]))\n      }\n    }\n\n    return new QRPolynomial(num, 0)\n  }\n\n  /**\n   * @param {Readonly<QRPolynomial>} other - right side of operation\n   * @returns {QRPolynomial} mod result\n   */\n  mod (other) {\n    const { length, array } = this\n    const { length: otherLength, array: otherArray } = other\n\n    if (length - otherLength < 0) {\n      return this\n    }\n\n    const ratio = glog(array[0]) - glog(otherArray[0])\n\n    const num = Uint32Array.from(array)\n\n    for (let i = 0; i < otherLength; i += 1) {\n      num[i] ^= gexp(glog(otherArray[i]) + ratio)\n    }\n\n    // recursive call\n    return new QRPolynomial(num, 0).mod(other)\n  };\n}\n\n/**\n * Transforms array into a polynomial\n * @param {ArrayLike<number>} num - polynomial values\n * @param {number} [shift] - shift value\n * @returns {Readonly<QRPolynomial>} polynomial\n */\nexport function QrPolynomial (num, shift = 0) {\n  return new QRPolynomial(num, shift)\n};\n", "import { QrPolynomial } from '../utils/qr-polynomial'\nimport { gexp } from '../utils/qr-math.util'\n\n/**\n * memoize getErrorCorrectPolynomial as it is called multiple times when generating QR Code\n */\nconst memoECPolynomials = [\n  QrPolynomial([1], 0),\n]\n\n/**\n * @param {number} errorCorrectLength - error correction codeword count\n * @returns {ReturnType<QrPolynomial>} error correction polynomial\n */\nexport function getErrorCorrectPolynomial (errorCorrectLength) {\n  if (memoECPolynomials.length > errorCorrectLength) {\n    return memoECPolynomials[errorCorrectLength]\n  }\n  const lastIndex = memoECPolynomials.length - 1\n  let polynomial = memoECPolynomials[lastIndex]\n  for (let i = lastIndex; i < errorCorrectLength; i += 1) {\n    polynomial = polynomial.multiply(QrPolynomial([1, gexp(i)], 0))\n    memoECPolynomials.push(polynomial)\n  }\n  return polynomial\n};\n", "import { QrBitBuffer } from './qr-bit-buffer.js'\nimport { ECBlocksInfo } from '../error-correction/qr-ec-block.utils.js'\nimport { getCharCountBitLength } from '../modes/mode-utils.util.js'\nimport { getErrorCorrectPolynomial } from '../error-correction/ec-polynomial.js'\nimport { QrPolynomial } from './qr-polynomial.js'\n\nconst PAD0 = 0xEC\nconst PAD1 = 0x11\n\n/**\n *\n * @param {number} typeNumber - qr code version\n * @param {number} errorCorrectionLevel - error correction level\n * @param {readonly import (\"../modes/mode-bits.constants.js\").ModeObject[]} dataList - qr code raw data\n * @returns {number[]} qr code byte data\n */\nexport function createData (typeNumber, errorCorrectionLevel, dataList) {\n  const blocksInfo = ECBlocksInfo(typeNumber, errorCorrectionLevel)\n  const buffer = new QrBitBuffer()\n\n  for (const data of dataList) {\n    buffer.put(data.mode, 4)\n    buffer.put(data.length, getCharCountBitLength(data.mode, typeNumber))\n    data.write(buffer)\n  }\n\n  const totalDataCount = blocksInfo.totalDcCount\n\n  if (buffer.bitLength > totalDataCount * 8) {\n    throw Error(`code length overflow. (${buffer.bitLength} > ${totalDataCount * 8})`)\n  }\n\n  // end code\n  if (buffer.bitLength + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4)\n  }\n\n  // padding\n  while (buffer.bitLength % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // padding\n  while (true) {\n    if (buffer.bitLength >= totalDataCount * 8) {\n      break\n    }\n    buffer.put(PAD0, 8)\n\n    if (buffer.bitLength >= totalDataCount * 8) {\n      break\n    }\n    buffer.put(PAD1, 8)\n  }\n\n  return createBytes(buffer, blocksInfo)\n};\n\n/**\n * @param {QrBitBuffer} buffer - data buffer\n * @param {import('../error-correction/qr-ec-block.utils.js').ECBlocksInfo} blocksInfo - error correction blocks info\n */\nfunction createBytes (buffer, blocksInfo) {\n  const { maxDcCount, maxEcCount, blocks: ecBlocks, totalCount: totalCodeCount } = blocksInfo\n  const { ecdata, dcdata } = createCodewordsData(buffer, ecBlocks)\n\n  /** @type {number[]} */\n  const data = new Array(totalCodeCount)\n  let index = 0\n\n  for (let i = 0; i < maxDcCount; i += 1) {\n    for (let r = 0; r < ecBlocks.length; r += 1) {\n      if (i < dcdata[r].length) {\n        data[index] = dcdata[r][i]\n        index += 1\n      }\n    }\n  }\n\n  for (let i = 0; i < maxEcCount; i += 1) {\n    for (let r = 0; r < ecBlocks.length; r += 1) {\n      if (i < ecdata[r].length) {\n        data[index] = ecdata[r][i]\n        index += 1\n      }\n    }\n  }\n\n  return data\n};\n\n/**\n * @param {QrBitBuffer} buffer - - data buffer\n * @param {import('../error-correction/qr-ec-block.utils.js').ECBlocks} ecBlocks - error correction blocks\n */\nfunction createCodewordsData (buffer, ecBlocks) {\n  let offset = 0\n\n  /** @type {number[][]} */\n  const dcdata = new Array(ecBlocks.length)\n  /** @type {number[][]} */\n  const ecdata = new Array(ecBlocks.length)\n\n  for (let r = 0; r < ecBlocks.length; r += 1) {\n    const dcCount = ecBlocks[r].dataCount\n    const ecCount = ecBlocks[r].ecCount\n\n    dcdata[r] = new Array(dcCount)\n\n    for (let i = 0, e = dcdata[r].length; i < e; i += 1) {\n      dcdata[r][i] = 0xff & buffer.byteBuffer[i + offset]\n    }\n    offset += dcCount\n\n    const rsPoly = getErrorCorrectPolynomial(ecCount)\n    const rawPoly = QrPolynomial(dcdata[r], rsPoly.length - 1)\n\n    const modPoly = rawPoly.mod(rsPoly)\n    ecdata[r] = new Array(rsPoly.length - 1)\n    for (let i = 0; i < ecdata[r].length; i += 1) {\n      const modIndex = i + modPoly.length - ecdata[r].length\n      ecdata[r][i] = (modIndex >= 0) ? modPoly.getAt(modIndex) : 0\n    }\n  }\n\n  return { ecdata, dcdata }\n};\n", "import { ECBlocksInfo } from './error-correction/qr-ec-block.utils.js'\nimport { fromString, CORRECTION_LEVEL_M } from './error-correction/ec-level.js'\nimport { getPatternPositions } from './utils/alignment-pattern.util.js'\nimport { getBCHTypeInfo, getBCHTypeNumber, getMaskFunction } from './utils/qr-util.js'\nimport { createData } from './utils/create-data.util.js'\nimport { QrKanji } from './modes/kanji.mode.js'\nimport { Qr8BitByte } from './modes/byte.mode.js'\nimport { QrNumber } from './modes/number.mode.js'\nimport { QrAlphaNum } from './modes/alphanum.mode.js'\nimport { getBestMode, getCharCountBitLength } from './modes/mode-utils.util.js'\nimport { QrBitBuffer } from './utils/qr-bit-buffer.js'\n\nexport const NEIGHBOR_TOP_LEFT = 0b100_000_000\nexport const NEIGHBOR_TOP = 0b010_000_000\nexport const NEIGHBOR_TOP_RIGHT = 0b001_000_000\nexport const NEIGHBOR_LEFT = 0b000_100_000\nexport const NEIGHBOR_SELF = 0b000_010_000\nexport const NEIGHBOR_RIGHT = 0b000_001_000\n\nexport class QrCode {\n  /** @type {number} */\n  typeNumber = 0\n\n  /** @type {number} */\n\n  errorCorrectionLevel\n  /**\n   * module count is the amount of modules in the QR Code\n   * The module refers to the black and white dots that make up QR Code.\n   * @example moduleCount = 21 // QR code is a 21x21 matrix\n   */\n  moduleCount\n  modules\n  /** @type {number[] | null} */\n  #dataCache\n  /** @type {ReturnType<QrKanji | Qr8BitByte | QrNumber | QrAlphaNum>[] } */\n  dataList\n\n  /**\n   * @param {number} typeNumber - QR code version from 1 to 40\n   * @param {string} errorCorrectionLevel - error correction level, accepted values (case insensitive): l, low, m, medium, q, quartile, h, high\n   */\n  constructor (typeNumber = 0, errorCorrectionLevel = '') {\n    this.typeNumber = typeNumber ?? 0\n    this.errorCorrectionLevel = errorCorrectionLevel ? fromString(errorCorrectionLevel).bit : CORRECTION_LEVEL_M\n    this.moduleCount = 0\n    this.modules = createModuleTable(this.moduleCount)\n    this.#dataCache = null\n    this.dataList = []\n  }\n\n  /**\n   *\n   * @param {boolean} test - flag to determine if it is used for mask pattern evaluation\n   * @param {number} maskPattern - mask pattern to use\n   */\n  makeImpl (test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17\n\n    const moduleCount = this.moduleCount\n    this.modules = createModuleTable(moduleCount)\n    setupPositionProbePatterns(this)\n    setupPositionAdjustPattern(this)\n    setupTimingPattern(this)\n    setupTypeInfo(test, maskPattern, this)\n\n    if (this.typeNumber >= 7) {\n      setupTypeNumber(test, this)\n    }\n\n    if (this.#dataCache == null) {\n      this.#dataCache = createData(this.typeNumber, this.errorCorrectionLevel, this.dataList)\n    }\n\n    mapData(this.#dataCache, maskPattern, this)\n  };\n\n  /**\n   * @param {number} row - vertical position\n   * @param {number} col - horizontal position\n   * @returns {boolean} true if cell is a dark spot, false otherwise\n   */\n  isDark (row, col) {\n    const { modules, moduleCount } = this\n\n    if (row < 0 || moduleCount <= row || col < 0 || moduleCount <= col) {\n      throw Error(`out of bounds row: ${row}, column: ${col}, module count: ${moduleCount}`)\n    }\n    return modules[row][col]\n  };\n\n  /**\n   *\n   * @param {string} data - text data\n   * @param {'Byte'|'Numeric'|'Alphanumeric'|'Kanji'} [mode] - qr mode to use, uses best mode if absent\n   */\n  addData (data, mode) {\n    switch (mode) {\n      case 'Numeric' : this.dataList.push(QrNumber(data)); break\n      case 'Alphanumeric' : this.dataList.push(QrAlphaNum(data)); break\n      case 'Byte' : this.dataList.push(Qr8BitByte(data)); break\n      case 'Kanji' : this.dataList.push(QrKanji(data)); break\n      case null:\n      case undefined: this.dataList.push(getBestMode(data)); break\n      default : throw Error(`invalid mode \"${mode}\"`)\n    }\n\n    this.#dataCache = null\n  };\n\n  make () {\n    if (this.typeNumber < 1) {\n      this.typeNumber = getBestTypeNumber(this)\n    }\n    this.makeImpl(false, getBestMaskPattern(this))\n  };\n}\n\n/**\n * Gets the position of position detection pattern for the QR Code and draws them\n * @see drawPositionProbePattern to get more infomation about position detection pattern\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupPositionProbePatterns (qrcode) {\n  const { moduleCount } = qrcode\n  drawPositionProbePattern(qrcode, 0, 0)\n  drawPositionProbePattern(qrcode, moduleCount - 7, 0)\n  drawPositionProbePattern(qrcode, 0, moduleCount - 7)\n};\n\n/**\n * Draws a position detection pattern, one of three identical components of the Finder Pattern, normally on the top left, top right and bottom left\n * They require a blank space as separators for Position Detection Patterns\n * @example top right position detection pattern\n *   \u250C\u2500 blank space separator\n *   \u2502 \u250C\u2500 (row, col)\n *   v v\n * \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n *     \u2588\u2588          \u2588\u2588\n * \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\n *     \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\n * \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\n * \u2588\u2588  \u2588\u2588          \u2588\u2588\n *     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n * \u2588\u2588                 <- blank space separator\n *   \u2588\u2588  \u2588\u2588    \u2588\u2588  \u2588\u2588\n * @param {QrCode} qrcode - qr code object\n * @param {number} row - row position of the left part of the rectangle, see example\n * @param {number} col - column position of the left part of the rectangle, see example\n */\nfunction drawPositionProbePattern (qrcode, row, col) {\n  const { modules, moduleCount } = qrcode\n  const rowMin = row === 0 ? 0 : -1\n  const rowMax = row + 7 >= moduleCount ? moduleCount - row - 1 : 7\n  const colMin = col === 0 ? 0 : -1\n  const colMax = col + 7 >= moduleCount ? moduleCount - col - 1 : 7\n\n  for (let r = rowMin; r <= rowMax; r += 1) {\n    for (let c = colMin; c <= colMax; c += 1) {\n      const isDarkSpot = (\n        (r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)\n      )\n      modules[row + r][col + c] = isDarkSpot\n    }\n  }\n};\n\n/**\n * @param {QrCode} qrcode - qr code object\n * @returns {number} type number\n */\nfunction getBestTypeNumber (qrcode) {\n  const { errorCorrectionLevel, dataList } = qrcode\n\n  for (let typeNumber = 1; typeNumber < 40; typeNumber++) {\n    const ecBlocksInfo = ECBlocksInfo(typeNumber, errorCorrectionLevel)\n    const buffer = new QrBitBuffer()\n\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i]\n      buffer.put(data.mode, 4)\n      buffer.put(data.length, getCharCountBitLength(data.mode, typeNumber))\n      data.write(buffer)\n    }\n\n    if (buffer.bitLength <= ecBlocksInfo.totalDcCount * 8) {\n      return typeNumber\n    }\n  }\n\n  throw Error('data length too high to detect type number')\n}\n\n/**\n * @param {number} moduleCount - module count of a size of the matrix\n * @returns {boolean[][]} module table\n */\nfunction createModuleTable (moduleCount) {\n  const modules = new Array(moduleCount)\n  for (let row = 0; row < moduleCount; row += 1) {\n    modules[row] = new Array(moduleCount).fill(null)\n  }\n  return modules\n}\n\n/**\n * @param {QrCode} qrcode - qr code object\n * @returns {number} - byte value of mask pattern with less penalty points\n */\nfunction getBestMaskPattern (qrcode) {\n  let minLostPoint = 0\n  let pattern = 1\n  for (let i = 0; i < 8; i += 1) {\n    qrcode.makeImpl(true, i)\n\n    const lostPoint = getLostPoint(qrcode)\n\n    if (i === 0 || minLostPoint > lostPoint) {\n      minLostPoint = lostPoint\n      pattern = i\n    }\n  }\n\n  return pattern\n}\n\n/**\n * Gets the position of alignment patterns for the QR Code and draws them (the small rectangles in the rectangles in the QR Code)\n * @see paintAlignmentPattern to get more infomation about alignment patterns\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupPositionAdjustPattern (qrcode) {\n  for (const [row, col] of getPatternPositions(qrcode.typeNumber)) {\n    paintAlignmentPattern(qrcode, row, col)\n  }\n}\n\n/**\n * Draws an alignment pattern.\n *\n * Alignment pattern is a fixed reference pattern in defined positions in a matrix symbology,\n * which enables the decode software to resynchronise the coordinate mapping of the image modules\n * in the event of moderate amounts of distortion of the image\n * @example\n * \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n * \u2588\u2588      \u2588\u2588\n * \u2588\u2588  \u2588\u2588  \u2588\u2588\n * \u2588\u2588      \u2588\u2588\n * \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n * @param {QrCode} qrcode - qr code object\n * @param {number} row - row position of the center of alignment pattern\n * @param {number} col - column position of the center of alignment pattern\n */\nfunction paintAlignmentPattern (qrcode, row, col) {\n  const { modules } = qrcode\n\n  for (let r = -2; r <= 2; r += 1) {\n    for (let c = -2; c <= 2; c += 1) {\n      if (r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0)) {\n        modules[row + r][col + c] = true\n      } else {\n        modules[row + r][col + c] = false\n      }\n    }\n  }\n}\n\n/**\n * Draw the QR code timing pattern.\n *\n * A timing Pattern is an alternating sequence of dark and light modules enabling module\n * coordinates in the symbol to be determined.\n * @example\n *                avoid drawing on\n *               alignment patterns\n * \u2588\u2580\u2580\u2580\u2580\u2580\u2588               v               \u2588\u2580\u2580\u2580\u2580\u2580\u2588\n * \u2588 \u2588\u2588\u2588 \u2588             \u2584\u2584\u2584\u2584\u2584             \u2588 \u2588\u2588\u2588 \u2588\n * \u2588 \u2580\u2580\u2580 \u2588 \u2584 \u2584 \u2584 \u2584 \u2584 \u2584 \u2588 \u2584 \u2588 \u2584 \u2584 \u2584 \u2584 \u2584 \u2584 \u2588 \u2580\u2580\u2580 \u2588\n * \u2580\u2580\u2580\u2580\u2580\u2580\u2580     ^       \u2588\u2584\u2584\u2584\u2588   ^         \u2580\u2580\u2580\u2580\u2580\u2580\u2580\n *      \u2580   < timing patterns \u2500\u2518\n *      \u2580\n *      \u2580\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupTimingPattern (qrcode) {\n  const { modules, moduleCount } = qrcode\n\n  for (let r = 8; r < moduleCount - 8; r += 1) {\n    if (modules[r][6] != null) {\n      continue\n    }\n    modules[r][6] = (r % 2 === 0)\n  }\n\n  for (let c = 8; c < moduleCount - 8; c += 1) {\n    if (modules[6][c] != null) {\n      continue\n    }\n    modules[6][c] = (c % 2 === 0)\n  }\n};\n\n/**\n * @param {boolean} test - flag to determine if it is used for mask pattern evaluation\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupTypeNumber (test, qrcode) {\n  const { typeNumber, modules, moduleCount } = qrcode\n\n  const bits = getBCHTypeNumber(typeNumber)\n\n  for (let i = 0; i < 18; i += 1) {\n    const mod = (!test && ((bits >> i) & 1) === 1)\n    modules[Math.floor(i / 3)][i % 3 + moduleCount - 8 - 3] = mod\n  }\n\n  for (let i = 0; i < 18; i += 1) {\n    const mod = (!test && ((bits >> i) & 1) === 1)\n    modules[i % 3 + moduleCount - 8 - 3][Math.floor(i / 3)] = mod\n  }\n}\n\n/**\n *\n * @param {number[]} data - bit data of qrcode\n * @param {number} maskPattern - mask pattern number\n * @param {QrCode} qrcode - qr code object\n */\n// eslint-disable-next-line sonarjs/cognitive-complexity -- it's low level and simple enough\nfunction mapData (data, maskPattern, qrcode) {\n  const { moduleCount, modules } = qrcode\n\n  let inc = -1\n  let row = moduleCount - 1\n  let bitIndex = 7\n  let byteIndex = 0\n  const maskFunc = getMaskFunction(maskPattern)\n\n  for (let col = moduleCount - 1; col > 0; col -= 2) {\n    if (col === 6) col -= 1\n\n    while (true) {\n      for (let c = 0; c < 2; c += 1) {\n        if (modules[row][col - c] == null) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          const mask = maskFunc(row, col - c)\n\n          if (mask) {\n            dark = !dark\n          }\n\n          modules[row][col - c] = dark\n          bitIndex -= 1\n\n          if (bitIndex === -1) {\n            byteIndex += 1\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || moduleCount <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Calculates the penalty point of QR Code, used to evaluate the masking results\n *\n * After performing the masking operation with each Mask Pattern in turn, the results shall be evaluated by scoring\n * penalty points for each occurrence of the following features. The higher the number of points, the less acceptable\n * the result. In the table, the variables N1 to N4 represent weighted penalty scores for the undesirable features\n * (N1 = 3, N2 = 3, N3 = 40, N4 = 10), i is the amount by which the number of adjacent modules of the same color exceeds 5\n * and k is the rating of the deviation of the proportion of dark modules in the symbol from 50% in steps of 5%.\n * Although the masking operation is only performed on the encoding region of the symbol excluding the Format\n * Information, the area to be evaluated is the complete symbol\n * @example\n * \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n * \u2502 Feature                                      \u2502 Evaluation                            \u2502 condition Points        \u2502\n * \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n * \u2502 Adjacent modules in row/column in same color \u2502  No. of modules = (5 + i)             \u2502  N1 + i                 \u2502\n * \u2502                                              \u2502                                       \u2502                         \u2502\n * \u2502 Block of modules in same color               \u2502  Block size = m * n                   \u2502  N2 * (m - 1) * (n - 1) \u2502\n * \u2502                                              \u2502                                       \u2502                         \u2502\n * \u2502 1:1:3:1:1 ratio (dark:light:dark:light:dark) \u2502                                       \u2502  N3                     \u2502\n * \u2502 pattern in row/column                        \u2502                                       \u2502                         \u2502\n * \u2502                                              \u2502                                       \u2502                         \u2502\n * \u2502 Proportion of dark modules in entire symbol  \u2502  50 \u00B1 (5 * k)% to 50 \u00B1 (5 * (k + 1))% \u2502  N4 * k                 \u2502\n * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n *                         Evaluation table from ISO/IEC 18004:2000(E) International Standard\n * @param {QrCode} qrcode - qr code object\n * @returns {number} calculated penalty points\n */\n// eslint-disable-next-line max-lines-per-function, sonarjs/cognitive-complexity -- even it we split one function per level, we would have to use eslint-disable in them anyway\nexport function getLostPoint (qrcode) {\n  const { moduleCount, modules } = qrcode\n  /** @type {(r:number, c:number) => boolean} */\n  const isDark = (r, c) => modules[r][c]\n  let lostPoint = 0\n\n  // Feature 1 - Adjacent modules in row/column in same color\n\n  for (let row = 0; row < moduleCount; row += 1) {\n    for (let col = 0; col < moduleCount; col += 1) {\n      let sameCount = 0\n      const dark = isDark(row, col)\n\n      for (let r = -1; r <= 1; r += 1) {\n        if (row + r < 0 || moduleCount <= row + r) {\n          continue\n        }\n\n        for (let c = -1; c <= 1; c += 1) {\n          if (col + c < 0 || moduleCount <= col + c) {\n            continue\n          }\n\n          if (r === 0 && c === 0) {\n            continue\n          }\n\n          if (dark === isDark(row + r, col + c)) {\n            sameCount += 1\n          }\n        }\n      }\n\n      if (sameCount > 5) {\n        lostPoint += (3 + sameCount - 5)\n      }\n    }\n  };\n\n  // Feature 2 - Block of modules in same color\n\n  for (let row = 0; row < moduleCount - 1; row += 1) {\n    for (let col = 0; col < moduleCount - 1; col += 1) {\n      let count = 0\n      if (isDark(row, col)) count += 1\n      if (isDark(row + 1, col)) count += 1\n      if (isDark(row, col + 1)) count += 1\n      if (isDark(row + 1, col + 1)) count += 1\n      if (count === 0 || count === 4) {\n        lostPoint += 3\n      }\n    }\n  }\n\n  // Feature 3 - 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column\n\n  for (let row = 0; row < moduleCount; row += 1) {\n    for (let col = 0; col < moduleCount - 6; col += 1) {\n      if (isDark(row, col) &&\n          !isDark(row, col + 1) &&\n          isDark(row, col + 2) &&\n          isDark(row, col + 3) &&\n          isDark(row, col + 4) &&\n          !isDark(row, col + 5) &&\n          isDark(row, col + 6)) {\n        lostPoint += 40\n      }\n    }\n  }\n\n  for (let col = 0; col < moduleCount; col += 1) {\n    for (let row = 0; row < moduleCount - 6; row += 1) {\n      if (isDark(row, col) &&\n          !isDark(row + 1, col) &&\n          isDark(row + 2, col) &&\n          isDark(row + 3, col) &&\n          isDark(row + 4, col) &&\n          !isDark(row + 5, col) &&\n          isDark(row + 6, col)) {\n        lostPoint += 40\n      }\n    }\n  }\n\n  // Feature 4 - Proportion of dark modules in entire symbol\n\n  let darkCount = 0\n\n  for (let col = 0; col < moduleCount; col += 1) {\n    for (let row = 0; row < moduleCount; row += 1) {\n      if (isDark(row, col)) {\n        darkCount += 1\n      }\n    }\n  }\n\n  const ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5\n  lostPoint += ratio * 10\n\n  return lostPoint\n};\n\n/**\n * @param {boolean} test - flag to determine if it is used for mask pattern evaluation\n * @param {number} maskPattern - mask pattern number\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupTypeInfo (test, maskPattern, qrcode) {\n  const { errorCorrectionLevel, modules, moduleCount } = qrcode\n\n  const data = (errorCorrectionLevel << 3) | maskPattern\n  const bits = getBCHTypeInfo(data)\n\n  // vertical\n  for (let i = 0; i < 15; i += 1) {\n    const mod = (!test && ((bits >> i) & 1) === 1)\n\n    if (i < 6) {\n      modules[i][8] = mod\n    } else if (i < 8) {\n      modules[i + 1][8] = mod\n    } else {\n      modules[moduleCount - 15 + i][8] = mod\n    }\n  }\n\n  // horizontal\n  for (let i = 0; i < 15; i += 1) {\n    const mod = (!test && ((bits >> i) & 1) === 1)\n\n    if (i < 8) {\n      modules[8][moduleCount - i - 1] = mod\n    } else if (i < 9) {\n      modules[8][15 - i - 1 + 1] = mod\n    } else {\n      modules[8][15 - i - 1] = mod\n    }\n  }\n\n  // fixed module\n  modules[moduleCount - 8][8] = (!test)\n};\n", "/** @type {{[key: string]: string}} */\nconst xmlEscapeMap = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '&': '&amp;',\n  \"'\": '&apos;',\n  '\"': '&quot;',\n}\n\n/**\n * Escapes XML entities characters in `xml` string\n * @param {string} xml - xml to escape\n * @returns {string} escaped xml\n */\nexport function escapeXml (xml) {\n  return xml.replace(/[<>&'\"]/g, c => xmlEscapeMap[c])\n};\n", "/** @type {WeakRef<HTMLElement>} */\nlet tempDiv\n\n/**\n *\n */\nfunction getTempDiv () {\n  const elem = tempDiv?.deref()\n  if (elem) { return elem }\n  const newElem = document.createElement('div')\n  tempDiv = new WeakRef(newElem)\n  return newElem\n}\n\n/**\n *\n * @param {string} color - color to check\n * @param {string} fallback - fallback color if `color` is invalid\n */\nfunction getCssColorOrElse (color, fallback) {\n  const ele = getTempDiv()\n  ele.style.color = color\n  const result = ele.style.color.replace(/\\s+/, '').toLowerCase()\n  ele.style.color = ''\n  return result || fallback\n}\n\n/**\n * @returns {QRCodeCssColors} default CSS colors\n */\nexport function getDefaultColors () {\n  return {\n    darkColor: 'black',\n    lightColor: 'white',\n    cornerBorderColor: 'black',\n    cornerCenterColor: 'black',\n  }\n}\n\n/**\n *\n * @param {string} colorsVar - value of '--qrcode-color' property\n * @param {QRCodeCssColors} defaultColors - current default colors\n * @returns {QRCodeCssColors} updated colors\n */\nfunction parseQrcodeColorProp (colorsVar, defaultColors) {\n  const currentColors = { ...defaultColors }\n  if (colorsVar) {\n    const colorsList = colorsVar.split(/\\s+/)\n    const length = colorsList.length\n    if (length >= 1) {\n      currentColors.darkColor = getCssColorOrElse(colorsList[0], currentColors.darkColor)\n    }\n    if (length >= 2) {\n      currentColors.lightColor = getCssColorOrElse(colorsList[1], currentColors.lightColor)\n    }\n    if (length >= 3) {\n      currentColors.cornerBorderColor = getCssColorOrElse(colorsList[2], currentColors.cornerBorderColor)\n    }\n    if (length >= 4) {\n      currentColors.cornerCenterColor = getCssColorOrElse(colorsList[3], currentColors.cornerCenterColor)\n    }\n  }\n  return currentColors\n}\n\n/**\n *\n * @param {string} colorsVar - value of '--qrcode-corner-color' property\n * @param {QRCodeCssColors} defaultColors - current default colors\n * @returns {QRCodeCssColors} updated colors\n */\nfunction parseQrcodeCornerColorProp (colorsVar, defaultColors) {\n  const currentColors = { ...defaultColors }\n  if (colorsVar) {\n    const colorsList = colorsVar.split(/\\s+/)\n    if (colorsList.length === 1) {\n      currentColors.cornerBorderColor = getCssColorOrElse(colorsList[0], currentColors.cornerBorderColor)\n      currentColors.cornerCenterColor = currentColors.cornerBorderColor\n    }\n    if (colorsList.length >= 2) {\n      currentColors.cornerBorderColor = getCssColorOrElse(colorsList[0], currentColors.cornerBorderColor)\n      currentColors.cornerCenterColor = getCssColorOrElse(colorsList[1], currentColors.cornerCenterColor)\n    }\n  }\n  return currentColors\n}\n\n/**\n * @param {HTMLElement} element - target element\n * @returns {QRCodeColorProperties} cssColors to draw the QRCode\n */\nfunction QRCodeColorProperties (element) {\n  const computedStyle = getComputedStyle(element)\n  const propertyOf = (/** @type {string} */ prop) => computedStyle.getPropertyValue(prop).trim()\n\n  return {\n    color: propertyOf('--qrcode-color'),\n    darkColor: propertyOf('--qrcode-dark-color'),\n    lightColor: propertyOf('--qrcode-light-color'),\n    cornerColor: propertyOf('--qrcode-corner-color'),\n    cornerBorderColor: propertyOf('--qrcode-corner-border-color'),\n    cornerCenterColor: propertyOf('--qrcode-corner-center-color'),\n  }\n}\n\n/**\n * @param {QRCodeColorProperties} colorProperties - color properties\n * @returns {QRCodeCssColors} cssColors to draw the QRCode\n */\nexport function parseQrCodeColors (colorProperties) {\n  let currentColors = {\n    ...getDefaultColors(),\n    cornerBorderColor: '',\n    cornerCenterColor: '',\n  }\n  currentColors = parseQrcodeColorProp(colorProperties.color, currentColors)\n  currentColors.darkColor = getCssColorOrElse(colorProperties.darkColor, currentColors.darkColor)\n  currentColors.lightColor = getCssColorOrElse(colorProperties.lightColor, currentColors.lightColor)\n  currentColors = parseQrcodeCornerColorProp(colorProperties.cornerColor, currentColors)\n  currentColors.cornerBorderColor = getCssColorOrElse(colorProperties.cornerBorderColor, currentColors.cornerBorderColor) || currentColors.darkColor\n  currentColors.cornerCenterColor = getCssColorOrElse(colorProperties.cornerCenterColor, currentColors.cornerCenterColor) || currentColors.cornerBorderColor\n  return currentColors\n}\n\n/**\n * @param {HTMLElement} element - target element\n * @returns {QRCodeCssColors} cssColors to draw the QRCode\n */\nexport function parseQrCodeColorsFromElement (element) {\n  return parseQrCodeColors(QRCodeColorProperties(element))\n}\n\n/**\n * @typedef {object} QRCodeCssColors\n * @property {string} darkColor - color to paint the black spots of the QR Code\n * @property {string} lightColor - color to paint the white spots of the QR Code\n * @property {string} cornerBorderColor - color of the position probe pattern border\n * @property {string} cornerCenterColor - color of the position probe pattern center\n */\n\n/**\n * @typedef {object} QRCodeColorProperties\n * @property {string} color - `--qrcode-color` property value\n * @property {string} darkColor - `--qrcode-dark-color` property value\n * @property {string} lightColor - `--qrcode-light-color` property value\n * @property {string} cornerColor - `--qrcode-corner-color` property value\n * @property {string} cornerBorderColor - `--qrcode-corner-border-color` property value\n * @property {string} cornerCenterColor - `--qrcode-corner-center-color` property value\n */\n", "export const DEFAULT_STYLE = 'default'\nexport const ROUNDED_STYLE = 'rounded'\nexport const SQUARE_STYLE = 'square'\nexport const DOT_STYLE = 'dot'\n\nconst validStyles = /** @type {const} */([DEFAULT_STYLE, ROUNDED_STYLE, SQUARE_STYLE, DOT_STYLE])\n\n/**\n * @param {string} style - style to apply\n * @param {QRCodeCssStyle} fallback - fallback color if `color` is invalid\n * @returns {QRCodeCssStyle} validStyle\n */\nfunction getStyleOrElse (style, fallback) {\n  if (typeof style !== 'string') {\n    return fallback\n  }\n  const toLowerCaseStyle = /** @type {QRCodeCssStyle} */ (style.toLocaleLowerCase())\n  const isValidStyle = validStyles.includes(toLowerCaseStyle)\n  return isValidStyle ? toLowerCaseStyle : fallback\n}\n\n/**\n * @returns {QRCodeCssStyles} default CSS styles\n */\nexport function getDefaultStyles () {\n  return {\n    dots: DEFAULT_STYLE,\n    cornerBorder: DEFAULT_STYLE,\n    cornerCenter: DEFAULT_STYLE,\n  }\n}\n\n/**\n *\n * @param {string} colorsVar - value of '--qrcode-color' property\n * @param {QRCodeCssStyles} defaultColors - current default colors\n * @returns {QRCodeCssStyles} updated colors\n */\nfunction parseQrcodeStyleProp (colorsVar, defaultColors) {\n  const currentStyles = { ...defaultColors }\n  if (colorsVar) {\n    const colorsList = colorsVar.trim().split(/\\s+/)\n    const length = colorsList.length\n    if (length >= 1) {\n      currentStyles.dots = getStyleOrElse(colorsList[0], currentStyles.dots)\n    }\n    if (length >= 2) {\n      currentStyles.cornerBorder = getStyleOrElse(colorsList[1], currentStyles.cornerBorder)\n    }\n    if (length >= 3) {\n      currentStyles.cornerCenter = getStyleOrElse(colorsList[2], currentStyles.cornerCenter)\n    }\n  }\n  return currentStyles\n}\n\n/**\n * @param {HTMLElement} element - target element\n * @returns {QRCodeStyleProperties} cssColors to draw the QRCode\n */\nfunction QRCodeStyleProperties (element) {\n  const computedStyle = getComputedStyle(element)\n  const propertyOf = (/** @type {string} */ prop) => computedStyle.getPropertyValue(prop).trim()\n\n  return {\n    style: propertyOf('--qrcode-style'),\n    dotStyle: propertyOf('--qrcode-dot-style'),\n    cornerBorderStyle: propertyOf('--qrcode-corner-border-style'),\n    cornerCenterStyle: propertyOf('--qrcode-corner-center-style'),\n  }\n}\n\n/**\n * @param {QRCodeStyleProperties} styleProperties - color properties\n * @returns {QRCodeCssStyles} cssColors to draw the QRCode\n */\nexport function parseQrCodeStyles (styleProperties) {\n  let currentStyles = getDefaultStyles()\n  currentStyles = parseQrcodeStyleProp(styleProperties.style, currentStyles)\n  currentStyles.dots = getStyleOrElse(styleProperties.dotStyle, currentStyles.dots)\n  currentStyles.cornerBorder = getStyleOrElse(styleProperties.cornerBorderStyle, currentStyles.cornerBorder)\n  currentStyles.cornerCenter = getStyleOrElse(styleProperties.cornerCenterStyle, currentStyles.cornerCenter)\n  return currentStyles\n}\n\n/**\n * @param {HTMLElement} element - target element\n * @returns {QRCodeCssStyles} cssColors to draw the QRCode\n */\nexport function parseQrCodeStylesFromElement (element) {\n  return parseQrCodeStyles(QRCodeStyleProperties(element))\n}\n\n/**\n * @typedef {typeof validStyles[number]} QRCodeCssStyle\n */\n\n/**\n * @typedef {object} QRCodeCssStyles\n * @property {QRCodeCssStyle} dots -  QR Code dots draw style\n * @property {QRCodeCssStyle} cornerBorder - QR Code position probe pattern border draw style\n * @property {QRCodeCssStyle} cornerCenter - QR Code position probe pattern center  draw style\n */\n\n/**\n * @typedef {object} QRCodeStyleProperties\n * @property {string} style - `--qrcode-style` property value\n * @property {string} dotStyle - `--qrcode-dot-style` property value\n * @property {string} cornerBorderStyle - `--qrcode-corner-border-style` property value\n * @property {string} cornerCenterStyle - `--qrcode-corner-center-style` property value\n */\n", "import { escapeXml } from '../utils/escape-xml.util.js'\nimport { getDefaultColors } from '../utils/css-colors.util.js'\nimport { getDefaultStyles, DOT_STYLE, ROUNDED_STYLE, DEFAULT_STYLE } from '../utils/css-qrcode-style.util.js'\n\n/**\n * @param {object} opts - function parameters\n * @param {number} [opts.cellSize] - cell size in pixels, defaults to 2\n * @param {number} [opts.margin] - margin in pixels, defaults to {@link cellSize} * 4\n * @param {string|SvgProp} [opts.alt] - image description\n * @param {string|SvgProp} [opts.title] - image title\n * @param {boolean} [opts.scalable] - flag to make the svg scalable\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-colors.util.js').QRCodeCssColors} [opts.colors] - qr code colors\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n * @returns {string} &lt;svg> element outer HTML\n */\nexport function createSvgTag ({ cellSize, margin, alt, title, qrcode, scalable, colors = getDefaultColors(), style }) {\n  const { moduleCount } = qrcode\n\n  cellSize ||= 2\n  margin ??= cellSize * 4\n\n  const titleProp = normalizeTitle(title)\n  const altProp = normalizeAlt(alt)\n\n  const paintSize = moduleCount * cellSize\n  const size = paintSize + margin * 2\n\n  const pathData = getPathData({ cellSize, margin, qrcode, style })\n\n  let qrSvg = '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"'\n  qrSvg += !scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : ''\n  qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" preserveAspectRatio=\"xMinYMin meet\"'\n  qrSvg += a11yAttributes(titleProp, altProp) + '>'\n  qrSvg += (titleProp.text) ? '<title id=\"' + escapeXml(titleProp.id) + '\">' + escapeXml(titleProp.text) + '</title>' : ''\n  qrSvg += (altProp.text) ? '<description id=\"' + escapeXml(altProp.id) + '\">' + escapeXml(altProp.text) + '</description>' : ''\n  qrSvg += '<g stroke=\"none\">'\n  qrSvg += `<path d=\"${pathData.bg}\" fill-rule=\"evenodd\" fill=\"${colors.lightColor}\"/>`\n  qrSvg += `<path d=\"${pathData.dots}\" fill=\"${colors.darkColor}\"/>`\n  qrSvg += `<path d=\"${pathData.finderCorner}\" fill=\"${colors.cornerBorderColor}\"/>`\n  qrSvg += `<path d=\"${pathData.finderCenter}\" fill=\"${colors.cornerCenterColor}\"/>`\n  qrSvg += '</g></svg>'\n\n  return qrSvg\n};\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n * @returns {PathData} path info to draw the QR Code\n */\nexport function getPathData ({ cellSize, margin, qrcode, style = getDefaultStyles() }) {\n  const dots = dotPathData({ cellSize, margin, qrcode, style })\n  const finderCorner = finderCornerPathData({ cellSize, margin, qrcode, style })\n  const finderCenter = finderCenterPathData({ cellSize, margin, qrcode, style })\n  const { moduleCount } = qrcode\n  const size = moduleCount * cellSize + margin * 2\n  const bg = `M0,0h${size}v${size}h-${size}z` + dots + finderCorner + finderCenter\n  return { dots, finderCenter, finderCorner, bg }\n}\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} opts.style - qr code colors\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction dotPathData ({ cellSize, margin, qrcode, style }) {\n  const { moduleCount } = qrcode\n\n  let d = ''\n\n  const drawRects = /** @type {const} */ ([\n    [8, 0, moduleCount - 8, 8],\n    [0, 8, 8, moduleCount - 8],\n    [8, 8, moduleCount, moduleCount],\n  ])\n  for (const rect of drawRects) {\n    d += renderQrCodeDotArea({ cellSize, margin, qrcode, style, rect })\n  }\n\n  return d\n}\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} opts.style - qr code colors\n * @param {readonly [number, number,number,number]} opts.rect - qr code colors area to render, values are [minCol, minRow, maxCol, maxRow]\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction renderQrCodeDotArea ({ cellSize, margin, qrcode, style, rect }) {\n  let d = ''\n\n  let render = dotRenders.square\n  if (style.dots === DOT_STYLE) {\n    render = dotRenders.dot\n  }\n  if (style.dots === ROUNDED_STYLE) {\n    render = dotRenders.rounded\n  }\n\n  const [minCol, minRow, maxCol, maxRow] = rect\n  for (let row = minRow; row < maxRow; row += 1) {\n    const mr = row * cellSize + margin\n    for (let col = minCol; col < maxCol; col += 1) {\n      const mc = col * cellSize + margin\n      d += render(mc, mr, cellSize, qrcode, row, col)\n    }\n  }\n\n  return d\n}\n\n/** @type {{[name: string]: DotPathRender}} */\nconst dotRenders = {\n  square: (x, y, cellSize, qrcode, row, col) => qrcode.isDark(row, col) ? `M${x},${y}h${cellSize}v${cellSize}h-${cellSize}z` : '',\n  dot (x, y, cellSize, qrcode, row, col) {\n    if (!qrcode.isDark(row, col)) {\n      return ''\n    }\n    const r = cellSize / 2\n    return circlePath(x + r, y + r, r, 0)\n  },\n  rounded (x, y, cellSize, qrcode, row, col) {\n    const { moduleCount } = qrcode\n    if (!qrcode.isDark(row, col)) {\n      return ''\n    }\n    const isTopDark = row > 0 && qrcode.isDark(row - 1, col)\n    const isLeftDark = col > 0 && qrcode.isDark(row, col - 1)\n    const isBottonDark = row < moduleCount - 1 && qrcode.isDark(row + 1, col)\n    const isRightDark = col < moduleCount - 1 && qrcode.isDark(row, col + 1)\n    const half = cellSize / 2\n\n    if (!isTopDark && !isLeftDark && !isBottonDark && !isRightDark) {\n      return circlePath(x + half, y + half, half, 0)\n    }\n\n    return `M${x + half},${y}` +\n    (isTopDark || isRightDark ? `h${half}v${half}` : `a${half},${half} 0 0,1 ${half},${half}`) +\n    (isRightDark || isBottonDark ? `v${half}h-${half}` : `a${half},${half} 0 0,1 -${half},${half}`) +\n    (isBottonDark || isLeftDark ? `h-${half}v-${half}` : `a${half},${half} 0 0,1 -${half},-${half}`) +\n    (isLeftDark || isTopDark ? `v-${half}h${half}` : `a${half},${half} 0 0,1 ${half},-${half}`) +\n    'z'\n  },\n\n}\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} opts.style - QR code style\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction finderCornerPathData ({ cellSize, margin, qrcode, style }) {\n  const { moduleCount } = qrcode\n  return finderCornerPath(cellSize, 0, 0, margin, qrcode, style) +\n    finderCornerPath(cellSize, moduleCount - 7, 0, margin, qrcode, style) +\n    finderCornerPath(cellSize, 0, moduleCount - 7, margin, qrcode, style)\n}\n\n/**\n * @param {number} cellSize - cell size in pixels\n * @param {number} x - qr code column position of finder path\n * @param {number} y - qr code row position of finder path\n * @param {number} margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} style - QR code style\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction finderCornerPath (cellSize, x, y, margin, qrcode, style) {\n  const rx = x * cellSize + margin\n  const ry = y * cellSize + margin\n  const rectLenght = 7 * cellSize\n  const innerRecLength = 5 * cellSize\n  if (style.cornerBorder === DOT_STYLE) {\n    const radius = rectLenght / 2\n    const cx = rx + radius\n    const cy = ry + radius\n    const innerRadius = innerRecLength / 2\n    return circlePath(cx, cy, radius, 0) + circlePath(cx, cy, innerRadius, 1)\n  }\n  if (style.cornerBorder === ROUNDED_STYLE) {\n    const outerR = 2.5 * cellSize\n    const lenBeforeArc = rectLenght - 2 * outerR\n    const outerRect = `M${rx + outerR},${ry}h${lenBeforeArc}a${outerR},${outerR} 0 0,1 ${outerR},${outerR}v${lenBeforeArc}a${outerR},${outerR} 0 0,1 -${outerR},${outerR}h${-lenBeforeArc}a${outerR},${outerR} 0 0,1 -${outerR},-${outerR}v${-lenBeforeArc}a${outerR},${outerR} 0 0,1 ${outerR},-${outerR}z`\n    const innerR = 1.5 * cellSize\n    const innerlenBeforeArc = rectLenght - 2 * outerR\n    const innerRect = `M${rx + outerR + innerlenBeforeArc},${ry + cellSize}h-${innerlenBeforeArc}a${innerR},${innerR} 0 0,0 -${innerR},${innerR}v${innerlenBeforeArc}a${innerR},${innerR} 0 0,0 ${innerR},${innerR}h${innerlenBeforeArc}a${innerR},${innerR} 0 0,0 ${innerR},-${innerR}v${-innerlenBeforeArc}a${innerR},${innerR} 0 0,0 -${innerR},-${innerR}z`\n    return outerRect + innerRect\n  }\n  if (style.cornerBorder === DEFAULT_STYLE && style.dots !== DEFAULT_STYLE) {\n    const drawRects = /** @type {const} */ ([\n      [x, y, x + 7, y + 1],\n      [x, y + 6, x + 7, y + 7],\n      [x, y + 1, x + 1, y + 6],\n      [x + 6, y + 1, x + 7, y + 6],\n    ])\n    return drawRects.map(rect => renderQrCodeDotArea({ cellSize, margin, qrcode, style, rect })).join('')\n  }\n  return `M${rx},${ry}h${rectLenght}v${rectLenght}h-${rectLenght}zM${rx + cellSize},${ry + cellSize}v${innerRecLength}h${innerRecLength}v-${innerRecLength}z`\n}\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} opts.style - qr code colors\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction finderCenterPathData ({ cellSize, margin, qrcode, style }) {\n  const { moduleCount } = qrcode\n  return finderCenterPath(cellSize, 2, 2, margin, qrcode, style) +\n  finderCenterPath(cellSize, moduleCount - 5, 2, margin, qrcode, style) +\n  finderCenterPath(cellSize, 2, moduleCount - 5, margin, qrcode, style)\n}\n\n/**\n * @param {number} cellSize - cell size in pixels\n * @param {number} x - qr code column position of finder path\n * @param {number} y - qr code row position of finder path\n * @param {number} margin - margin in pixels\n *  @param {import('../qr-code.js').QrCode} qrcode - QR Code data\n *  @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} style - QR code style\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction finderCenterPath (cellSize, x, y, margin, qrcode, style) {\n  const rx = x * cellSize + margin\n  const ry = y * cellSize + margin\n  const rectLenght = 3 * cellSize\n  if (style.cornerCenter === DOT_STYLE) {\n    const radius = rectLenght / 2\n    const cx = rx + radius\n    const cy = ry + radius\n    return circlePath(cx, cy, radius, 0)\n  }\n  if (style.cornerCenter === ROUNDED_STYLE) {\n    const arcR = cellSize\n    const lenBeforeArc = rectLenght - 2 * arcR\n    return `M${rx + arcR},${ry}h${lenBeforeArc}a${arcR},${arcR} 0 0,1 ${arcR},${arcR}v${lenBeforeArc}a${arcR},${arcR} 0 0,1 -${arcR},${arcR}h${-lenBeforeArc}a${arcR},${arcR} 0 0,1 -${arcR},-${arcR}v${-lenBeforeArc}a${arcR},${arcR} 0 0,1 ${arcR},-${arcR}z`\n  }\n\n  if (style.cornerCenter === DEFAULT_STYLE && style.dots !== DEFAULT_STYLE) {\n    return renderQrCodeDotArea({ cellSize, margin, qrcode, style, rect: [x, y, x + 3, y + 3] })\n  }\n\n  return `M${rx},${ry}h${rectLenght}v${rectLenght}h-${rectLenght}z`\n}\n\n/**\n * @param {Required<SvgProp>} title - qr code title\n * @param {Required<SvgProp>} alt - qr code alt\n * @returns {string} acessibility attributes or empty string if empty `title` and `alt`\n */\nconst a11yAttributes = (title, alt) => (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' + escapeXml([title.id, alt.id].join(' ').trim()) + '\"' : ''\n\n/**\n * @param {string|SvgProp} [alt] - qr code alt\n * @returns {Required<SvgProp>} Composed alt property surrogate\n */\nconst normalizeAlt = (alt) => {\n  const result = (typeof alt === 'string') ? { text: alt, id: '' } : { text: '', id: '', ...alt }\n  result.id = result.id || 'qrcode-description'\n  return result\n}\n\n/**\n * Compose title property surrogate\n * @param {string|SvgProp} [title] - qr code title\n * @returns {Required<SvgProp>} Composed title property surrogate\n */\nconst normalizeTitle = (title) => {\n  const result = (typeof title === 'string') ? { text: title, id: '' } : { text: '', id: '', ...title }\n  result.id = result.id || 'qrcode-title'\n  return result\n}\n\n/**\n * Create a circle svg path\n * @param {number} cx - horizontal position of the circle center point\n * @param {number} cy - vericak position of the circle center point\n * @param {number} r - circle radius\n * @param {0|1} d -  to invert direction\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction circlePath (cx, cy, r, d) {\n  return `M${cx + r},${cy} a${r},${r} 0 1,${d} -${r * 2},0 a ${r},${r} 0 1,${d} ${r * 2},0z`\n}\n\n/**\n * @typedef {object} SvgProp\n * @property {string} text - attribute text\n * @property {string} [id] - title tag id\n */\n\n/**\n * @typedef {object} PathData\n * @property {string} dots - dots path d value\n * @property {string} finderCenter - finder center path d value\n * @property {string} finderCorner - finder corner path d value\n * @property {string} bg - light colored part path d value\n */\n\n/**\n * @callback DotPathRender\n * @param {number} x - top left x position of the square area to render\n * @param {number} y - top left y position of the square area to render\n * @param {number} cellSize - lenght of square area to render\n * @param {import('../qr-code.js').QrCode} qrcode - QR Code data\n * @param {number} row - QR Code dot row position to draw\n * @param {number} col - QR Code dot column position to draw\n */\n", "import { getPathData } from './svg.render.js'\nimport { getDefaultColors } from '../utils/css-colors.util.js'\n\n/**\n *\n * @param {object} opts - function parameters\n * @param {CanvasRenderingContext2D} opts.context - canvas rendering context\n * @param {number} [opts.cellSize] - cell size in pixels, defaults to 2\n * @param {number} [opts.margin] - margin in pixels, defaults to {@link cellSize} * 4\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-colors.util.js').QRCodeCssColors} [opts.colors] - qr code colors\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n */\nexport function renderTo2dContext ({ context, margin, cellSize = 2, qrcode, colors = getDefaultColors(), style }) {\n  margin ??= cellSize * 4\n\n  context.save()\n  const pathData = getPathData({ cellSize, margin, qrcode, style })\n  context.fillStyle = colors.lightColor\n  context.fill(new Path2D(pathData.bg), 'evenodd')\n  context.fillStyle = colors.darkColor\n  context.fill(new Path2D(pathData.dots))\n  context.fillStyle = colors.cornerBorderColor\n  context.fill(new Path2D(pathData.finderCorner), 'evenodd')\n  context.fillStyle = colors.cornerCenterColor\n  context.fill(new Path2D(pathData.finderCenter))\n\n  context.restore()\n}\n", "import { renderTo2dContext } from './canvas-2d-context.render.js'\n\n/**\n *\n * @param {object} opts - function parameters\n * @param {number} [opts.cellSize] - cell size in pixels, defaults to 2\n * @param {number} [opts.margin] - margin in pixels, defaults to {@link cellSize} * 4\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-colors.util.js').QRCodeCssColors} [opts.colors] - qr code colors\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n * @returns {string} data url of qr code image\n */\nexport function createDataURL ({ cellSize = 2, margin, qrcode, colors, style }) {\n  margin ??= cellSize * 4\n\n  const paintSize = qrcode.moduleCount * cellSize\n  const size = paintSize + margin * 2\n  const canvas = document.createElement('canvas')\n  canvas.width = size\n  canvas.height = size\n  const context = /** @type {CanvasRenderingContext2D} */(canvas.getContext('2d'))\n  renderTo2dContext({ context, cellSize, margin, qrcode, colors, style })\n  return canvas.toDataURL('image/png', 1.0)\n};\n", "import { createDataURL } from './data-url-canvas.render.js'\nimport { escapeXml } from '../utils/escape-xml.util.js'\n\n/**\n * @param {object} opts - function parameters\n * @param {number} [opts.cellSize] - cell size in pixels, defaults to 2\n * @param {number} [opts.margin] - margin in pixels, defaults to {@link cellSize} * 4\n * @param {string} [opts.alt] - image description\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-colors.util.js').QRCodeCssColors} [opts.colors] - qr code colors\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n * @returns {string} &lt;img> element outer HTML\n */\nexport function createImgTag ({ cellSize, margin, alt, qrcode, colors, style }) {\n  cellSize ||= 2\n  margin ??= cellSize * 4\n  const size = qrcode.moduleCount * cellSize + margin * 2\n  const altAttr = alt ? ` alt=\"${escapeXml(alt)}\"` : ''\n  return `<img src=\"${createDataURL({ cellSize, margin, qrcode, colors, style })}\" width=\"${size}\" height=\"${size}\"${altAttr}/>`\n};\n", "/**\n * @param {string} data - QR code data\n * @returns {string} unprocessed data\n */\nconst none = (data) => data\n\n/**\n * @param {string} data - QR code data\n * @returns {string} trimmed QR code data\n */\nconst trim = (data) => data.trim()\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data with trimmed lines\n */\nconst trimLines = (data) => data.split('\\n').map(line => line.trim()).join('\\n')\n\n/**\n * @param {string} lineStr - line content\n * @returns {{ level: number, isBlankLine: boolean }} identation information\n */\nfunction getLineIdentation (lineStr) {\n  const { length } = lineStr\n  for (let level = 0; level < length; level++) {\n    if (lineStr.charAt(level).trim() !== '') {\n      return { level, isBlankLine: false }\n    }\n  }\n  return { level: length, isBlankLine: true }\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data with all lines dedented\n */\nconst dedent = (data) => {\n  const lines = data.split('\\n')\n  const identationsByLine = lines.map(getLineIdentation)\n  const identationsLevelsToCheck = identationsByLine\n    .filter(({ isBlankLine }) => !isBlankLine)\n    .map(({ level }) => level)\n  if (identationsLevelsToCheck.length <= 0 || Math.min(...identationsLevelsToCheck) === 0) {\n    return data\n  }\n  const minIdentation = Math.min(...identationsLevelsToCheck)\n  const detentedLines = lines.map((line, lineNumber) => line.substring(Math.min(identationsByLine[lineNumber].level, minIdentation)))\n  return detentedLines.join('\\n')\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data with all lines dedented\n */\nconst dedentFromFirstLine = (data) => {\n  const lines = data.split('\\n')\n  const identationsByLine = lines.map(getLineIdentation)\n  const firstNonBlankLineIdentation = identationsByLine.find(({ isBlankLine }) => !isBlankLine)\n  if (!firstNonBlankLineIdentation) {\n    return data\n  }\n  const charAmountToDedent = firstNonBlankLineIdentation.level\n  const detentedLines = lines.map((line, lineNumber) => line.substring(Math.min(identationsByLine[lineNumber].level, charAmountToDedent)))\n  return detentedLines.join('\\n')\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data with trimmed lines\n */\nconst removeEmptylines = (data) => data.split('\\n').filter(line => line !== '').join('\\n')\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data without blank lines\n */\nconst removeBlanklines = (data) => data.split('\\n').filter(line => line.trim() !== '').join('\\n')\n\n/**\n * @param {string} data - QR code data\n * @returns {string} vcard handled data\n */\nconst vcard = (data) => {\n  const unwrapedTextData = removeBlanklines(dedentFromFirstLine(data))\n  /*\n    > Content lines SHOULD be folded to a maximum width of 75 octets, excluding the line\n    > break.  Multi-octet characters MUST remain contiguous\n\n    https://www.rfc-editor.org/rfc/rfc6350#section-3.2\n  */\n  let lineWidth = 0\n  let wrapedTextData = ''\n  for (const char of unwrapedTextData) {\n    if (char === '\\n') {\n      wrapedTextData += char\n      lineWidth = 0\n      continue\n    }\n    if (lineWidth >= 75) {\n      wrapedTextData += '\\n '\n      lineWidth = 1\n    }\n\n    wrapedTextData += char\n    lineWidth++\n  }\n  return useCrflLineBreak(wrapedTextData)\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} vevent handled data\n */\nconst vevent = (data) => {\n  /*\n    VEVENT is similar to VCARD\n\n    https://www.rfc-editor.org/rfc/rfc5545\n  */\n  return vcard(data)\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} data with newlines converted to CRFL (\\r\\n)\n */\nconst useCrflLineBreak = (data) => data.replaceAll('\\r\\n', '\\n').replaceAll('\\n', '\\r\\n')\n\n/**\n * @type {{[name:string]: (data: string) => string}}\n */\nconst preProcessMap = {\n  none,\n  pre: none,\n  trim,\n  dedent,\n  'dedent-from-first-line': dedentFromFirstLine,\n  'trim-line': trimLines,\n  'trim-lines': trimLines,\n  'no-empty-line': removeEmptylines,\n  'no-empty-lines': removeEmptylines,\n  'no-blank-line': removeBlanklines,\n  'no-blank-lines': removeBlanklines,\n  vcard,\n  vevent,\n}\n\n/**\n * @param {string} data - QR code element text content\n * @returns {string[]} processed data\n */\nfunction getPreproccessesFromContent (data) {\n  const trimmedData = trim(data)\n  if (/^BEGIN:[vV][cC][aA][rR][dD]/.test(trimmedData)) {\n    return ['vcard']\n  }\n  if (/^BEGIN:[vV][eE][vV][eE][nN][tT]/.test(trimmedData)) {\n    return ['vevent']\n  }\n  return ['trim']\n}\n\n/**\n * @param {string} preprocessAttr - QR code data-pre-process attribute\n * @param {string} data - QR code element text content to use `getPreproccessesFromContent` if invalid\n * @returns {string[]} processed data\n */\nfunction getPreproccessesFromAttribute (preprocessAttr, data) {\n  const splitData = preprocessAttr.split(' ')\n    .map(name => name.toLowerCase())\n    .filter(name => Object.hasOwn(preProcessMap, name))\n\n  if (splitData.length === 0) {\n    return getPreproccessesFromContent(data)\n  }\n  return splitData\n}\n\n/**\n * Process QR code element text element before transforming to QRCode\n * @param {string} data - QR code element text content\n * @param {string} [preprocessAttr] - QR code data-pre-process attribute\n * @returns {string} processed data\n */\nexport function preProcess (data, preprocessAttr) {\n  const preprocesses = preprocessAttr ? getPreproccessesFromAttribute(preprocessAttr, data) : getPreproccessesFromContent(data)\n  return preprocesses.reduce((acc, name) => preProcessMap[name](acc), data)\n}\n", "// generated code from src/web-component/qr-code.element.css\nvar stdin_default = \":host{display:inline-flex;justify-content:center}svg,img{align-self:center;max-height:100%}\\n\";\nexport {\n  stdin_default as default\n};\n", "import { QrCode } from '../qr-code.js'\nimport { createImgTag } from '../render/img-tag.render.js'\nimport { createSvgTag } from '../render/svg.render.js'\nimport { isValid } from '../error-correction/ec-level.js'\nimport { preProcess } from '../utils/data-pre-processing.util.js'\nimport { parseQrCodeColorsFromElement } from '../utils/css-colors.util.js'\nimport { parseQrCodeStylesFromElement } from '../utils/css-qrcode-style.util.js'\nimport css from './qr-code.element.css.generated.js'\n\nlet loadStyles = () => {\n  const sheet = new CSSStyleSheet()\n  sheet.replaceSync(css)\n  loadStyles = () => sheet\n  return sheet\n}\n/** @type {WeakMap<QRCodeElement, QrCode>} */\nconst qrCodeData = new WeakMap()\n\nexport class QRCodeElement extends HTMLElement {\n  constructor () {\n    super()\n    const shadowRoot = this.attachShadow({ mode: 'open' })\n    shadowRoot.adoptedStyleSheets = [loadStyles()]\n    observer.observe(this, observerOptions)\n  }\n\n  connectedCallback () {\n    applyQrCode(this)\n  }\n\n  get qrCodeContent () {\n    const { textContent } = this\n    return textContent ? preProcess(textContent, this.getAttribute('data-whitespace') || '') : textContent\n  }\n\n  get errorCorrectionLevel () {\n    const errorCorrectionLevelAttr = this.getAttribute('data-error-correction-level')\n    return errorCorrectionLevelAttr && isValid(errorCorrectionLevelAttr) ? errorCorrectionLevelAttr : 'Medium'\n  }\n}\n\n/** @type {MutationObserverInit} */\nconst observerOptions = {\n  characterData: true,\n  characterDataOldValue: true,\n  childList: true,\n  attributes: true,\n  subtree: true,\n}\nconst observer = new MutationObserver((records) => {\n  const updatedNodes = new Set()\n  for (const record of records) {\n    const { target } = record\n    if (target instanceof QRCodeElement) {\n      updatedNodes.add(target)\n    } else if (target.nodeType === Node.TEXT_NODE && target.parentElement instanceof QRCodeElement) {\n      updatedNodes.add(target.parentElement)\n    }\n  }\n  updatedNodes.forEach(el => el instanceof QRCodeElement && applyQrCode(el))\n})\n\n/**\n * @param {QRCodeElement} element - target QRCodeElement component element\n */\nfunction applyQrCode (element) {\n  const typeNumber = 0\n\n  const { shadowRoot } = element\n  if (!shadowRoot) {\n    return\n  }\n\n  const { qrCodeContent } = element\n  if (!qrCodeContent) {\n    return\n  }\n\n  const oldQr = qrCodeData.get(element)\n  const qr = new QrCode(typeNumber, element.errorCorrectionLevel)\n  qr.addData(qrCodeContent)\n  qr.make()\n  qrCodeData.set(element, qr)\n\n  const colors = parseQrCodeColorsFromElement(element)\n  const style = parseQrCodeStylesFromElement(element)\n\n  const renderMode = getRenderMode(element)\n  if (renderMode === 'svg') {\n    const svg = createSvgTag({ qrcode: qr, colors, scalable: isResizeEnabled(element), style })\n    shadowRoot.innerHTML = svg\n    return\n  }\n\n  const imgHtml = createImgTag({ qrcode: qr, colors, style })\n  const oldImgElement = shadowRoot.querySelector('img')\n  if (oldImgElement) {\n    const updated = updateImgElement(oldImgElement, imgHtml)\n    if (!updated) {\n      shadowRoot.innerHTML = imgHtml\n    }\n  } else {\n    shadowRoot.innerHTML = imgHtml\n  }\n\n  if (oldQr && (oldQr.dataList.length !== qr.dataList.length || oldQr.dataList.some((val, index) => val.data !== qr.dataList[index].data))) {\n    const customEvent = new CustomEvent('qrcode-content-change', { detail: { previousQRCode: oldQr, qrCode: qr } })\n    element.dispatchEvent(customEvent)\n  }\n}\n\n/**\n * Updates the image element, replacing the element with another &lt;img> will make the browser flash and re-render twice,\n * one for the updated HTML without the previous image, as it is loading, and another time with the loaded image, this\n * will make it update once without flash\n * @param {HTMLImageElement} imageElement - target &lt;img> element\n * @param {string} imgHtml img rendered with {@link createImgTag}\n * @returns {boolean} true if updated correctly, false if something failed. If false, applyQrCode() will fallback to replace the &lt;img>\n */\nfunction updateImgElement (imageElement, imgHtml) {\n  const imgDom = new DOMParser().parseFromString(imgHtml, 'text/html').querySelector('img')\n  if (!imgDom) {\n    return false\n  }\n  imageElement.src = imgDom.src\n  imageElement.width = imgDom.width\n  imageElement.height = imgDom.height\n  return true\n}\n\n/**\n * Gets the render mode to be used:\n *  - if mode is \"raster\", it will render the qrcode as an rasterized image\n *  - if mode is \"svg\", it will render the qrcode as a scalable image using SVG\n * @param {QRCodeElement} element - target qr code element\n * @returns {\"raster\"|\"svg\"} render mode\n */\nfunction getRenderMode (element) {\n  const renderModeCss = (getComputedStyle(element).getPropertyValue('--qrcode-render') || '').trim().toLowerCase()\n  if (renderModeCss === 'svg') return 'svg'\n  if (renderModeCss === 'raster') return 'raster'\n  if (isResizeEnabled(element)) return 'svg'\n  return 'raster'\n}\n\n/**\n * @param {QRCodeElement} element - target qr code element\n * @returns {boolean} true if resize enabled\n */\nfunction isResizeEnabled (element) {\n  const resizeCss = (getComputedStyle(element).getPropertyValue('--qrcode-resize') || '').trim().toLowerCase()\n  return resizeCss === 'true' || resizeCss === 'yes' || resizeCss === 'enabled' || resizeCss === 'enable'\n}\n", "import { QRCodeElement as Element } from '../web-component/qr-code.element.js'\nexport { QrCode } from '../qr-code.js'\n\nconst url = new URL(import.meta.url)\nconst elementName = url.searchParams.get('named')\nif (elementName) {\n  if (customElements.get(elementName) != null) {\n    console.error(`A custom element with name \"${elementName}\" already exists`)\n  } else {\n    customElements.define(elementName, Element)\n  }\n}\n\nexport const QRCodeElement = Element\nexport default QRCodeElement\n"],
  "mappings": "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GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EACxG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,GAAG,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EACxG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,GAAG,EAAG,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAAE,EAAI,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAAE,EACvG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,GAAG,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EACxG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,EAAE,EAAI,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,GAAG,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,EAAE,EAAI,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EACxG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,GAAG,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EACxG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,GAAG,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EACxG,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAAE,EAAI,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,GAAG,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EACxG,CAAC,GA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",
  "names": ["deepFreeze", "x", "EC_BLOCK_TABLE", "deepFreeze", "correctionLevelNames", "correctionLevelMap", "acc", "name", "bit", "result", "fromString", "string", "validKeys", "idx", "isValid", "ECBlock", "totalCount", "dataCount", "queryECBlocks", "typeNumber", "errorCorrectionLevel", "index", "rawEcBlock", "EC_BLOCK_TABLE", "length", "list", "i", "count", "j", "buildECBlocksInfo", "blocks", "totalDcCount", "totalEcCount", "maxDcCount", "maxEcCount", "block", "memoEcBlockInfo", "ECBlocksInfo", "versionEcCheck", "memo", "result", "calculateCoordinates", "version", "intervals", "distance", "step", "_", "index", "calculatePositions", "coords", "pos", "posLength", "i", "j", "positionsMemo", "getPatternPositions", "getBCHDigit", "data", "digit", "G15", "G18", "G15_MASK", "getBCHTypeInfo", "d", "getBCHTypeNumber", "maskPatternFunctions", "i", "j", "_", "getMaskFunction", "maskPattern", "result", "QrBitBuffer", "#byteBuffer", "#bitLength", "num", "length", "byteBuffer", "bitLength", "newBitLength", "newBufferLenght", "restBits", "bufIndex", "i", "shiftLeft", "index", "bit", "QrNumber", "data", "writeDataToBitBuffer", "buffer", "i", "strToNum", "s", "num", "e", "charToNum", "c", "zeroCharCode", "QrAlphaNum", "data", "writeDataToBitBuffer", "buffer", "i", "getCode", "c", "utf8_to_jis_table_constants_default", "xInt", "x", "b64Int", "base64ToHex", "decompressUtf8ToJisTable", "compressedTable", "result", "jisChar", "compressedUtf8ValsStr", "utf8Vals", "decompressUtf8ValsStr", "charIterator", "utf8Value", "key", "kv", "init", "i", "e", "compressedVals", "commaSeparatedVals", "match", "prefix", "initPrefix", "char", "usingTable", "generatedTable", "getUtf8ToJisTable", "utf8_to_jis_table_constants_default", "encoder", "decoder", "sjisDecoder", "textToBytes", "str", "base64ToBytes", "base64", "m", "base64ToHex", "base64", "bytesToHex", "base64ToBytes", "bytesToHex", "bytes", "byte", "textToSjisBytes", "str", "UTF8ToSJIS", "textToBytes", "UTF8ToSJIS", "data", "UTF8_TO_JIS_TABLE", "getUtf8ToJisTable", "results", "len", "b1", "b2", "utf8", "jis", "i", "b", "QrKanji", "data", "bytes", "textToSjisBytes", "writeDataToBitBuffer", "buffer", "i", "c", "getValidQrKanjiOrNull", "text", "modeObject", "Qr8BitByte", "data", "writeDataToBitBuffer", "textToBytes", "buffer", "byte", "getBestMode", "data", "QrNumber", "QrAlphaNum", "getValidQrKanjiOrNull", "Qr8BitByte", "CharCountBitLengthTable", "getCharCountBitLength", "mode", "type", "typesBitLength", "typeIndex", "EXP_TABLE", "LOG_TABLE", "i", "glog", "n", "gexp", "QRPolynomial", "_QRPolynomial", "num", "shift", "offset", "numLen", "lengthAfterOffset", "array", "i", "index", "other", "length", "otherLength", "otherArray", "j", "gexp", "glog", "ratio", "QrPolynomial", "memoECPolynomials", "QrPolynomial", "getErrorCorrectPolynomial", "errorCorrectLength", "lastIndex", "polynomial", "i", "gexp", "PAD0", "PAD1", "createData", "typeNumber", "errorCorrectionLevel", "dataList", "blocksInfo", "ECBlocksInfo", "buffer", "QrBitBuffer", "data", "getCharCountBitLength", "totalDataCount", "createBytes", "maxDcCount", "maxEcCount", "ecBlocks", "totalCodeCount", "ecdata", "dcdata", "createCodewordsData", "index", "i", "r", "offset", "dcCount", "ecCount", "e", "rsPoly", "getErrorCorrectPolynomial", "modPoly", "QrPolynomial", "modIndex", "QrCode", "#dataCache", "typeNumber", "errorCorrectionLevel", "fromString", "createModuleTable", "test", "maskPattern", "moduleCount", "setupPositionProbePatterns", "setupPositionAdjustPattern", "setupTimingPattern", "setupTypeInfo", "setupTypeNumber", "createData", "mapData", "row", "col", "modules", "data", "mode", "QrNumber", "QrAlphaNum", "Qr8BitByte", "QrKanji", "getBestMode", "getBestTypeNumber", "getBestMaskPattern", "qrcode", "drawPositionProbePattern", "rowMin", "rowMax", "colMin", "colMax", "r", "c", "isDarkSpot", "dataList", "ecBlocksInfo", "ECBlocksInfo", "buffer", "QrBitBuffer", "i", "getCharCountBitLength", "minLostPoint", "pattern", "lostPoint", "getLostPoint", "getPatternPositions", "paintAlignmentPattern", "bits", "getBCHTypeNumber", "mod", "inc", "bitIndex", "byteIndex", "maskFunc", "getMaskFunction", "dark", "isDark", "sameCount", "count", "darkCount", "ratio", "getBCHTypeInfo", "xmlEscapeMap", "escapeXml", "xml", "c", "tempDiv", "getTempDiv", "elem", "newElem", "getCssColorOrElse", "color", "fallback", "ele", "result", "getDefaultColors", "parseQrcodeColorProp", "colorsVar", "defaultColors", "currentColors", "colorsList", "length", "parseQrcodeCornerColorProp", "QRCodeColorProperties", "element", "computedStyle", "propertyOf", "prop", "parseQrCodeColors", "colorProperties", "parseQrCodeColorsFromElement", "DEFAULT_STYLE", "ROUNDED_STYLE", "SQUARE_STYLE", "DOT_STYLE", "validStyles", "getStyleOrElse", "style", "fallback", "toLowerCaseStyle", "getDefaultStyles", "parseQrcodeStyleProp", "colorsVar", "defaultColors", "currentStyles", "colorsList", "length", "QRCodeStyleProperties", "element", "computedStyle", "propertyOf", "prop", "parseQrCodeStyles", "styleProperties", "parseQrCodeStylesFromElement", "createSvgTag", "cellSize", "margin", "alt", "title", "qrcode", "scalable", "colors", "getDefaultColors", "style", "moduleCount", "titleProp", "normalizeTitle", "altProp", "normalizeAlt", "size", "pathData", "getPathData", "qrSvg", "a11yAttributes", "escapeXml", "getDefaultStyles", "dots", "dotPathData", "finderCorner", "finderCornerPathData", "finderCenter", "finderCenterPathData", "bg", "d", "drawRects", "rect", "renderQrCodeDotArea", "render", "dotRenders", "DOT_STYLE", "ROUNDED_STYLE", "minCol", "minRow", "maxCol", "maxRow", "row", "mr", "col", "mc", "x", "y", "r", "circlePath", "isTopDark", "isLeftDark", "isBottonDark", "isRightDark", "half", "finderCornerPath", "rx", "ry", "rectLenght", "innerRecLength", "radius", "cx", "cy", "innerRadius", "outerR", "lenBeforeArc", "outerRect", "innerR", "innerlenBeforeArc", "innerRect", "DEFAULT_STYLE", "finderCenterPath", "arcR", "result", "renderTo2dContext", "context", "margin", "cellSize", "qrcode", "colors", "getDefaultColors", "style", "pathData", "getPathData", "createDataURL", "cellSize", "margin", "qrcode", "colors", "style", "size", "canvas", "context", "renderTo2dContext", "createImgTag", "cellSize", "margin", "alt", "qrcode", "colors", "style", "size", "altAttr", "escapeXml", "createDataURL", "none", "data", "trim", "trimLines", "line", "getLineIdentation", "lineStr", "length", "level", "dedent", "lines", "identationsByLine", "identationsLevelsToCheck", "isBlankLine", "minIdentation", "lineNumber", "dedentFromFirstLine", "firstNonBlankLineIdentation", "charAmountToDedent", "removeEmptylines", "removeBlanklines", "vcard", "unwrapedTextData", "lineWidth", "wrapedTextData", "char", "useCrflLineBreak", "vevent", "preProcessMap", "getPreproccessesFromContent", "trimmedData", "getPreproccessesFromAttribute", "preprocessAttr", "splitData", "name", "preProcess", "acc", "stdin_default", "loadStyles", "sheet", "stdin_default", "qrCodeData", "QRCodeElement", "shadowRoot", "observer", "observerOptions", "applyQrCode", "textContent", "preProcess", "errorCorrectionLevelAttr", "isValid", "records", "updatedNodes", "record", "target", "el", "element", "qrCodeContent", "oldQr", "qr", "QrCode", "colors", "parseQrCodeColorsFromElement", "style", "parseQrCodeStylesFromElement", "getRenderMode", "svg", "createSvgTag", "isResizeEnabled", "imgHtml", "createImgTag", "oldImgElement", "updateImgElement", "val", "index", "customEvent", "imageElement", "imgDom", "renderModeCss", "resizeCss", "url", "elementName", "QRCodeElement", "browser_default"]
}
