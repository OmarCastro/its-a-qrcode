{
  "version": 3,
  "sources": ["esm/error-correction/qr-ec-block-table.constants.js", "esm/error-correction/ec-level.js", "esm/error-correction/qr-ec-block.utils.js", "esm/utils/alignment-pattern.util.js", "esm/utils/qr-util.js", "esm/mask-pattern/qr-mask-pattern.util.js", "esm/utils/qr-bit-buffer.js", "esm/modes/number.mode.js", "esm/modes/alphanum.mode.js", "esm/utils/utf8-to-jis-table.constants.js", "esm/utils/utf8-to-jis-table.js", "esm/utils/text-decode-encode.util.js", "esm/modes/kanji.mode.js", "esm/modes/byte.mode.js", "esm/modes/mode-utils.util.js", "esm/utils/qr-math.util.js", "esm/utils/qr-polynomial.js", "esm/error-correction/ec-polynomial.js", "esm/utils/create-data.util.js", "esm/qr-code.js", "esm/utils/escape-xml.util.js", "esm/utils/css-colors.util.js", "esm/utils/css-qrcode-style.util.js", "esm/render/svg.render.js", "esm/render/canvas-2d-context.render.js", "esm/render/data-url-canvas.render.js", "esm/render/img-tag.render.js", "esm/utils/data-pre-processing.util.js", "esm/web-component/qr-code.element.css.generated.js", "esm/web-component/qr-code.element.js", "esm/entrypoint/browser.js"],
  "sourcesContent": ["/* eslint @stylistic/no-multi-spaces: 0 -- tabular view of data present */\n/**\n * The error correction block table.\n *\n * There are 2 elements per version and EC level, in groups of 3. The first number indicates EC width\u00B9, then number of blocks.\n *\n * \u00B9 EC width - Error correction codewords count\n */\n\nexport const EC_BLOCK_TABLE = Object.freeze([\n  // EC          M (bit 00)  L (bit 01)  H (bit 10)  Q (bit 11 )\n  /* Version */\n  /*    1    */  10, 1,       7,  1,     17, 1,        13, 1,\n  /*    2    */  16, 1,       10, 1,     28, 1,        22, 1,\n  /*    3    */  26, 1,       15, 1,     22, 2,        18, 2,\n  /*    4    */  18, 2,       20, 1,     16, 4,        26, 2,\n  /*    5    */  24, 2,       26, 1,     22, 4,        18, 4,\n  /*    6    */  16, 4,       18, 2,     28, 4,        24, 4,\n  /*    7    */  18, 4,       20, 2,     26, 5,        18, 6,\n  /*    8    */  22, 4,       24, 2,     26, 6,        22, 6,\n  /*    9    */  22, 5,       30, 2,     24, 8,        20, 8,\n  /*   10    */  26, 5,       18, 4,     28, 8,        24, 8,\n  /*   11    */  30, 5,       20, 4,     24, 11,       28, 8,\n  /*   12    */  22, 8,       24, 4,     28, 11,       26, 10,\n  /*   13    */  22, 9,       26, 4,     22, 16,       24, 12,\n  /*   14    */  24, 9,       30, 4,     24, 16,       20, 16,\n  /*   15    */  24, 10,      22, 6,     24, 18,       30, 12,\n  /*   16    */  28, 10,      24, 6,     30, 16,       24, 17,\n  /*   17    */  28, 11,      28, 6,     28, 19,       28, 16,\n  /*   18    */  26, 13,      30, 6,     28, 21,       28, 18,\n  /*   19    */  26, 14,      28, 7,     26, 25,       26, 21,\n  /*   20    */  26, 16,      28, 8,     28, 25,       30, 20,\n  /*   21    */  26, 17,      28, 8,     30, 25,       28, 23,\n  /*   22    */  28, 17,      28, 9,     24, 34,       30, 23,\n  /*   23    */  28, 18,      30, 9,     30, 30,       30, 25,\n  /*   24    */  28, 20,      30, 10,    30, 32,       30, 27,\n  /*   25    */  28, 21,      26, 12,    30, 35,       30, 29,\n  /*   26    */  28, 23,      28, 12,    30, 37,       28, 34,\n  /*   27    */  28, 25,      30, 12,    30, 40,       30, 34,\n  /*   28    */  28, 26,      30, 13,    30, 42,       30, 35,\n  /*   29    */  28, 28,      30, 14,    30, 45,       30, 38,\n  /*   30    */  28, 29,      30, 15,    30, 48,       30, 40,\n  /*   31    */  28, 31,      30, 16,    30, 51,       30, 43,\n  /*   32    */  28, 33,      30, 17,    30, 54,       30, 45,\n  /*   33    */  28, 35,      30, 18,    30, 57,       30, 48,\n  /*   34    */  28, 37,      30, 19,    30, 60,       30, 51,\n  /*   35    */  28, 38,      30, 19,    30, 63,       30, 53,\n  /*   36    */  28, 40,      30, 20,    30, 66,       30, 56,\n  /*   37    */  28, 43,      30, 21,    30, 70,       30, 59,\n  /*   38    */  28, 45,      30, 22,    30, 74,       30, 62,\n  /*   39    */  28, 47,      30, 24,    30, 77,       30, 65,\n  /*   40    */  28, 49,      30, 25,    30, 81,       30, 68,\n])\n", "export const CORRECTION_LEVEL_L = 1\nexport const CORRECTION_LEVEL_M = 0\nexport const CORRECTION_LEVEL_Q = 3\nexport const CORRECTION_LEVEL_H = 2\n\nconst correctionLevelNames = ['Medium', 'Low', 'High', 'Quartile']\n\n/** @type {Record<string, { bit: number, name: string }>} */\nconst correctionLevelMap = correctionLevelNames.reduce((acc, name, bit) => {\n  const result = { bit, name }\n  return { ...acc, [name.toUpperCase()]: result, [name[0]]: result }\n}, {})\n\n/**\n * Get error correction level from string\n * @param {string} string - correction level text\n * @throws error on invalid correction level\n * @returns {{ bit: number, name: string }} correction level object\n */\nexport function fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error(`expected string instead of ${typeof string}`)\n  }\n\n  const result = correctionLevelMap[string.toUpperCase()]\n  if (!result) {\n    const validKeys = [1, 0, 3, 2].flatMap(idx => [correctionLevelNames[idx][0], correctionLevelNames[idx]]).map(name => `\"${name}\"`).join(', ')\n    throw new Error(`Unknown Error Correction Level: \"${string}\" expected one of the following values (case insensitive): ${validKeys}`)\n  }\n  return result\n}\n\n/**\n * Checks if error correction level is valid.\n *\n * Error corection is valid if `string` is one of the following values (case insensitive): `L`,`Low`,`M`,`Medium`,`Q`,`Quartile`,`H` and `High`\n * @param {string} string - target string\n * @returns {boolean} true if correction level is valid, false otherwise\n */\nexport function isValid (string) {\n  if (typeof string !== 'string') {\n    return false\n  }\n  return Object.hasOwn(correctionLevelMap, string.toUpperCase())\n}\n", "import { EC_BLOCK_TABLE } from './qr-ec-block-table.constants.js'\nimport { CORRECTION_LEVEL_M, CORRECTION_LEVEL_Q } from './ec-level.js'\n\n/**\n * @param {number} totalCount - total codewords capacity\n * @param {number} dataCount - data codewords capacity\n * @returns {Readonly<ECBlock>} created Error Correction block object\n */\nconst ECBlock = (totalCount, dataCount) => Object.freeze({ totalCount, dataCount, ecCount: totalCount - dataCount })\n\n/**\n * gets how much actual space there is in a QR Code, i.e. codewords that can be used to store data and error correction information in a specific version.\n *\n * Version 1 has no alignment pattern, so the amount of available modules is:\n *\n * 21**2 (441, where 21 is the size of the QR Code)\n * - 3\u22C58\u22C58 (192, for 3 finder patterns)\n * - 2\u22C55 (10, the timing patterns)\n * - 1 (the dark module)\n * - 2\u22C515 (30, the error level and mask information)\n *\n *\n * for a total of 208, i.e. 26 codewords.\n *\n * For larger versions, we have to compute this (let v the version number and n the number of alignment pattern coordinates):\n *\n * v2 (total modules)\n * - 3\u22C58\u22C58 (finder patterns)\n * - (n2 - 3)\u22C55 (alignment patterns)\n * - 2\u22C5(4\u200Dv + 1) (timing patterns)\n * + 2\u22C5(n - 2)\u22C55 (readding the intersection of alignment and timing patterns)\n * - 1 (dark module)\n * - 2\u22C53\u22C56 (format data, only if v > 6)\n * @param {number} version - qr code version\n * @returns {number} total Count\n */\nfunction getAvailableModules (version) {\n  return version === 1 ? 208 : 16 * (version + 4) ** 2 - (5 * (Math.floor(version / 7) + 2) - 1) ** 2 - (version > 6 ? 172 : 136)\n}\n\n/**\n * @param {number} version - qr code version\n * @param {number} errorCorrectionLevel - numeric value of error Correction Level\n * @returns {ECBlocksInfo} block info\n */\nfunction buildECBlocksInfo (version, errorCorrectionLevel) {\n  const totalCount = getAvailableModules(version) >> 3\n  const index = ((version - 1) * 4 + errorCorrectionLevel) * 2\n  const blockAmount = EC_BLOCK_TABLE[index + 1]\n  const group2Blocks = totalCount % blockAmount\n  const group1Blocks = blockAmount - group2Blocks\n  const totalBlockCount = Math.floor(totalCount / blockAmount)\n  const ecBlockSize = EC_BLOCK_TABLE[index]\n  const dcBlockSize = totalBlockCount - ecBlockSize\n\n  const totalDcCount = dcBlockSize * group1Blocks + (dcBlockSize + 1) * group2Blocks\n  const totalEcCount = ecBlockSize * blockAmount\n  const maxDcCount = dcBlockSize + (group2Blocks > 0 ? 1 : 0)\n  const maxEcCount = ecBlockSize\n  const blocks = Object.freeze([\n    ...new Array(group1Blocks).fill(ECBlock(totalBlockCount, dcBlockSize)),\n    ...new Array(group2Blocks).fill(ECBlock(totalBlockCount + 1, dcBlockSize + 1)),\n  ])\n  return Object.freeze({ blocks, totalCount, totalDcCount, totalEcCount, maxDcCount, maxEcCount })\n}\n\n/**\n * The idea was to pre-calculate everything on the EC block table, but it is better to memoize to reduce JS hydration\n */\nconst memoEcBlockInfo = /** @type {ECBlocksInfo[]} */([])\n\n/**\n * @param {number} typeNumber - qr code version\n * @param {number} errorCorrectionLevel - numeric value of error Correction Level\n * @returns {ECBlocksInfo} error correction blocks information\n */\nexport function ECBlocksInfo (typeNumber, errorCorrectionLevel) {\n  versionEcCheck(typeNumber, errorCorrectionLevel)\n  const index = (typeNumber - 1) * 4 + errorCorrectionLevel\n  const memo = memoEcBlockInfo[index]\n  if (memo) {\n    return memo\n  }\n  const result = buildECBlocksInfo(typeNumber, errorCorrectionLevel)\n  memoEcBlockInfo[index] = result\n  return result\n}\n\n/**\n * @param {number} typeNumber - qr code version\n * @param {number} errorCorrectionLevel - numeric value of error Correction Level\n */\nfunction versionEcCheck (typeNumber, errorCorrectionLevel) {\n  if (\n    typeof errorCorrectionLevel !== 'number' ||\n    typeof typeNumber !== 'number' ||\n    errorCorrectionLevel < CORRECTION_LEVEL_M ||\n    errorCorrectionLevel > CORRECTION_LEVEL_Q ||\n    typeNumber < 1 ||\n    typeNumber > 40\n  ) {\n    throw Error(`bad rs block @ typeNumber:${typeNumber}', errorCorrectionLevel: ${errorCorrectionLevel}`)\n  }\n}\n\n/**\n * @typedef {object} ECBlocksInfoData\n * @property {ECBlocks} blocks - total codewords count capacity\n * @property {number} totalCount - total codewords count\n * @property {number} totalDcCount - total data codewords count\n * @property {number} totalEcCount - total error correction codewords count\n * @property {number} maxDcCount - max data codewords count capacity\n * @property {number} maxEcCount - max error codewords count capacity\n */\n\n/**\n * @typedef {Readonly<ECBlocksInfoData>} ECBlocksInfo Error Correction blocks information\n */\n\n/**\n * @typedef {object} ECBlockData - Error Correction block\n * @property {number} totalCount - total codewords count capacity\n * @property {number} dataCount - data codewords count capacity\n * @property {number} ecCount - error correction codewords count capacity\n */\n\n/**\n * @typedef {Readonly<ECBlockData>} ECBlock Error Correction block\n */\n\n/**\n * @typedef {readonly ECBlock[]} ECBlocks Error Correction blocks\n */\n", "/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n * @param  {number} version - QR Code version\n * @returns {number[]} Array of coordinate\n */\nexport function calculateCoordinates (version) {\n  if (version === 1) return []\n  const intervals = Math.floor(version / 7) + 1\n  const distance = 4 * version + 4 // between first and last pattern\n  const step = version === 32 ? 26 : Math.ceil(distance / intervals / 2) * 2\n  return [6, ...Array.from({ length: intervals }, (_, index) => distance + 6 - (intervals - 1 - index) * step)]\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link calculateCoordinates}\n * and filtering out the items that overlaps with finder pattern\n * @param  {number} version - QR Code version\n * @returns {PatternPositions} list of pattern positions\n */\nexport function calculatePositions (version) {\n  /** @type {Point[]} */\n  const coords = []\n  const pos = calculateCoordinates(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push(Object.freeze([pos[i], pos[j]]))\n    }\n  }\n\n  return Object.freeze(coords)\n}\n\n/**\n * Used to memoize getPatternPosition calls\n * @type {PatternPositions[]}\n */\nconst positionsMemo = []\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n * @param {number} version - QR code version\n * @returns {PatternPositions} list of pattern positions\n */\nexport function getPatternPositions (version) {\n  if (!Number.isInteger(version) || version < 1 || version > 40) {\n    throw Error(`invalid pattern @ version:${version}'`)\n  }\n  // eslint-disable-next-line sonarjs/no-empty-collection -- its a nullish coalesce assignment, it is expected\n  return (positionsMemo[version - 1] ??= calculatePositions(version))\n}\n\n/**\n * @typedef {readonly [number, number]} Point\n */\n\n/**\n * @typedef {readonly Point[]} PatternPositions\n */\n", "/**\n * Get BCH code digit\n * @param {number} data - numeric data\n */\nfunction getBCHDigit (data) {\n  let digit = 0\n  while (data !== 0) {\n    digit += 1\n    data >>>= 1\n  }\n  return digit\n};\n\nconst G15 = 0b000010100110111\nconst G18 = 0b001111100100101\nconst G15_MASK = 0b101010000010010\n\n/**\n * Get type info using Reed\u2013Solomon error correction with Bose\u2013Chaudhuri\u2013Hocquenghem codes (BCH codes)\n * @param {number} data - masked error Correction Level info\n * @returns {number} bits of BHC code of type info\n */\nexport function getBCHTypeInfo (data) {\n  let d = data << 10\n  while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n    d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15)))\n  }\n  return ((data << 10) | d) ^ G15_MASK\n};\n\n/**\n * @param {number} data - QR code version\n * @returns {number} bits of BHC code of QR code version\n */\nexport function getBCHTypeNumber (data) {\n  let d = data << 12\n  while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n    d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18)))\n  }\n  return (data << 12) | d\n};\n", "/*\n mask patterns\n\n  Mask 000    Mask 001    Mask 010    Mask 011\n   ______      ______      ______      ______\n  \u2595\u2580\u2584\u2580\u2584\u2580\u2584\u23B8    \u2595\u2580\u2580\u2580\u2580\u2580\u2580\u23B8    \u2595\u2588  \u2588  \u23B8    \u2595\u2580 \u2584\u2580 \u2584\u23B8\n  \u2595\u2580\u2584\u2580\u2584\u2580\u2584\u23B8    \u2595\u2580\u2580\u2580\u2580\u2580\u2580\u23B8    \u2595\u2588  \u2588  \u23B8    \u2595\u2584\u2580 \u2584\u2580 \u23B8\n  \u2595\u2580\u2584\u2580\u2584\u2580\u2584\u23B8    \u2595\u2580\u2580\u2580\u2580\u2580\u2580\u23B8    \u2595\u2588  \u2588  \u23B8    \u2595 \u2584\u2580 \u2584\u2580\u23B8\n   \u23BA\u23BA\u23BA\u23BA\u23BA\u23BA      \u23BA\u23BA\u23BA\u23BA\u23BA\u23BA      \u23BA\u23BA\u23BA\u23BA\u23BA\u23BA      \u23BA\u23BA\u23BA\u23BA\u23BA\u23BA\n\n  Mask 100    Mask 101    Mask 110    Mask 111\n   ______      ______      ______      ______\n  \u2595\u2588\u2588\u2588   \u23B8    \u2595\u2588\u2580\u2580\u2580\u2580\u2580\u23B8    \u2595\u2588\u2588\u2588\u2580\u2580\u2580\u23B8    \u2595\u2580 \u2580\u2584\u2588\u2584\u23B8\n  \u2595   \u2588\u2588\u2588\u23B8    \u2595\u2588 \u2584\u2580\u2584 \u23B8    \u2595\u2588\u2580\u2584\u2580\u2588 \u23B8    \u2595\u2580\u2584 \u2584\u2580\u2588\u23B8\n  \u2595\u2588\u2588\u2588   \u23B8    \u2595\u2588  \u2580  \u23B8    \u2595\u2588 \u2580\u2580\u2584\u2588\u23B8    \u2595 \u2588\u2588\u2584  \u23B8\n   \u23BA\u23BA\u23BA\u23BA\u23BA\u23BA      \u23BA\u23BA\u23BA\u23BA\u23BA\u23BA      \u23BA\u23BA\u23BA\u23BA\u23BA\u23BA      \u23BA\u23BA\u23BA\u23BA\u23BA\u23BA\n*/\n\n/** @type {MaskPatternFunction[]} */\nconst maskPatternFunctions = [\n  (i, j) => (i + j) % 2 === 0, // PATTERN000\n  (i, _) => i % 2 === 0, // PATTERN001\n  (_, j) => j % 3 === 0, // PATTERN010\n  (i, j) => (i + j) % 3 === 0, // PATTERN011\n  (i, j) => (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0, // PATTERN100\n  (i, j) => (i * j) % 2 + (i * j) % 3 === 0, // PATTERN101\n  (i, j) => ((i * j) % 2 + (i * j) % 3) % 2 === 0, // PATTERN110\n  (i, j) => ((i * j) % 3 + (i + j) % 2) % 2 === 0, // PATTERN110\n]\n\n/**\n * @param {number} maskPattern - mask pattern, an integer number between 0 and 7\n * @returns {MaskPatternFunction} mask pattern function\n */\nexport function getMaskPatternFunction (maskPattern) {\n  const result = maskPatternFunctions[maskPattern]\n  if (!result) {\n    throw Error(`bad maskPattern: ${maskPattern}`)\n  }\n  return result\n};\n\n/**\n * @callback MaskPatternFunction\n * @param {number} x - horizontal position\n * @param {number} y - vertical position\n * @returns {boolean} true to paint a black pixel, false to paint a white pixel\n */\n", "export class QrBitBuffer {\n  /** @type {number[]} */\n  #byteBuffer = []\n  #bitLength = 0\n\n  /**\n   * Append bit sequence to bit buffer\n   * @param {number} num - bit sequence as number\n   * @param {number} length - bit sequence length\n   */\n  put (num, length) {\n    const byteBuffer = this.#byteBuffer\n    const bitLength = this.#bitLength\n    const newBitLength = bitLength + length\n    const newBufferLenght = (newBitLength + 7) >> 3\n\n    let restBits = Math.min((byteBuffer.length << 3) - bitLength, length)\n    let bufIndex = bitLength >> 3\n    while (byteBuffer.length < newBufferLenght) {\n      byteBuffer.push(0)\n    }\n    let i = 0\n    if (restBits === 0) {\n      restBits = Math.min(8, length)\n    }\n    while (i < length) {\n      const shiftLeft = bufIndex === newBufferLenght - 1 ? (8 - restBits) : 0\n      byteBuffer[bufIndex] |= (num << shiftLeft >>> (length - i - restBits)) & (0xff)\n      i += restBits\n      bufIndex++\n      restBits = Math.min(8, length - i)\n    }\n    this.#bitLength = newBitLength\n  };\n\n  get byteBuffer () {\n    return this.#byteBuffer.slice()\n  }\n\n  toByteArray () {\n    return Uint8Array.from(this.#byteBuffer)\n  }\n\n  get bitLength () {\n    return this.#bitLength\n  }\n\n  /**\n   * Get bit value at index, value is either 0 or 1\n   * @param {number} index - index position\n   * @returns {number} bit value\n   */\n  getBitAt (index) {\n    const bufIndex = index >> 3\n    return (this.#byteBuffer[bufIndex] >>> (7 - index & 0b111)) & 1\n  }\n\n  /**\n   * @param {0|1|boolean} bit bit to put\n   */\n  putBit (bit) {\n    const byteBuffer = this.#byteBuffer\n    const bitLength = this.#bitLength\n    const bufIndex = bitLength >> 3\n    if (byteBuffer.length <= bufIndex) {\n      byteBuffer.push(0)\n    }\n\n    if (bit) {\n      byteBuffer[bufIndex] |= (0x80 >>> (bitLength & 0b111))\n    }\n    this.#bitLength += 1\n  }\n}\n", "import { MODE_NUMBER } from './mode-bits.constants.js'\n\n/**\n * Create QR code numeric mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject} created mode object\n */\nexport const QrNumber = (data) => Object.freeze({\n  data,\n  mode: MODE_NUMBER,\n  length: data.length,\n  write: writeDataToBitBuffer.bind(null, data),\n})\n\n/**\n * Writes numeric data to bit buffer that will be used to generate the QR code\n * @param {string} data - QrNumber mode object data\n * @param {import(\"./../utils/qr-bit-buffer.js\").QrBitBuffer} buffer - target bit buffer\n */\nfunction writeDataToBitBuffer (data, buffer) {\n  let i = 0\n\n  while (i + 2 < data.length) {\n    buffer.put(strToNum(data.substring(i, i + 3)), 10)\n    i += 3\n  }\n\n  if (i < data.length) {\n    if (data.length - i === 1) {\n      buffer.put(strToNum(data.substring(i, i + 1)), 4)\n    } else if (data.length - i === 2) {\n      buffer.put(strToNum(data.substring(i, i + 2)), 7)\n    }\n  }\n}\n\n/**\n * @param {string} s - target string\n * @returns {number} `s` as number\n */\nfunction strToNum (s) {\n  let num = 0\n  for (let i = 0, e = s.length; i < e; i++) {\n    num = num * 10 + charToNum(s.charAt(i))\n  }\n  return num\n};\n\n/**\n *\n * @param {string} c - target character\n * @returns {number} `c` as number\n */\nfunction charToNum (c) {\n  if (c >= '0' && c <= '9') {\n    return c.charCodeAt(0) - zeroCharCode\n  }\n  throw Error(`illegal char: ${c}`)\n};\n\nconst zeroCharCode = '0'.charCodeAt(0)\n", "import { MODE_ALPHA_NUM } from './mode-bits.constants.js'\n\n/**\n * Create QR code alphanumeric mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject} created mode object\n */\nexport const QrAlphaNum = (data) => Object.freeze({\n  data,\n  mode: MODE_ALPHA_NUM,\n  length: data.length,\n  write: writeDataToBitBuffer.bind(null, data),\n})\n\n/**\n * Writes alphanumeric data to bit buffer that will be used to generate the QR code\n * @param {string} data - QrAlphaNum mode object data\n * @param {import(\"./../utils/qr-bit-buffer.js\").QrBitBuffer} buffer - target bit buffer\n */\nfunction writeDataToBitBuffer (data, buffer) {\n  let i = 0\n\n  while (i + 1 < data.length) {\n    buffer.put(\n      getCode(data.charAt(i)) * 45 +\n          getCode(data.charAt(i + 1)), 11)\n    i += 2\n  }\n\n  if (i < data.length) {\n    buffer.put(getCode(data.charAt(i)), 6)\n  }\n}\n\n/**\n * Get value for character `c`\n * @param {string} c - target character\n * @returns {number} character code point\n */\nfunction getCode (c) {\n  if (c >= '0' && c <= '9') {\n    return c.charCodeAt(0) - '0'.charCodeAt(0)\n  } else if (c >= 'A' && c <= 'Z') {\n    return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10\n  } else {\n    switch (c) {\n      case ' ' : return 36\n      case '$' : return 37\n      case '%' : return 38\n      case '*' : return 39\n      case '+' : return 40\n      case '-' : return 41\n      case '.' : return 42\n      case '/' : return 43\n      case ':' : return 44\n      default :\n        throw Error(`illegal char: ${c}`)\n    }\n  }\n}\n", "export default {\n  21: '772h>1e,776A>1f',\n  2121: '44CA>2,77yM,77yO,44O7,77y[a>;1fB}]]44Kb>1,wrQ=,772A,wqg=,77[#y++jy/#]]44[O9>1,Kd>1,CD]]5Lud,4[4CF>2,_4O8oCVoCQ_]77[#yPy82e#]]4oCW|4oil,772c,4oC{mlY;>1,c>1]]]77yI>1,44CU>1,77[#y7y92b2d#]]44CI>9,77yL,77yN,w[rE=,5c=,7c=]77yd,4omg,77yc,77ye,4o[mm>1,ie,i0]pmC,pmA]wrA=,4oCy>1,4oSD,77[#+lyE+g#>1,y{FDGKg}]]wqc=,4p[iG,iF,e{LPOH}]]',\n  2221: '4p[eG,a{hgzy98}]oC7,4CS,oa[S,Q>1,T]]4CT]',\n  2272: '4[oSr,oCw,pm{vtq}]oCg>1]wrY=',\n  2330: '77yQ>9',\n  2341: '77yh>19',\n  2361: '772B>19',\n  2421: '44GB>3e,44KA>13',\n  2521: '44Kh>1e,44OA>36',\n  2621: 'zpE=>10,zqM=>6',\n  2641: 'z[rE=>e,4A=>1,4M=>6]',\n  2721: '0[JA=>5,IE=,JY=>19]',\n  2751: '0[LA=>5,ZE=,LY=>9,YA=>f]',\n  2821: '4pS{ACMQYUcsk08BDPTbXjzr7}WL,S{gvo3/dwl4}WC]]',\n  3021: '5[_LqcZSWaiD_]6Zi/,5[_ZOAoSboyoae2_]6[_YCiJG1Iyc_]5[_6mQoKqo+hrilpet_]6[_JGmIqma+1_]5[_qKTZynpahomxa6baeQ_]6Jm7,6aO0,57Wi,57a+,6a6O,5oiW,57Kf,6KK3,5[_a6Jbq1oyJpqXqGI_]6ZeH,6Z6N,5[p2P,L[#ulyK2N6d#]YGJ,Zuy,a[#S3eUiB#]bCJ,o[#OfSPWw#]_piTqSF4K65WP5Ww6e77at7ev_]6[_IODJCOKGjKyCYGVYG6_]5[_Yy7LqVLqlZ+f_]6IKy,6YOB,5[_6OvLiAaOxrqi_]6YC4,56iy,6[_IyoIqLbCv_]5[YWB,Y2w,Z[#K9Ohug#]ae7,byV]6aOy,5rer,6IOk,6JSt',\n  3121: '6Z[#mimwqg+7#]]5[_ZCLY+za6H4OP769_]6L+C,6Zuo,5Y2v,6bWc,5[_6q6LiR6KT_]6Ie8,5[_rimZiYZSEqyd_]6JSa,6bC7,5[_aelY6prWm5Oc_]6ZaP,5ZmC,5LqR,6[_YGLZuyI2PaSM_]5[_Y+hZa2aywb2xpigpuzqCE_,r[#C4OzSp#]_5Gb5uI6mO_]6[_aC0IuxKGbKmgYut_]5[_ray5ar5uK_]6aeF,5oKm,6[_KyBLaKZay_]5[_qaOY6tYaGZyS_,a[#CwWE60#]bu2,o[#Co6p+0#]rK/,ryU,4[#KOSUWZeVy/#]7iB]6[_Im2IuRJaXYGgYmbbSb_]5[_aGppa8rGa5SlYe5aSuaWlb6Ab+c_]',\n  3221: '5[oq8,pe6,q[#iqyn60#]46L,7+B]6[KWW,b[#SsSOuE#]]5bKh,5rKW,6I27,5[_YSEbGLoa2_]6IeG,5[_qG24mhLmZL+6Y24oGprip6mP_]6Z+z,5[LiL,YyW,L[#uu2Vy96h2z#]_YqgY+vZiJ_,a[#SPuB62+h#]6eR,p[#qH6c62#]_q2MrKz4Gr4+C_,6[#aNa+i86H#]]6I[#qxubyE23+v+T#]J2m,Kqy]5Zip,6[_LKoL+mYGOZyeJqK_]5[_L+EbOooiR4mZ5S7_]6[_IelIq9Ju+LOAZuFaSTaeV_]5LuL,5Lya,6Kej,5[_ZueaGKaOKbu7b+r_,o[#CqKUGieQiSuQ#]pS5]',\n  3321: '6a2B,5[_pmmqKwrW34Gw5WM5qG7W1_]6[_IqlJ+5ZaLZqOLKd_]5[_YexYq+aSWZKza6zbSWoWoqaCrav6KN_]6[_JOLKGXKmyY6naq4_]5rWs,6aao,6JuZ,5Z6j,5p+/,6JuO,6YiO,5[_YqDZqHZCEbuTouhpK5_,q[#C8C467#]_42y6K66mr_]6[_KaaKeSLWrLyDYOt_,Z[#ajqU2p#]]5[_a2mbKzqW9_]6aGN>1,5[o6b,6yg,q[#irm/K2#]]6bCN,5[_r2fYmyZadoGwous_,r[#S7iHuR#]]6[_JGbKSQL2E_]5LiU,6bC5,5[_Y+2qSbqi6_]6Z6E,5[_qCqYWc6uD_]6[_JKyYecY6M_]5Zmb,6bSo,5qCi,6IyF,6JCx',\n  3421: '57Kl,5YiI,6IuF,5[_5OmLm+L6DYaga+S_,Y[#iKuYun#]be7,Zaa,a[#Cqem6M6Y+b#]bmy,bm5,o[#KjSfWja++b#]pWi,p+R,q[#GTO6y+2T#]r[#GXyi6X2F#]5[#KwSYujyL#]6u/,66h,7[#Chepy2+w#]]6I[#Kdmm6e#]_KazKuMLKrYKE_,Z[GR,a{TRi}ml,+T]aSo,IiY]5[_Li4ZCrbK4beM46p5mM5y8bKp7+r_]6[LSL,ZuB,a[#CRGUGY#]]5[_LyBLyOY2x_,Z[#acmo+6#]a[#WHyJ+E#]b[#KQiMm++M#]o+u,p[#y6eXeiyf#]qOL,qOE]',\n  3521: '5[_qmfbiwq+FrCXrG95W/6WIa2j6iA7SAb69_]6[KaP,KiY,L[#K0W3uMyd#]a[#OiiOy8#]]5[_LqAYG9YSAaaTa6coivoqApOsqy64qg5aR6WH76p_]6[_J+7Kq8K2w_]5o6s,6I+K,6Z6g,5Z[#CJCDar#]qGU,qmY]6Kmw,56Cn,5p21,6buN,5Y20,5a6i,6[_ISaJmQYCG_]5L[#iYmFuHyR#]_Y+KZC4a6ubyToClpWRpy9_,r[#GCGyOj#]4G4,5CD,6[#m2quyI#]7[#SaO+Wm#]_pen4mbY67bGFbeo_,o[#uSugyZ#]rig]6[_JmaKixLedYu4_]5ryB,56am,6a2a,5Lqo,5Lqr>1',\n  3621: '5[_L6bL6gYORYWH6u2_,Y[#Wxe22Uyh2/+r#]Zas,aKD,b[#Ohy32K#]o[#CvGQGtyf#]_pWZqmLrOB4uC4ut5+v_]6I[#O4SFiI#]_JWOYO3Y+hZ+/aWXama_]5[_LuwYedbCtpqBqWtbGApuyqW146JqGQ7KBYOFYukZ2Hbe+_]6Yym,5[_pakqyjqy95C0_,6[#aBa92L#]7eK]6[Iq5,I+M,K[#G/Wfy5#]L+R,YeR]5ZCf,6YqA,5[Lmd,Y[#C2+ly6#]_4uX46W5+p_]6[Ium,Lqv,ae{GIS}]]5YW3,5oSa,6Jme,5[_Zaw6m6YG2a+T_]6YGH,6ZqF,5Liy,5qub,6Yen,5bGR,5bGI',\n  3721: '5[_o6Y6qfrKT_]6Z20,6L2h,56qq,54aK,6ZqI,5[_7KCqCX7mwqGR_]6Y2s,5Yuy,5ZCb,6Jar,6KiT,576k,6LuN,6YOh,5Y2m,6KKI,5[6WB,L+C,Y[#K+iRWE#]_ZWTZyt4+qZ6LaWRb2ib6E_,o[#G1W2Wnap6y#]p[#C6Wsmv#]_qGCriT5Wm6i9_,7[#O7WMaZmL2r#]]6[_IyOI2KJuN_,K[#iImj2m#]_Lu9aCabaPIq4L+Oa+o_]5[_YqHoifpKDr+A_]6ZqZ,5[_qGBYKRqygrG6r2U6m07WQ_]6KGA,6Kij,5[pyI,Lu2,Y[#C5CmGlW8i4mj#]_ZanZyPaCFauMbu6_,o[#aye4uz2y#]]',\n  3821: '5[qSc,qip,4[#m9qsyu#]_6CU6Gv7W55yM_]6[_IKpKaLKyZLOiLuSYGjY21Zm6aGVaiTbm4_]5Y[#WD6f6z#]_bm7bymribrqQ46E4++7WD_]6[_Ii3KiAKu6ZmQ_]5[_LmOYCLY+kZG8Zu6aeRa2k_,b[#exqryn#]_oi4pWFp6vrmW4uQ7OK_]6[KK0,I[#KhOh+w#]_JmOKqHLeoYi3ZuHaGnbyT_]5L[#qUqSyN#]_Y2IZGJZC+aivb6Mb6hoKfqKnqqO5Ga6KB_]6K[#qeqk23#]YaQ]5Lme,6a+J,5L[#qk286v#]Y[#CZCWWJWsqfq5u+6a+j#]ZCR]',\n  3921: '5Z[#COaJ2R6i#]a[#W92U2d6P#]be{ln3}m4,q{Da3}yY]o[#GSWMqXuY6n#]p[#S7iCmDu02t#]q[#ChKXeL#]r[#GfSqWpivqd#]_5Sy5qH6Gs6i/_,7[#OgSFSYWeax#]]6I[#CVCDKvKxWUaPiq2S#]K[#GMGhyb#]LKi,LO8,Y[#OKW1mx#]]56C/,6[_Yu8ZakZmN_,a[#CFaZuY#]bS7]5Y[#mbqr+3#]_ZCIaOVou3r+g_]6[_LGqL2fbq5_]5[_YWLYi7ZGKZu96mA_]6[_YW3bWgbuS_]542E,5ryJ,6IWw,5[_5SRb+9oOa_]6aqo,54ub,6L68',\n  4021: '5[_r6EpG6a+4LiW4Cs5Wdpiv_,Y[#eEi2ui#]_aeTb6BoCnoiQ_,p[#S/W0ifm0#]q[#OyCW2j#]_riF4my5Sf5ub7K+_]6IGW,5aOw,6K[#O9W/qgqTuL#]_YCdYaSZ2SZ2Z_]5paJ,56iO,6ISG,6Zq7,5[_bitoOcoia_,p[#aliU6Q#]_5+z6mN7GN7i+_]6[ISK,L[#KsWkehmf#]]5[_6KpYiHouZo6lpGCoqY_]6Kit,56qD,56+A,6Kqs,6Zuq,57W2,6IiM,6J2J,5[LuZ,Y[#WI2D2g#]a6j,b[#CCCWed#]_oimomHpKwqCTqC0_,r[#OJWFSX#]_p+Tr2c4WO4W9peL6m/66t7ea_]',\n  4121: '57mK,576o,6I[#W6ibi5#]_JamKmuLOOLe1_,Y[#G4G3qtqR#]ZaD,a6u]5[_YmNZaEry44S2YWo6aF7mV_]6Iaz,5[_7OOZmMaGRbKoo6qpu+pu9qWa4uZ5aP5aO_,6[#SOWWef#]7[#KXSgWE#]]6[_JiHKi0Zi7YGhbyg_]5Y[#Onm1+M+iCJ#]_ZaqaOuaWP4i9a6LbGkYyd_,o[#OjOz2c6Dy/67#]p[#ONepu5#]_bejqeNqe9ryV4elLqJ5ep5u46qT_,7[#OfePac#]]6I[#Gh2J2Y#]J[#GsK8e7#]KOF,LWw,Y[#CBGt6X#]Zyc,aiS]5[_YOPaKXoaO_]',\n  4221: '6[_IeTJS1LSIYCg_]5[L+D,Y[#G0mH2z#]_oGvo2Jp2fris_]6Laz,6YCf,5L+X,5bGe,6LOK,5[_peP7aaY2S_]6KKW,5[_YW2o+Da2Ya2rbCKpCNp2R_]6YGc,5[_LuWaSaaSqrGw_]6KmR,5[_ZS+aCVaaloOwomTp+B_]6Ii1,5qWV,6[_ZmAaeEaio_]5[_L2TaCGa++_]6ICQ,5b[#Kxiv6F#]o[#CgWLi0#]_pu/rOwrue_]6I[#OOW/uU#]_KKLLK4YCAYCuZqKbuba+b_]5[_LujY+waSn6ys_]6[_YaNaGMbe5_]5[_rud4CnY2TZWEa6F_,o[#mYqeuT#]_rKir+v5Ci_]6KiX,6ZC4,5r+B,6Ku+,6Iy4,5Yen,6Ju4,5Y+q',\n  4321: '5Y+p,5L2G,6YGU,6L6w,5aWq,6ISx,5be9,56uq,6L6/,5qOa,6LC3,54u4,6bGI,5qi9,6Kqw,5[_Li5Y2YZiGZ2mouFo6ipemq2Orehrmb4Kt5+t6uv66q7a7_]6[_IC9IOGJuLKqVY2b_]5[_ZujaOHby+patpqWqqAq615S3_]6KuH,5[_YCk5+lZywbyboGlpm6rGg5e06ia72u_]6[_Ie0JyYYGFaaz_]5[_6+J5Wc6u562R_]6JOE,6YCQ,56ep,56qS,6Iy2,5[_auh52ALitLuya6Zb+goq9pi8p+xrOo_]6[_JmrKG3Ki7YWOYuzaeQ_]5[_qiX4Cm4yq_]6[_IunJGXLKv_]5[_LiBYWGYeLZaLa+1_]',\n  4421: '5b[#iWizqByUy12r60#]_oeyoyRpqipydr2u4mS5S65y6_]6I[#G0S5W4#]_J22Kq/KucLaFLezYqaZW3aCCbOl_]5[_YuFo2X5u0pyVrKI4+N_]6[_LODY6uZmz_]5[_rSlaKcqSOqeM_]6L+9,6Y6a,55eb,6YCa,5[_aGaqCCo60qe7L2Drysp+Y_]6L67,6JSm,57a0,6Y2U,5[_qS/r2wZ2qaO3ays7Ss4iqZCK_]6Yej,6ba0,5[Lqt,L2O,Y[#GcG1mD#]]6LKe,5[_ZGIaCka6a_,b[#idqVqtu3yf#]o[#KMq1y6+Q#]qKv,rGA,6[#KHaOiL#]7eg]6[_ImHKiCKumLmEYCT_]',\n  4521: '6Y[#K4SteY#]byO]5[rOl,p[#GYOiW1#]_ru05qE6yb_]6YGp,6Y+R,5[_rq6ZOyb65pKk_]6[_L2NL+tYmE_]5[_YW4aGraSpbGVbqXre77qP5Sc_]6[_LK8LuiaGb_]5[_4K5Lydq6/r6x5Sw_]6Zu7,5[YWO,ZCQ,a[#C1GXas#]_bGgb6SpaXp2crih5m7_]6[I+f,LOt,Y[#CUO92N#]]5[_6Cl6C6YqqbqmZyfaW0oCS_,Y[#CSWaaseNiA#]ZSQ,a[#GUGYWX6V#]_bO2baLoK8oqVpCtp2x_,q[#GDK8Of#]5uX,r[#eYmvab#]_4Gv4eIb2T5eY_,6[W3,2{JUS}]_7OW7WxYiw_]',\n  4621: '6J[#GjWpek#]_KiOKyELGGLiPYCDYCPZCZZm2aCtaiwZeY_]5[_YONYuVZCMaCCbCOoanpKerSe56z6ul_]6[_IO0JCEYGTYqF_]5bOg,6bSH,5[_Yy/b6Xb6zrac4m552j6a/6+kq+S4us_]6Kqt,5[_qCDqmhYe46qBqS0bGK_]6bO2,6Iur,5a+F,6YWJ,5[_4CeZm4bGvoOHpWmrKM_]6[_LGaYGBaCT_]5ZGR,5puH,6YiN,5aWI,6YKj,5[_YaFLmNYeq_]6JaZ,6KyO,54GY,5o26,6Y2L,5qWi,6aa0,5[_7iE5W3Y2XqWg_]6Luf,6Zuj,5[_rGdLqMbC8byQ_]6L+p,5YyC,6[_LORIKJJm5_]5[_bu/pelLmzYWl_]',\n  4721: '5aaC,5bC/,6Z+u,5[_Lu7aaKb+N_]6KqN,5[_r+h6aw6Wia+n_]6JGx,5[_4yr4axbm0b+1o27pKa4eD7KYLmDbu8LmLZ+cZqioKpr+D7SN_]6I[#O9Sza/#]_L6yKaXJqk_]5[_be0oqKpKt_]6KaH,5[_p23rOirS+5C26C0amG721_]6Iqt,6aas,5[_L+zbuDoudo6SpWXp2v5uD4mM_]6[_IOMIK6LypYWN_]5[_YCNZ+5aqSqKFqWz4Wk4u9_]6LK3,5aOy,6[_LOgZmqYCZJ2/_]56ek,55+n,6JCp,5[_LyvYmlY2aouNp+PrOK5m966U7KV_]6[_Ii2JaEL+r_]5[_pudryg4iG7ib_]6[_I6raeBbqm_]',\n  4821: '5[Ye9,6[#6xGy64#]]6IKH,5[_62Iquobmh_]6IKM,5[_5WR5WgYWr_]6Ymi,5rqM,55m6,6YaX,6auq,5[_LyQ72woqc62P_]6Zal,6bOp,5Zm6,5aGZ,6Juk,6Zq8,5[Ly0,Y[#ik2K+N+b#]biG,p[#CsaR2/#]rC+,rGO,4[#mIqv+t#]5WU,7mB]6[_IisJepLKp_]56+E,6YeG,54Wp,6aCS,6aOv,5[_oy9pmp5Wq5uk6OQ_]6JWD,6Juu,5[_YyqY2RZCmaaDbqHb28_,o[#KymJm5qr#]_paQq+UrOM5ay5qu6KR6eY7eL723_]6[_IKlKKrKq5LK7YG/Z2eaOb_]5[_qiL7C4YKZbC+b6up6Hq+Y5C15yJ76O_]',\n  4921: '6by7,5[_p+K6iXYy55aL_]6aut,5b2m,6I[#ad+xKY#]]5[_by8b+F5Wi62G_]6YC8,5[_qGnaeraqb7SQ5m+_]6Kys,5[_L+1b2qqiZrC3ryC5Oi6Wo_]6[_KGoKmVLG5_]5[_bufo+P5eF6eS_]6[_IuXYyoYuyJKcJutbCt_]5[_ZOBb2spaMrWc4CV_]6[_LKnLOTaC7_]5[_pWP5O2LiNLuYZ+g_,a[#Srmm+M#]_YaobiDbqcoCWom2_,p[#W3anmu#]_rWu4i26ym_]6I[#WQaaqZ#]K2c,L[#KgOmW0#]Zic,ZmE]5[_L6upKrq2m_]6[_IieJGhJWqYOo_]5bCB,5qWT,6[_aKoJG6JWX_]5[_LyPYmvb6pbmFpyN_]',\n  5021: '5[byM,Li{QVqx28/}m{CWY}qC,qF]]6LGr,5LqK,6IiS,5[byN,Lq[O,e>;2iwz2}u{ONEGCXetf3}#yJ2ayw#,2{bdXH2}6{IPY}2{7pw}#6R2v6G6W#]YSY,L+{UfOYbRaQk;>1]]YC{aoUqlF}]Lyc,L+2,YC{hps}]L++,L+v,Y[#CRCGGDGH#]pyD,YG{VQIaWs4}K{AaF0y}]]',\n  5121: '5Y[OJ>1,Kz,O{CWeltju51}S[J,B>;1WVUah6387/}W{ASMUi}]6u4,Y[Wp>1,#WuaAaC#]ZuY,Ya{MJPRTV;>;1kmip;>;2zx;>;1w19}e{FJbg}]]6JmV,5Ye{ptw1+}i{ELUOnquz5}m{PEL;>;1eUq0pz/9}q{NUS}#mxqIqR#]]6L6o',\n  5221: '6L6n,5Yq[s>;181}u{BNXejm}]]6aOt,5Yu{gz14;>1]yG,yI]5S4,Yy{NQPVajvxz4}2{AGF}]LiX,Y[#2J2NeW#,2{epu}]aSY,Y[27,23,6{CWgmluw2}+D]7CS]6ZuZ,5[_Y+fpu84eu_,Y+{uot6}]Z[#CBC9GA#,C[s>;18u2pd}#GOKPG1KO#,G{fx3w}#KSG7KAG2#,K{EQG}OH,K{i4ls}#OEOIKo#]]',\n  5321: '5Z[Kr,OC,K{k+8}OY,Ol>1,SP,SU,O{9ut6i}S5,W{AjM}Su,W{cFW;>1]#S4SzWdaZaAKvaKafW7W+#,a{Yeu}W8,a{DpHo}e{aFfEckU}#iUe3iWe+e9ibe5mOmQ#]4ef,Zi{02y4}#mrmkivmsmq#,q{GAKgUPlu20}uC,q8,u{BDAIORTXu5}#yAu/yEyJ#]]',\n  5421: '5Zy{ILNTYW}eH,y{cm3;>1]2O,y7,2{APp}#+A6I2h2/#,6{JTgzkqw}+{DGUS;>1]]_aCKZ+WZ+j_,aC{LZd}Gy,Ch,G{iLw}]q+A,a[#GSC9G5#,K{F5fr6}Oe,K{74u}O{FTRXZYlckfv657;>2]S{CKQb}]qKm,aS[l,s>;1y4+}]6uS,aW{VQOaYignsp}]]',\n  5521: '5a[#W4aBad#]L2e,L6r,a[aj,ay,e{Goc}aN,eZ>1,i{lfRcJa}m{AsJ}i1>1,mi,mq,q{a8+}#uLuCq9#,u{jXmpW6;>1]y{MLWy}uQ,y{q2+}2{DFARVa;>;1lpwz14}]paI,a[26,6{ADm4}+{DHJUQkmielrw2z}]bC[F,H>;1NTgio4;>1]G{BGOT}]]',\n  5621: '5[_bGQbGPa2xbGsbGuLmi_,b[G2,G5,K{MRU}]aab,bK{r7283}OF,K+,O{HZp96t}aM,Oq,S{LVX}Wc,S{fbRUiaZY}W{MSOLsz2}a{HECidsu9Q38}e{JNTSWbry1}i{LaZRb2;>1]m{EDAOXUfikH1;>1,6]]]6bq8,5b[m/,qg,u[B>;1IQP}]]',\n  5721: '5bu{Wjda;>;1iho;>;1sxzw04+}#yDyJ2d2c#,y{LRWpt4}2{BIMO}yv,2[R,W>;1Zhtz3}#6D6C2/#,6{KIRHeZYgot8}+{W7k4xd}]oKz,b+/,o[Ch,Gg,C{ZQpOxbVrmP6}G{aBq3fKGNjDkCsrZ}#KBKNOnKDKa#]]',\n  5821: '5oK{EbW;>;1SnL}#OhK4OgOTK0#]b+w,o[#K9OGK1OYWNSVSGO2#>1,#SAO0O6SDShO7OxSN#>1,WH,S{+on}WK,S{/8s09}W{CEz3Y;>;2r0vlxfdT1}a{ZWHsUaKRru}e{MKJ3IDG}a6,eL]725,oe{Nmj260/98+}i[A,I>;1NMUb}]]',\n  5921: '5oi{ehquwy;>1]m{BOejbgo8}#qCqJm+qS#>1,#qWuUqDqUuXuRq7#,u{P/G}]pOU,ou{IcMKCH}#qbuJyMuuux#,y{nCI}#uvu12Qy+2N#]pCc,o[2P,6{WOAr}22,6{jPJf1}#2r2p6+#,+{pAGjJS2E}]pC{W0GTm2}Sd,C{XoP}G{nv2O}Sq,K{VTlpI8}]]',\n  6021: '54[e5,e/,i{NQbotswy7;>1,/]m{AGLY0+}q{CBHSWin5y}u{DGEOSig;>;153}]YCP,4y{XKcWd0vpl+}2O>1]]6buY,542{Xqow4176}#+I6z+O67#,+{Alue}]5[#KiCFGvCl#]4+4,5[#CyC6GVC/#,G{fZBcpwjq2+}K{Len}O{KPU}]4+x]',\n  6121: '55O{gjnpuyw;>;143}S{EDFMONVTems8}W{ENKJbGapknrt42}aG>1,W0,a{KJCUadlj}#eCazeD#,a{1948x}e{NKSZje+;>1,8]iB,e{w6y;>1]i{LNJfng;>;2k0w7}m[H>;1GcYh;>1,o>;2nsw}]]',\n  6221: '55m{y248}q{ADILOWTZ;>;1w04;>2]u{CNWSehlnq}]]6Jiv,55[u7,y{IHEpkel;>;1b3;>1]2{Haorbl/+5}6{OLRgew25/8;>1,7]+{HNXacju8}]6[#CMCSSmCgSqGFKOG0KGG8#,K{aMj1qv}O{RGLU}K+,K8,O{FKs}]]',\n  6321: '56O{na90}S{HSRZsr}W{AgXfaVT6/}a{Kdn}]]6b2L,56a{quz5;>1]e{JVnshj}i{INY;>;1gf}aA,i{x7+3}m{DXJh;>1,p]]]6b6d,56m{w59}q{IXVYWp}#uIqwq2uFuEq/#]]6YKD,56u{HKNPVTZ;>;1dh;>;1mtw}y{CPKGzY;>;1e1o2}2Q]]',\n  6421: '56[#26yE2NyL#,2{MF1l0nw;>;1su}6{dYfNcaLSP}2d,6Z,+{LBMP}60,+{Gdp}]_7CR7CU6+m6+l_,7[Gg,C{AHT}]_6+z6+37CX7CN6+2_,7C{jnqf3r9}G{MDUPAQYfkWls1}K{DQktirhozyxu59}O{AFCYSci}]]6ay7,57O{vy026}SG]]',\n  6521: '57S{CcVK}WF,WL,S{uy/1}W{GzWOyouPj}#aTaJWbaPW9#,a{b6uj1}#eHa9ari9aiavec#,a{4fw}e{Ydke7yh}i{FKjhSxfJLi}mG,mm,i{715}mD,i{3y6}m{ndWeZ;>;15qp87}#qDeVm9#]]6L6u,57[m/,q[I>;1MSQT;>;1WOb;>1]y4,y6]]',\n  6621: '572[F,M>2,Q>;1VUYf;>1,o>;1n4}6{CGDIHMUedajvy5u24}]]6K2x,57+[F>;1KVUhmpz5}]]6[aOc,IC{GELSY;>;1cho/7}G{KGSYafiozyw259/}K{EGFbTat}]]5YaQ,6I[Ks,O{blZdEaW}#SJOvOx#,S{bpjv}WL]]',\n  6721: '6[ZqL,I[#WGS+WTWRO8#,W{xul;>1,0]a{DIKACgVkj}Wf,a{Tpw1+49}#eAeCa6#,e{JNRZYIaf;>;1n6;>1,+]i[B>;1FHKNQWpr4z}m{AZYdafkioq;>1]iu,m[x,3>1,+]q{NSrf7s}u{hjfS0z6}6T,yD,u{75e}#yGucyJuZ#]]',\n  6821: '6Iy{10Wyx}#2Ay52Q2F#,y{vrX;>1]6{FaqfiW}yj,6{OHK}#28612z21#,6{gJo}+0]JCT,I+{rO9}]_JCDI+YJCLI+BI+3JCHI+gI+y_,JC{Nig}]_I69JC4JSGI+7_,J[#GtCqC8WaKEG3GrKtGuKCGpGGCsGvG5C1OKGi#,K{5/f}#OZONK7#,O{aQBGW}#KhShO/O0#,S[X>;1sfVU}O8,W{AjYI}]]',\n  6921: '6J[#WBiCWLWV#,a{AkIRKo}#WtaUabeqaHacW3W+aQeJa6ePa5#,e{QVdlc5}i{KTL}e+,e6,i{Giaw/}mN]]5LmV,6Jm{Ufnx}q{Tjp;>1,L>;12v}#uEuGqwuJ#]KCj,J[qr,u{Uepsfbv}y{SGIAD}u7,y{RJN}u5,y{K0/37lpa}2{gf4MO0XouZ}]]',\n  7021: '6Zm{dfmys}q{NYVXqnx;>;1w024;>1]u{OLJN}]KWN,Z[#ucyNuVu5#,y{EGITORPWZkqw59;>1]2{EGICJcgkmo}]]5YuS,6Z2{rx5}#6F286B26#,6{GLP;>;1comjz;>1]+{DGILct}]b2P,Z+y]56uf,6[Z+2,Z+1,aC{PM4kh39}G{GPLrv;>1]]]',\n  7121: '6aG{x0z}K{qvx2}O{EDGpr}S{DJSUYhd;>;1kgsu9;>1]W{CJFQLR;>;1MV}a[X>;1lt;>1,8]e{fbdYRt;>1,x>;174}i{BPF}ei,i{Zr3}m{FCAD}i+,m{VNbXfilkprq}q{tw8}u{APRT;>1,e>1,i>;1mvru0x3}]]',\n  7221: '6a[u7,y{GYafi;>;1ln;>3,u>1,y]2{EDPN;>;1RY0}6{TDRW;>1,f>;1o0}#+A+K65#,+{GPR;>;1jikUh}]bC6,a+{yxw}]bC{VUJTMGISKEublkhw}#GHCyGGC+#,G{agn24}O{nsw}#SJSIOr#,S{DGqm}#avSjSfWESVSSWBS/S+WGWI#]]',\n  7321: '6bW[d>;1kRQZy}a{JHr}Wv,W6,a{akpy}eE,eB,a{746}e{GPCZT4mtv9}ia>1,ie,m{159}q{BIL;>;1SVRdlp4qt}]Z2h,bu[M,O>;2Ucedglov02;>;157;>2]yH>1]]55q3,6by{Vhs+}2{KSUjf;>2,m>;1sq3y2}6{Vcg}]]',\n  7421: '5aCv,5qeH,6YGZ,5[_5GkYec4aZ_]',\n  7921: '57qK,6[_KScY2IYqIJOc_]5[_L+J4K7pixqOI_]6Yu5,5[pu7,b2F,L[#iouhu8#,y{AD5}2W,6{SKaU}+N]_YGAYCiL+/_,Y[Ce,G{GwC}#KUO0OYWKWkada+esiVqcqmuAub#,y{AHk}#2y6T6y+d#]]76iO,5ZK{cKp}#O/aG2Z2l6s+I+H#]]76iP>1,5a[#KeKySL#,W{Tbdj}#aka62W+A#]_5Sva+Ya+s_,b[#CeKmK6O1SnWT#]]76iR,5b[#WCWta4#>1,#eQyhy02n63#]]',\n  '223a': '4o[#iIiLqG#>1,qC>1,iq,ip]]',\n  '224a': '4oin>1,wqw=|77+i,4o[#eSeUiAiD#]]',\n  '225c': '4o[#igqlySiCiH#,m{hSq;>1]i{a9d1r;>1]]]',\n  '227e': '4pev',\n  '2d21': '4pGg>13,4oWg>9',\n  '2d40': '44[#2JyUyi2N#,y{YnD2}2R,2X,y{Nmjr}#2Ky76c#>2,6O>1,+E,6h]]',\n  '2d5f': '44[#27CdCf#]_oSW4+NoSh_,4[qk>4,ix>1,i5,2{+98}]]',\n  '2d73': '4oiu,4oiR',\n  '2d78': '4oif,4oq/',\n  '3a21': '5q2k,6aCD,5[_LuKZuwZ2kaK+amaoGooeHpiPpiGqC5qKxre35eV7S6_]6Imu,6a2C,5[_LqbL2QY+JZSG_,b[#Wvemeu#]_p+7rKZ5Gz6CC_]6[_KmQY6WKOf_]5[_Z2Qbqnoyr_,Y[#K1KsaN#]pyA,ZOJ,a[#Gea76w#]_b2pomNo6hqC9q2zriI4G9_]6YeH,5[4qA,6[#CVCmWt#]paO,7Sw]6[_I+cKOBLyJZqb_]5[_YmkZyop2Q72q_]6LKh,5Ya0,5Z2C,6Ziq,5aC6,5qaK,6IK0,5[_ZKybSOZ+86KV_]6be6,5[_L2cYmKZKL_,p[#C+ioyU+1#]_6qE62W7Si_]6Yyv,5qGc,6a6t,5[6y5,Y[#yZaKi3#]]',\n  '3b21': '5[a+f,ou2,p[#KuOmyt#]q66]6Jap,6ZuR,55qQ,6a+W,5o2M,6YyG,6a6r,5[_5q/pmSLiJYKYY+CbGxoOopKSpWjqGf4em4+K5Sj66X7qC_]6[_JqVK6DLObYW4aSQ_]5[_paspqrq6L_,L[#uVuUy62/#]Y[#i6+4+y#]Zej,Zub,a[Or,e{LJ/}2Q]b[#GNiCir+X#]_oCdoyHpSva2c_,p[#ava9eo6d#]_q2iq27rCP42F6WJ6eB_,7[#O4SZSr#]]6I[#KiSCez#]K[aW,m{epm}qM,uu]_LOHLOcZuMaO8_]5[q2v,L[#qLy86N#]_YWQa2Xa+6oWIoyBpmC_]',\n  '3c21': '5[_qyhruLrK74i+5K95eU6OB6S6_]6I[#CMCzeq#]JKU,L6e]5rGQ,6bm/,5byP,6K2Y,6bSr,56u6,6Lu4,5a6N,6Zur,5[_LiDY+xZ+3_,a[#SxuJ6k#]_oKJrm/ryG5a+_]6LOq,5a6f,6JSA,5[_6+gYGyp+0_]6Iqd,5bGh,6JWK,57ie,6IiO,5[_YaZbCEo2o_]6LWm,5[_pac4Wu6S+7SX_]6[_ICFKydLuKYGuJuHYKq_]5[_YCfYu6bC6p2T4G84i1_]6Y[#WMeIyr#]Iul]5[_a+CbyxoO5Li7Y+Wa6IomLpyxq6K4up4+g6iu_]6[_IWrLajYWSaaW_]5[_YSSY+XZGqa+/o6Iqi57as_]6ZyA,5[_ZuaY+OZGo_]',\n  '3d21': '5[_a6XbCxbeeL+uoSBou+rSy6eA6eL_,7[#WCmN+S#]]6[_IetIifJKQ_,K[#GGWy6Q#]Lm0,Lyv,Y[#CxWLWs#]ZuG,Yac]5[_LuAL2PYWFY2Bb6ToiOp+UrGBriL42j7im_]6YeN,6YqD,5[_Y+UaSZa6/reR6Wd7iu7KbaG+4afYe6_]6KGT,6L+w,5[_L+KbO7pil56s6uj_]6Iic,6ae/,5[_YeGb6qpesqWvq6J_,r[#ezqW2k#]_5u+7SUbeh_]6[_YG1YaHaCG_]5[_YemYidomApqRpuZriabq27eS72ypu4_]6[_JavJe3Ku4_]5[_YqpY+ZaWzbqPb6QoGV_]6Yuk,6Zmk,5YK3,5YSf',\n  '3e21': '5Y[#udyg2H+s#]Z[#OoWGSxiX#]a[#Woa+i861#]bC{GPRa}#qEqKug2w#]o[#m/qEub6M23#]pi{HMt}m2,2+]q[#Kiifi1#]r[#K8aIiJmY#]4[#S8SmWn#]5eH,5yB,6[#GdSBWlewugyR#]7Kn,7S5]6[_IKWI+WJKLJWJ_,K[#GdOzifi8mUmz#]LGh,LOe,Y[#akmm2+#]Z[#CYqc6Y#]]5Li{KIe}mX]_YaXYmwZ+O_,a[#C0OMyi#]bi4,oOF,p[#O+2h2W#]_rWE4q25Wz6mj_]6[_JK4K2yYa4Yyg_]5Zix,5Z+0,6aO+',\n  '3f21': '5[_outqSNq6W4et7mU_]6[_IG3ImyKemaOfJ2VL6x_]5[bC7,L[#y4+h61#]ZSH,a[#ig+d+p#]_b+DoWOoyvpawpmLqOuqabrW4rex_,5[#Sza5yf#]_6We6em7Sz_]6[_IejIqvJaqKaqKi6LqrL6bYCyYedZyH_]5[_Lq6LuBYiDaG1aOsbCL5SabC9_]6[_IWOKiKL+FZmjZ2t_]56yl,6[_KuPaCIYWi_]5Zuz,5Y6o,6YCX,5[_ZC5Z6Cbilo6orC04KK52h7KL7+g_]6[KGw,Y[#GCWUyQyY#]ZqP]55Ge,6auE,5[_bSHbWppWwp6i_]6Lao,6Zub,5[_o2up2JqSZ_]6[_I+FaCXZuAKO+_]',\n  '4a21': '56aP,6[_IW5KSHKaG_]5[_re1byXomVrK4LuP4mp_]6a6S,5[_YiGZC7Zm0aKzoakomu4SaaWu_,7[#KJOeSb#]]6Zuw,5paH,6IGe,5[_LiZL21YW1aGA_,b[#mjmzyK#]p+E,Lim]6[_JS9ZaJZmb_]57Gz,6aCB,5[_YO7aOB5mW6KnYil56l_]6JSR,5[_66GYGPaSJ4mH6+H7eo_]6[_L66L+UYGN_]5[_L6/YuJaipbyB_]6Z6t,5L+d,6IiX,6Yuq,5[_ZyDo2Vq2p5Sr_]6KOc,6LyU,5[_6mCYufaKToWVoiKpquq+N7C/_]6I+p,5[_YCjL+4YyFZGG_,a[#CxWJ6d#]b[#OwOvSpqW#]oqx,o2n,p[#S+a5yL#]]',\n  '4b21': '5[_rOVrOh4O56Cy7ir_]6[IOe,Iqz,J[#CMOsyC#]_KSSKiqLGKYKmYuSaO9bOzbWs_]5[_LmPLqhYKNYmWZ2Kaaobi9b+Y_>1,oi/,p[#q0yb+Q#]_qOSYaS7Sh_]6[_IKqIaoKyALKMLK/Ym+Ziy_]5ZCg,6aCs,5Y[#yXOV2c#]_aKopKypy04mn52m6mG_]6Yem,5[_YuDrKhq6GaCAbmMaWUpys7+7Yeh5uGpGp6Oo_]6a2U,6bq7,5[_Z+Laa5pinp6aq+OZOpqeZbmV_]6Iac,5p6V,6a6q,5p++,6bGS,5[_qGdLqmL+jY+Ioq5pyrrKr_]6L+E,5L6t,57mt,6bq/,5[_LiHoWirqA_]',\n  '4c21': '5ryr,6JST,5ZGz,5pyq,6a2F,5[_bez66VbKsa+G_]6Jyc,5rmK,6JOR,56iU,6ISI,5[_aaZ7KNrCR5ygYuZaSi4Sh4mf5+b_]6Zyn,6bWh,5[_qSLam/aiYYalZCNZG9piO5uf_]6[_L+3YqYbO0_]5[_aeq4mdruFYWNqOJ7a/7es_]6Z2i,6bq6,5pG4,5qih,6IyC,5[_aaEa2fq+b4yb5uy7ay_]6ICX,6JKZ,5YSy,5pyo,6buZ,5[_5uup2iYu/_]6aSF,5[_bCkoi77G+_]6LKw,5[_ZWPoK27SL_]6ZaA,5[_YyBLmfYa2aSc4i6_]6IC2,6YeO,5[_byl5+iY6Eb257SE_]6[_JasKizLqNZ2W_]5p+z,6Jau,6ZGT,5[_oSJoSIrK55mS_]',\n  '4d21': '6Kut,6Ly4,5[ZSv,L2R,Y[#SquH+L#]a6l,bm9,o[#KgaC+W#]_pyJp+armnraM4y2_>1,5Sx,6WQ]6[KOV,KqY,Y[#GKKRO1#]ZuE,J6N]5[aSV,L[#qI2ZiO#]]6[_KqJLy/aCQ_]5[_YKtbm8aaWa65bq4o+ao+6pOBpucqWKqeYrSLrq24aU5So6qv76K_]6[_ICAJGJJOJKaBKyhLiKYGlZm9aSK_]5[_oW+oqRqyyrKDrW07+M7+8reA76F_]6J66,6KO4,5p2l,6[_I6xaC8Zu3_]5rSb,57Wh,6JC9,6YWq,5[_LmxY21bWQqyEr+r_]6[_JeNJitKan_]5[_YipZCPbGlp2OqKo5CG5KD_]',\n  '4e21': '55ei,6[_KOPKOhYeMZuiZm4_]5[_b6L46H6uL_]6JGO,5[_o6g5WlYqJrWBrqc5CJ5WZ6Gr7KS_]6ZqG,56uc,6b6N,5[_L62oWupeF_]6Jmc,5[_LqGLquYOaLihYeMa+upaZqKBra84yf5mC56t6ic7On_]6[_ImvKuSYG8YePZm1aCY_]5[_Yqb7eRYCrY6Yp6XreL4eQ5Cz_]6[_IeoLyqZqjbGXbqf_]5[_5GgaGBraZ7Sv_]6aGe,5L[#uky26L#]_Ya3Yqxba6oCc46y6S8_]6[IuT,Yi0,Z[#q3u2yK#]bqX,b2i]5[_pqmq20YiXYqj4OI_]6KOC,5[_buJoGLoaQryj4WJ7C+7e0_]6IGv',\n  '4f21': '6[_JOuYCjYys_]5ZGC,6a2v,5quT,54KJ,6[_LOCLevZyy_]5[_Yq0amBbuKbyEpyXqW8qaUrWqryP4mi4u86+t_]6[_ICBIG+J2LYOO_]5YWt,6bqT,56aE,6[_IKLYyyKuW_]5YCt,5ZKM,6Kmx,5q2q,6LOE,6ISH,5oOR,5p6g,6bey,5LqZ,5LqY,6[_bCQKmrJeBJWo_]5[_qSArm+6KX_]6IWV',\n  '5a21': '5pO{aSFH}K7,O{YCxn}]]6IiJ,5[pOg>1,oqs,p[#OjOvSs#,O{20y6}SA,O9,S{YcFkjr0;>;1324}]5WL,pW{IWVNYedy4}aC>1]]6K6K,5pa{bfr3}e{DGBEMSbZg;>1,x]#2yiKiDe72z#,i[1>;10c}m{PEJBedkn;>;1fiw}q{DIOJEYd}#uBq5uJq+q8#]]',\n  '5b21': '5p[uE,q4,u{Wag}i/,u{mpw13}y{PWem;>1]]]6Zy4,5py{u/2}#2By4y3#,2{GegZj;>1]#6J2w6p282q#,6{MLmhF3}#+v60+s6z+p64#,+{kediu}65,+{OGn}]q[#qcCeGGCpGAGNCyGOKzCr#,G{Zj3/}K{fPtUdbD}#quK5G0#,K{1g6}#SPKNG+SBOKSIOYSiSmOhSMON#]]',\n  '5c21': '5qO{UnV}S{2SE}#OXOjSl#,O{5gv}S{oqajh}OG,W{53c4rU+u}#S5W0S9WZSw#,W{hed}#aBWqayaueQa/eBeTa+eO#]a+o,q[#eKeda7eDaniu#,a{RgcV0}#eeeoiCibe/yK#,e{5yn}#iFaxieetiUeriKiSuBijiTmEiMmyi2#,m{4HiZmI}i4,ii,q{QNgEi;>1]]]',\n  '5d21': '5qqX,6JiX,5q[#q7uDuC#,q{4zs}u{eRf}qq,u{aq7}yF]]6JiW,5q[#u6ySyW#]]6ayx,5qy{f43}]5uc,qy5]6aOu,5q2{HDJQZUbfh4;>1,/]6{AEDNYVekq;>;1vyxz38}+{GLTfsrzv}]]6bq+,5rC[I,T>;1bkj}G{eViq}K{CNaBb}G{+oz}KS,KQ,O{ExT}K9,O{XFd}K{ux+}]]',\n  '5e21': '5r[K6,O{bvZq}Sf]]6KGN,5rS{2r94Z1zSM}Wj,aT,W{ka5Z}#aOaV+kaFe5iViKa1eHema4#,e{GseMoSF6ZkVqu}#itmuiuiZmymfi+ijmrirm2mNifmDi6mOiku/idi4#,q{CqY}#uJq3uTq9qvuEqyuU#>1,#qPqluCqf2ByR#]4GM,ru{s4+}#y/uyyxuvyyuM#]]',\n  '5f21': '5r[#y+yTu36G26246B6A2v2b+z2t6C282Y6O6R+C2m#,6{zjhk5}+G,6q,+{fVsUYxub}]_4CJ4CLr+6_,4C{RBP}]_r++4Cb4Car20_,4C{dYfw+y}GR,Gj,K{ZSv}Ox,K{s4zu}O{fLdZ}#SJO9ScSZWlWVaI#,W{miMWs}aP,e7,a{EVos}#eXa5a+#,e{SJUOgsn18}]]',\n  '6a21': '6J2{Tjq}]KCF,J6{ifCv}#+L69+A+Q#]ZuW,J[#6r+E6z+H+G67#,+{vyg}]_KCPKCNJ++J+2_>1,KCO,J+S,KC{RWVihx25n7}G{ECSZeir}#KBG+KeG1G9K1Gy#,K{CXSuZiNkw/x}O[D>;1UY;>;1d5}SC,O{80oy}S{EMKT}WD,S{elq;>1]WB,WE,S{724}#WMSdWgWe#]]',\n  '6b21': '6KW{mktqv03+}a{DIKTYhpmsvy69/}e{Aac;>;1n04}i{DWQMbdl2}m{BbSGI8tsi}q{FCEohRl;>;1aj}u{ENCarznkx}yU,u{gi3eb}y{MHa}uh,y{WQXgz}]Z6r,Ky{mr+o}2{BMPOJWbar}]]',\n  '6c21': '6K2{fsv09}6{AMOS;>;1WZ;>1]]L[#C6GBC/#,G{IMOQVis46}K{CJFKN;>1,U]G8,KY]]5oid,6LK{tq9y;>;1u2}O{IBkja96;>1]S[E>;1KHPNQ}]b2O,L[#STONSUSW#,W{ntxz}#aBaZeCa+a6#,e{PaWMbLq;>;1fj8}iI>1,e/,i[d>;1Qf}mC,i{1w0}mK]]',\n  '6d21': '6Lm{HJMQIZkg}iq,m{jV2y8}q{BHFELKTRUZqhsw}#uGqxq+#,u{FILbj87r+}y{KFVSZTcfbMmz75}#2F2Cy+#,2{MJGOXci;>2]6{cfjtv3}+{aliqv}]_YKHL+0YCFL+5_>1,YC{RVhNeWLn215}]L+4]',\n  '6e21': '6Y[GP>3,#COGJC+#,G{WYeov2}]Zqo,Y[#GyKCG9#,K{BAKJPovx1}Oi,Ok]]5omI,6Y[Ob,S{CSZyw}W{KWYjlpzy}a{LJCirvq106}e[A>;1JLQWfhb81;>1]ie,e/,i{UsVR}m{eXFJkI}#qVi/mLmQ#,q{cWTb}#mauPq5q3upyPu62Eyu#]]',\n  '6f21': '6Yy{Ziaj617}2{cg8uW}6[w,s>;1U5}+[W>;1olYDdQIk}]ZC{aUTDHQ2r1h6}G{BSEbgieq}]Yip,ZG{w139a8+}KB,G/,a{CHKUWY;>;1gont875+}eK]]5r+2,6Ze{DNMVUWchli}i{hou;>1]m{CMPL3ce}]]',\n  '7a21': '5[b+e,o[#GdKFKKOeOVSgOy#,S{R3w}#aYiTqm+1#]p[#GgKdOOWO#,i{AV7Juek}m{lXZ}]]76iS,5p[mz,q{Zgy/}u6,yO]]76Sp,5[_p2mp67qGSp+A_,q[#CBGEOP#]]76iT,5qWo,76iU,5q[#aYeiiw#,m{rGz+}#uiuk+W#]r[#C/GcKGGvOaSEaHWvaWas#,e{P4y8}#i5mcini8q/6I61+1#]4C{FHo}#KFKrSPSEWcWG#>1]]76iV,54[#eBe+qx#]]',\n  '7b21': '54q+,54yk,76iW,54[23,69,+{JWjS}]5CH,4+1,5C{mqpu}#GiKJKfSBWv#,q{Ccebm}]]76iX,5[52G,Yqv,6[Ch,G{Ok6}Sw]]76iY>2,56aU,76ib,56[#abuRun#]]76ic,56ur,566e,76id,57[#WIWca3ageWmS2H6h#]]76ie,6I[#yB2i2/+H+2#]J[GI,K0,W{TZr}]]76if,6Jaw,76ig>1,6K[#CHO1iSi3m5qnq+uf#]]76ii,6K[#u22T2/#]L[#OwO0SSW2#]]76ij,6LuP,76ik>1,6YGn,6YOe,76im,6Y[#SVSnea#]]',\n  '7c21': '6Ye{Xet;>1,k>1]i{GQK6}mA,i8,m{OZR}#i5mnqnm3#>1,u{nXZQ}]]76in,6Yu{VgT}#ylyhu7#]]76io,6Y[#yeu/ydyC2w2X6k#,+{Ge4}]Z[#CxGFGIaS#]]76ec,76ip,6Z[#qdqvyzy7#,2{DNPRV}]aGX,aGl]76iq>1,6aSn,76is,6a[#aemOuZuc212y#,6{Px7}]b[#CAWwWr#]]76it,6biZ,6buR',\n  '7c71': '4oWw>9',\n  '7c7c': '77[#+kyHyC#]]',\n  '1215d': '4oiS'\n}\n", "import { base64ToHex } from './text-decode-encode.util.js'\nimport UTF8_TO_JIS_TABLE from './utf8-to-jis-table.constants.js'\n\n/** @param {string} x - hex string */\nconst xInt = x => parseInt(x, 16)\n/** @param {string} x - base64 string */\nconst b64Int = x => xInt(base64ToHex(x))\n\n/** @typedef {{[key: string]: string}} CompressedTable */\n/** @typedef {{[utf8Value: number]: number}} Utf8ToJisTable */\n\n/**\n * @param {CompressedTable} compressedTable - target table\n * @returns {Utf8ToJisTable} decompressed table\n */\nfunction decompressUtf8ToJisTable (compressedTable) {\n  /** @type {Record<number, number>} */\n  const result = {}\n  for (const [jisChar, compressedUtf8ValsStr] of Object.entries(compressedTable)) {\n    const utf8Vals = decompressUtf8ValsStr(compressedUtf8ValsStr).split(',')\n    let charIterator = xInt(jisChar)\n    for (const utf8Value of utf8Vals) {\n      if (utf8Value.includes('|')) {\n        utf8Value.split('|').map(b64Int).forEach(key => { result[key] = charIterator })\n        charIterator++\n      } else if (utf8Value.includes('>')) {\n        const kv = utf8Value.split('>')\n        const init = b64Int(kv[0])\n        for (let i = 0, e = xInt(kv[1]); i <= e; ++i) {\n          result[init + i] = charIterator++\n        }\n      } else {\n        result[b64Int(utf8Value)] = charIterator++\n      }\n    }\n  }\n  return result\n}\n\n/**\n * decompress each value in utf8-to-jis-table.constants.js object (e.g \"4[p[S[A,C,M,Q,Y,U,c,s,k,0,8,B,D,P,T,b,X,j,z,r,7],WL,S[g,v,o,3,/,d,w,l,4],WC]]\" to\n * \"4pSA,4pSC,4pSM,4pSQ,4pSY,4pSU,4pSc,4pSs,4pSk,4pS0,4pS8,4pSB,4pSD,4pSP,4pST,4pSb,4pSX,4pSj,4pSz,4pSr,4pS7,4pWL,4pSg,4pSv,4pSo,4pS3,4pS/,4pSd,4pSw,4pSl,4pS4,4pWC\")\n * @param {string} compressedVals - compressed utf8-to-jis-table.constants.js field value\n */\nfunction decompressUtf8ValsStr (compressedVals) {\n  /** @type {(amount: number) => (str: string) => string} */\n  const join = amount => str => str.slice(1, -1).split('').reduce((val, ch, i) => val + (i % amount ? '' : ',') + ch)\n\n  const commaSeparatedVals = [\n    [/{/g, '[;'],\n    [/}/g, ';]'],\n    [/]([^\\]])/g, '],$1'], // @ts-ignore\n    [/[a-zA-z0-9+/]{2,3}\\[/g, match => match.split('').join('[').slice(0, -1)], // @ts-ignore\n    [/_[^_]+_/g, join(3)], // @ts-ignore\n    [/#[^#]+#/g, join(2)], // @ts-ignore\n    [/;[^;]+;/g, join(1)],    // @ts-ignore\n  ].reduce((acc, args) => acc.replace(...args), compressedVals)\n\n  let result = ''\n  let prefix = ''\n  let initPrefix = ''\n  for (const char of commaSeparatedVals) {\n    switch (char) {\n      case '[':\n        initPrefix = prefix\n        break\n      case ']':\n        initPrefix = initPrefix.slice(0, -1)\n        break\n      case ',':\n        result += prefix + ','\n        prefix = initPrefix\n        break\n      default:\n        prefix += char\n    }\n  }\n  result += prefix\n  return result\n}\n\n/** @type {(x:CompressedTable) => {Utf8ToJisTable: () => Utf8ToJisTable}} x  */\nexport const usingTable = (compressedTable) => {\n  let generatedTable = null\n  return {\n    Utf8ToJisTable () {\n      generatedTable ??= decompressUtf8ToJisTable(compressedTable)\n      return generatedTable\n    },\n  }\n}\n\nexport const getUtf8ToJisTable = usingTable(UTF8_TO_JIS_TABLE).Utf8ToJisTable\n", "import { getUtf8ToJisTable } from './utf8-to-jis-table.js'\n\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\nconst sjisDecoder = new TextDecoder('sjis')\n\n/**\n * @param {string} str - input text\n * @returns {Uint8Array} utf8 encoded byte array\n */\nexport const textToBytes = (str) => encoder.encode(str)\n\n/**\n * @param {Uint8Array} bytes - utf8 encoded byte array\n * @returns {string} decoded output\n */\nexport const bytesToText = (bytes) => decoder.decode(bytes)\n\n/**\n * @param {string} base64 - input base64 text\n * @returns {Uint8Array} byte array\n */\nexport const base64ToBytes = (base64) => Uint8Array.from(atob(base64), (m) => /** @type {number} */(m.codePointAt(0)))\n\n/**\n * @param {Uint8Array} bytes - byte array\n * @returns {string} base64 text\n */\nexport const bytesToBase64 = (bytes) => btoa(Array.from(bytes, (x) => String.fromCodePoint(x)).join(''))\n\n/**\n * @param {string} str - input text\n * @returns {string} encoded input text in base64\n */\nexport const textToBase64 = (str) => bytesToBase64(encoder.encode(str))\n\n/**\n * @param {string} base64 - input base64 text\n * @returns {string} decoded input text\n */\nexport const base64ToText = (base64) => decoder.decode(base64ToBytes(base64))\n\n/**\n * @param {string} hex - hex string\n * @returns {string} converted string in base64\n */\nexport const hexToBase64 = (hex) => bytesToBase64(hexToBytes(hex))\n\n/**\n * @param {string} base64 - input base64 text\n * @returns {string} converted string in hexadecimal\n */\nexport const base64ToHex = (base64) => bytesToHex(base64ToBytes(base64))\n\n/**\n * @param {string} hex - hex string\n * @returns {Uint8Array} byte array\n */\nexport function hexToBytes (hex) {\n  const bytes = []\n  for (let c = 0, e = hex.length; c < e; c += 2) {\n    bytes.push(parseInt(hex.substring(c, c + 2), 16))\n  }\n  return Uint8Array.from(bytes)\n}\n\n/**\n * @param {Uint8Array} bytes - byte array\n * @returns {string} hex string\n */\nexport const bytesToHex = (bytes) => Array.from(bytes).map(byte => ((byte + 256) & 0xff).toString(16)).join('')\n\n/**\n * @param {string} str - input text\n * @returns {Uint8Array} SJIS encoded byte array\n */\nexport const textToSjisBytes = (str) => UTF8ToSJIS(textToBytes(str))\n\n/**\n * @param {Uint8Array} bytes - SJIS encoded byte array\n * @returns {string} decoded output\n */\nexport const sjisBytesToText = (bytes) => sjisDecoder.decode(bytes)\n\n/**\n * @param {Uint8Array} data - utf8 encoded byte array\n * @returns {Uint8Array} SJIS encoded byte array\n */\n// eslint-disable-next-line sonarjs/cognitive-complexity -- its low level, it is meant to be complex\nfunction UTF8ToSJIS (data) {\n  const FALLBACK_CHARACTER = 63 // '?'\n  const UTF8_TO_JIS_TABLE = getUtf8ToJisTable()\n\n  /** @type {number[]} */\n  const results = []\n  const len = data && data.length\n  let b1, b2, utf8, jis\n\n  for (let i = 0; i < len; i++) {\n    const b = data[i]\n\n    if (b >= 0x80) {\n      if (b <= 0xDF) {\n        // 2 bytes\n        utf8 = (b << 8) + data[++i]\n      } else if (b <= 0xEF) {\n        // 3 bytes\n        utf8 = (b << 16) +\n               (data[++i] << 8) +\n               (data[++i] & 0xFF)\n      } else {\n        // 4 bytes\n        utf8 = (b << 24) +\n               (data[++i] << 16) +\n               (data[++i] << 8) +\n               (data[++i] & 0xFF)\n      }\n\n      jis = UTF8_TO_JIS_TABLE[utf8]\n      if (jis == null) {\n        results[results.length] = FALLBACK_CHARACTER\n      } else {\n        if (jis < 0xFF) {\n          results[results.length] = jis + 0x80\n        } else {\n          if (jis > 0x10000) {\n            jis -= 0x10000\n          }\n\n          b1 = jis >> 8\n          b2 = jis & 0xFF\n          if (b1 & 0x01) {\n            b1 >>= 1\n            if (b1 < 0x2F) {\n              b1 += 0x71\n            } else {\n              b1 -= 0x4F\n            }\n\n            if (b2 > 0x5F) {\n              b2 += 0x20\n            } else {\n              b2 += 0x1F\n            }\n          } else {\n            b1 >>= 1\n            if (b1 <= 0x2F) {\n              b1 += 0x70\n            } else {\n              b1 -= 0x50\n            }\n            b2 += 0x7E\n          }\n          results[results.length] = b1 & 0xFF\n          results[results.length] = b2 & 0xFF\n        }\n      }\n    } else {\n      results[results.length] = data[i] & 0xFF\n    }\n  }\n\n  return Uint8Array.from(results)\n}\n", "import { MODE_KANJI } from './mode-bits.constants.js'\nimport { textToSjisBytes } from '../utils/text-decode-encode.util.js'\n\n/**\n * Create QR code Kanji mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject & {readonly bytes: Uint8Array}} created mode object\n */\nexport const QrKanji = (data) => {\n  const bytes = textToSjisBytes(data)\n  return Object.freeze({\n    data,\n    bytes,\n    mode: MODE_KANJI,\n    length: ~~(bytes.length / 2),\n    write: writeDataToBitBuffer.bind(null, bytes),\n  })\n}\n\n/**\n * Writes kanji data to bit buffer that will be used to generate the QR code\n * @param {Uint8Array} bytes - QrKanji mode object data byte array\n * @param {import(\"./../utils/qr-bit-buffer.js\").QrBitBuffer} buffer - target bit buffer\n */\nfunction writeDataToBitBuffer (bytes, buffer) {\n  let i = 0\n\n  while (i + 1 < bytes.length) {\n    let c = ((0xff & bytes[i]) << 8) | (0xff & bytes[i + 1])\n\n    if (c >= 0x8140 && c <= 0x9FFC) {\n      c -= 0x8140\n    } else if (c >= 0xE040 && c <= 0xEBBF) {\n      c -= 0xC140\n    } else {\n      throw Error(`illegal char at ${i + 1}/${c}`)\n    }\n\n    c = ((c >>> 8) & 0xff) * 0xC0 + (c & 0xff)\n    buffer.put(c, 13)\n    i += 2\n  }\n\n  if (i < bytes.length) {\n    throw Error(`illegal char at ${i + 1}`)\n  }\n}\n\n/**\n * @param {string} text - text to validate\n * @returns {import('./mode-bits.constants.js').ModeObject & {readonly bytes: Uint8Array} | null} created mode object or null if invalid\n */\nexport function getValidQrKanjiOrNull (text) {\n  const modeObject = QrKanji(text)\n  const { bytes } = modeObject\n\n  let i = 0\n\n  while (i + 1 < bytes.length) {\n    let c = ((0xff & bytes[i]) << 8) | (0xff & bytes[i + 1])\n\n    if (c >= 0x8140 && c <= 0x9FFC) {\n      c -= 0x8140\n    } else if (c >= 0xE040 && c <= 0xEBBF) {\n      c -= 0xC140\n    } else {\n      return null\n    }\n\n    c = ((c >>> 8) & 0xff) * 0xC0 + (c & 0xff)\n    i += 2\n  }\n  return i >= bytes.length ? modeObject : null\n}\n", "import { MODE_8BIT_BYTE } from './mode-bits.constants.js'\nimport { textToBytes } from '../utils/text-decode-encode.util.js'\n\n/**\n * Create QR code byte mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject} created mode object\n */\nexport const Qr8BitByte = (data) => Object.freeze({\n  data,\n  mode: MODE_8BIT_BYTE,\n  length: data.length,\n  write: writeDataToBitBuffer.bind(null, textToBytes(data)),\n})\n\n/**\n * Writes byte data to bit buffer that will be used to generate the QR code\n * @param {Uint8Array} data - Qr8BitByte mode object data byte array\n * @param {import(\"./../utils/qr-bit-buffer.js\").QrBitBuffer} buffer - target bit buffer\n */\nfunction writeDataToBitBuffer (data, buffer) {\n  for (const byte of data) {\n    buffer.put(byte, 8)\n  }\n}\n", "import { QrNumber } from './number.mode.js'\nimport { QrAlphaNum } from './alphanum.mode.js'\nimport { getValidQrKanjiOrNull } from './kanji.mode.js'\nimport { Qr8BitByte } from './byte.mode.js'\n\n/**\n * Create QR code Kanji mode object\n * @param {string} data - data of mode object\n * @returns {import('./mode-bits.constants.js').ModeObject} get best matching mode\n */\nexport function getBestMode (data) {\n  if (/^\\d+$/.test(data)) {\n    return QrNumber(data)\n  }\n  if (/^[0-9A-Z $%*+-./:]+$/.test(data)) {\n    return QrAlphaNum(data)\n  }\n  return getValidQrKanjiOrNull(data) ?? Qr8BitByte(data)\n}\n\nconst LENGTH_BITS_MATRIX = Object.freeze([\n  10, 12, 14, // MODE_NUMBER\n  9, 11, 13, // MODE_ALPHA_NUM\n  8, 16, 16, // MODE_8BIT_BYTE\n  8, 10, 12, // MODE_KANJI\n])\n\n/**\n * @param {number} mode - mode balue\n * @param {number} version - qr version\n * @returns {number} the number of bits in character count indicator\n */\nexport function getCharCountBitLength (mode, version) {\n  if (!(version >= 1 && version < 41)) {\n    throw Error(`invalid version: ${version}`)\n  }\n  if (mode < 1 || mode > 8 || (mode & (mode - 1))) {\n    throw Error(`invalid mode: ${mode}`)\n  }\n  const modeIndex = 31 - Math.clz32(mode)\n  const bitsIndex = version > 26 ? 2 : version > 9 ? 1 : 0\n  return LENGTH_BITS_MATRIX[modeIndex * 3 + bitsIndex]\n};\n", "/**\n * The Galois field exponent table.\n */\nconst EXP_TABLE = new Uint8Array(256)\n/**\n * The Galois field logarithmic table.\n */\nconst LOG_TABLE = new Uint8Array(256)\n\n// fill exponent table\nfor (let i = 0; i < 8; i += 1) {\n  EXP_TABLE[i] = 1 << i\n}\nfor (let i = 8; i < 256; i += 1) {\n  EXP_TABLE[i] = EXP_TABLE[i - 4] ^\n    EXP_TABLE[i - 5] ^\n    EXP_TABLE[i - 6] ^\n    EXP_TABLE[i - 8]\n}\n// fill logarithmic table\nfor (let i = 0; i < 255; i += 1) {\n  LOG_TABLE[EXP_TABLE[i]] = i\n}\n\n/**\n * @param {number} n - input\n * @returns {number} logarithm of {@link n} using Galois field logarithmic table\n */\nexport function glog (n) {\n  if (n < 1) { throw Error(`glog(${n})`) }\n  return LOG_TABLE[n]\n}\n\n/**\n * @param {number} n - input\n * @returns {number} exponential of {@link n} using Galois field exponent table\n */export function gexp (n) {\n  while (n < 0) { n += 255 }\n  while (n >= 256) { n -= 255 }\n  return EXP_TABLE[n]\n}\n", "import { gexp, glog } from './qr-math.util.js'\n\nclass QRPolynomial {\n  /** @type {readonly number[]} */\n  array\n\n  /**\n   * @param {ArrayLike<number>} num - polinomial value\n   * @param {number} shift - shift value\n   */\n  constructor (num, shift = 0) {\n    let offset = 0\n    const numLen = num.length\n\n    while (offset < numLen && num[offset] === 0) {\n      offset += 1\n    }\n    const lengthAfterOffset = numLen - offset\n    const array = new Array(lengthAfterOffset + shift)\n    for (let i = 0; i < lengthAfterOffset; i += 1) {\n      array[i] = num[i + offset]\n    }\n\n    this.array = Object.freeze(array)\n    return Object.freeze(this)\n  }\n\n  /** @param {number} index - value position */\n  getAt (index) {\n    return this.array[index]\n  }\n\n  get length () {\n    return this.array.length\n  }\n\n  /**\n   * @param {QRPolynomial} other - right side of operation\n   * @returns {QRPolynomial} multiplication result\n   */\n  multiply (other) {\n    const { length, array } = this\n    const { length: otherLength, array: otherArray } = other\n\n    const num = new Array(length + otherLength - 1)\n\n    for (let i = 0; i < length; i += 1) {\n      for (let j = 0; j < otherLength; j += 1) {\n        num[i + j] ^= gexp(glog(array[i]) + glog(otherArray[j]))\n      }\n    }\n\n    return new QRPolynomial(num, 0)\n  }\n\n  /**\n   * @param {Readonly<QRPolynomial>} other - right side of operation\n   * @returns {QRPolynomial} mod result\n   */\n  mod (other) {\n    const { length, array } = this\n    const { length: otherLength, array: otherArray } = other\n\n    if (length - otherLength < 0) {\n      return this\n    }\n\n    const ratio = glog(array[0]) - glog(otherArray[0])\n\n    const num = Uint32Array.from(array)\n\n    for (let i = 0; i < otherLength; i += 1) {\n      num[i] ^= gexp(glog(otherArray[i]) + ratio)\n    }\n\n    // recursive call\n    return new QRPolynomial(num, 0).mod(other)\n  };\n}\n\n/**\n * Transforms array into a polynomial\n * @param {ArrayLike<number>} num - polynomial values\n * @param {number} [shift] - shift value\n * @returns {Readonly<QRPolynomial>} polynomial\n */\nexport function QrPolynomial (num, shift = 0) {\n  return new QRPolynomial(num, shift)\n};\n", "import { QrPolynomial } from '../utils/qr-polynomial'\nimport { gexp } from '../utils/qr-math.util'\n\n/**\n * memoize getErrorCorrectPolynomial as it is called multiple times when generating QR Code\n */\nconst memoECPolynomials = [\n  QrPolynomial([1], 0),\n]\n\n/**\n * @param {number} errorCorrectLength - error correction codeword count\n * @returns {ReturnType<QrPolynomial>} error correction polynomial\n */\nexport function getErrorCorrectPolynomial (errorCorrectLength) {\n  if (memoECPolynomials.length > errorCorrectLength) {\n    return memoECPolynomials[errorCorrectLength]\n  }\n  const lastIndex = memoECPolynomials.length - 1\n  let polynomial = memoECPolynomials[lastIndex]\n  for (let i = lastIndex; i < errorCorrectLength; i += 1) {\n    polynomial = polynomial.multiply(QrPolynomial([1, gexp(i)], 0))\n    memoECPolynomials.push(polynomial)\n  }\n  return polynomial\n};\n", "import { QrBitBuffer } from './qr-bit-buffer.js'\nimport { ECBlocksInfo } from '../error-correction/qr-ec-block.utils.js'\nimport { getCharCountBitLength } from '../modes/mode-utils.util.js'\nimport { getErrorCorrectPolynomial } from '../error-correction/ec-polynomial.js'\nimport { QrPolynomial } from './qr-polynomial.js'\n\nconst PAD0 = 0xEC\nconst PAD1 = 0x11\n\n/**\n *\n * @param {number} typeNumber - qr code version\n * @param {number} errorCorrectionLevel - error correction level\n * @param {readonly import (\"../modes/mode-bits.constants.js\").ModeObject[]} dataList - qr code raw data\n * @returns {number[]} qr code byte data\n */\nexport function createData (typeNumber, errorCorrectionLevel, dataList) {\n  const blocksInfo = ECBlocksInfo(typeNumber, errorCorrectionLevel)\n  const buffer = new QrBitBuffer()\n\n  for (const data of dataList) {\n    buffer.put(data.mode, 4)\n    buffer.put(data.length, getCharCountBitLength(data.mode, typeNumber))\n    data.write(buffer)\n  }\n\n  const totalDataCount = blocksInfo.totalDcCount\n\n  if (buffer.bitLength > totalDataCount * 8) {\n    throw Error(`code length overflow. (${buffer.bitLength} > ${totalDataCount * 8})`)\n  }\n\n  // end code\n  if (buffer.bitLength + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4)\n  }\n\n  // padding\n  while (buffer.bitLength % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // padding\n  while (true) {\n    if (buffer.bitLength >= totalDataCount * 8) {\n      break\n    }\n    buffer.put(PAD0, 8)\n\n    if (buffer.bitLength >= totalDataCount * 8) {\n      break\n    }\n    buffer.put(PAD1, 8)\n  }\n\n  return createBytes(buffer, blocksInfo)\n};\n\n/**\n * @param {QrBitBuffer} buffer - data buffer\n * @param {import('../error-correction/qr-ec-block.utils.js').ECBlocksInfo} blocksInfo - error correction blocks info\n */\nfunction createBytes (buffer, blocksInfo) {\n  const { maxDcCount, maxEcCount, blocks: ecBlocks, totalCount: totalCodeCount } = blocksInfo\n  const { ecdata, dcdata } = createCodewordsData(buffer, ecBlocks)\n\n  /** @type {number[]} */\n  const data = new Array(totalCodeCount)\n  let index = 0\n\n  for (let i = 0; i < maxDcCount; i += 1) {\n    for (let r = 0; r < ecBlocks.length; r += 1) {\n      if (i < dcdata[r].length) {\n        data[index] = dcdata[r][i]\n        index += 1\n      }\n    }\n  }\n\n  for (let i = 0; i < maxEcCount; i += 1) {\n    for (let r = 0; r < ecBlocks.length; r += 1) {\n      if (i < ecdata[r].length) {\n        data[index] = ecdata[r][i]\n        index += 1\n      }\n    }\n  }\n\n  return data\n};\n\n/**\n * @param {QrBitBuffer} buffer - - data buffer\n * @param {import('../error-correction/qr-ec-block.utils.js').ECBlocks} ecBlocks - error correction blocks\n */\nfunction createCodewordsData (buffer, ecBlocks) {\n  let offset = 0\n\n  /** @type {number[][]} */\n  const dcdata = new Array(ecBlocks.length)\n  /** @type {number[][]} */\n  const ecdata = new Array(ecBlocks.length)\n\n  for (let r = 0; r < ecBlocks.length; r += 1) {\n    const dcCount = ecBlocks[r].dataCount\n    const ecCount = ecBlocks[r].ecCount\n\n    dcdata[r] = new Array(dcCount)\n\n    for (let i = 0, e = dcdata[r].length; i < e; i += 1) {\n      dcdata[r][i] = 0xff & buffer.byteBuffer[i + offset]\n    }\n    offset += dcCount\n\n    const rsPoly = getErrorCorrectPolynomial(ecCount)\n    const rawPoly = QrPolynomial(dcdata[r], rsPoly.length - 1)\n\n    const modPoly = rawPoly.mod(rsPoly)\n    ecdata[r] = new Array(rsPoly.length - 1)\n    for (let i = 0; i < ecdata[r].length; i += 1) {\n      const modIndex = i + modPoly.length - ecdata[r].length\n      ecdata[r][i] = (modIndex >= 0) ? modPoly.getAt(modIndex) : 0\n    }\n  }\n\n  return { ecdata, dcdata }\n};\n", "import { ECBlocksInfo } from './error-correction/qr-ec-block.utils.js'\nimport { fromString, CORRECTION_LEVEL_M } from './error-correction/ec-level.js'\nimport { getPatternPositions } from './utils/alignment-pattern.util.js'\nimport { getBCHTypeInfo, getBCHTypeNumber } from './utils/qr-util.js'\nimport { getMaskPatternFunction } from './mask-pattern/qr-mask-pattern.util.js'\nimport { createData } from './utils/create-data.util.js'\nimport { QrKanji } from './modes/kanji.mode.js'\nimport { Qr8BitByte } from './modes/byte.mode.js'\nimport { QrNumber } from './modes/number.mode.js'\nimport { QrAlphaNum } from './modes/alphanum.mode.js'\nimport { getBestMode, getCharCountBitLength } from './modes/mode-utils.util.js'\nimport { QrBitBuffer } from './utils/qr-bit-buffer.js'\n\nexport const NEIGHBOR_TOP_LEFT = 0b100_000_000\nexport const NEIGHBOR_TOP = 0b010_000_000\nexport const NEIGHBOR_TOP_RIGHT = 0b001_000_000\nexport const NEIGHBOR_LEFT = 0b000_100_000\nexport const NEIGHBOR_SELF = 0b000_010_000\nexport const NEIGHBOR_RIGHT = 0b000_001_000\n\nexport class QrCode {\n  /** @type {number} */\n  typeNumber = 0\n\n  /** @type {number} */\n\n  errorCorrectionLevel\n  /**\n   * module count is the amount of modules in the QR Code\n   * The module refers to the black and white dots that make up QR Code.\n   * @example moduleCount = 21 // QR code is a 21x21 matrix\n   */\n  moduleCount\n  modules\n  /** @type {number[] | null} */\n  #dataCache\n  /** @type {ReturnType<QrKanji | Qr8BitByte | QrNumber | QrAlphaNum>[] } */\n  dataList\n\n  /**\n   * @param {number} typeNumber - QR code version from 1 to 40\n   * @param {string} errorCorrectionLevel - error correction level, accepted values (case insensitive): l, low, m, medium, q, quartile, h, high\n   */\n  constructor (typeNumber = 0, errorCorrectionLevel = '') {\n    this.typeNumber = typeNumber ?? 0\n    this.errorCorrectionLevel = errorCorrectionLevel ? fromString(errorCorrectionLevel).bit : CORRECTION_LEVEL_M\n    this.moduleCount = 0\n    this.modules = createModuleTable(this.moduleCount)\n    this.#dataCache = null\n    this.dataList = []\n  }\n\n  /**\n   *\n   * @param {boolean} test - flag to determine if it is used for mask pattern evaluation\n   * @param {number} maskPattern - mask pattern to use\n   */\n  makeImpl (test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17\n\n    const moduleCount = this.moduleCount\n    this.modules = createModuleTable(moduleCount)\n    setupPositionProbePatterns(this)\n    setupPositionAdjustPattern(this)\n    setupTimingPattern(this)\n    setupTypeInfo(test, maskPattern, this)\n\n    if (this.typeNumber >= 7) {\n      setupTypeNumber(test, this)\n    }\n\n    if (this.#dataCache == null) {\n      this.#dataCache = createData(this.typeNumber, this.errorCorrectionLevel, this.dataList)\n    }\n\n    mapData(this.#dataCache, maskPattern, this)\n  };\n\n  /**\n   * @param {number} row - vertical position\n   * @param {number} col - horizontal position\n   * @returns {boolean} true if cell is a dark spot, false otherwise\n   */\n  isDark (row, col) {\n    const { modules, moduleCount } = this\n\n    if (row < 0 || moduleCount <= row || col < 0 || moduleCount <= col) {\n      throw Error(`out of bounds row: ${row}, column: ${col}, module count: ${moduleCount}`)\n    }\n    return modules[row][col]\n  };\n\n  /**\n   *\n   * @param {string} data - text data\n   * @param {'Byte'|'Numeric'|'Alphanumeric'|'Kanji'} [mode] - qr mode to use, uses best mode if absent\n   */\n  addData (data, mode) {\n    switch (mode) {\n      case 'Numeric' : this.dataList.push(QrNumber(data)); break\n      case 'Alphanumeric' : this.dataList.push(QrAlphaNum(data)); break\n      case 'Byte' : this.dataList.push(Qr8BitByte(data)); break\n      case 'Kanji' : this.dataList.push(QrKanji(data)); break\n      case null:\n      case undefined: this.dataList.push(getBestMode(data)); break\n      default : throw Error(`invalid mode \"${mode}\"`)\n    }\n\n    this.#dataCache = null\n  };\n\n  make () {\n    if (this.typeNumber < 1) {\n      this.typeNumber = getBestTypeNumber(this)\n    }\n    this.makeImpl(false, getBestMaskPattern(this))\n  };\n}\n\n/**\n * Gets the position of position detection pattern for the QR Code and draws them\n * @see drawPositionProbePattern to get more infomation about position detection pattern\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupPositionProbePatterns (qrcode) {\n  const { moduleCount } = qrcode\n  drawPositionProbePattern(qrcode, 0, 0)\n  drawPositionProbePattern(qrcode, moduleCount - 7, 0)\n  drawPositionProbePattern(qrcode, 0, moduleCount - 7)\n};\n\n/**\n * Draws a position detection pattern, one of three identical components of the Finder Pattern, normally on the top left, top right and bottom left\n * They require a blank space as separators for Position Detection Patterns\n * @example top right position detection pattern\n *   \u250C\u2500 blank space separator\n *   \u2502 \u250C\u2500 (row, col)\n *   v v\n * \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n *     \u2588\u2588          \u2588\u2588\n * \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\n *     \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\n * \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\n * \u2588\u2588  \u2588\u2588          \u2588\u2588\n *     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n * \u2588\u2588                 <- blank space separator\n *   \u2588\u2588  \u2588\u2588    \u2588\u2588  \u2588\u2588\n * @param {QrCode} qrcode - qr code object\n * @param {number} row - row position of the left part of the rectangle, see example\n * @param {number} col - column position of the left part of the rectangle, see example\n */\nfunction drawPositionProbePattern (qrcode, row, col) {\n  const { modules, moduleCount } = qrcode\n  const rowMin = row === 0 ? 0 : -1\n  const rowMax = row + 7 >= moduleCount ? moduleCount - row - 1 : 7\n  const colMin = col === 0 ? 0 : -1\n  const colMax = col + 7 >= moduleCount ? moduleCount - col - 1 : 7\n\n  for (let r = rowMin; r <= rowMax; r += 1) {\n    for (let c = colMin; c <= colMax; c += 1) {\n      const isDarkSpot = (\n        (r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)\n      )\n      modules[row + r][col + c] = isDarkSpot\n    }\n  }\n};\n\n/**\n * @param {QrCode} qrcode - qr code object\n * @returns {number} type number\n */\nfunction getBestTypeNumber (qrcode) {\n  const { errorCorrectionLevel, dataList } = qrcode\n\n  for (let typeNumber = 1; typeNumber < 40; typeNumber++) {\n    const ecBlocksInfo = ECBlocksInfo(typeNumber, errorCorrectionLevel)\n    const buffer = new QrBitBuffer()\n\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i]\n      buffer.put(data.mode, 4)\n      buffer.put(data.length, getCharCountBitLength(data.mode, typeNumber))\n      data.write(buffer)\n    }\n\n    if (buffer.bitLength <= ecBlocksInfo.totalDcCount * 8) {\n      return typeNumber\n    }\n  }\n\n  throw Error('data length too high to detect type number')\n}\n\n/**\n * @param {number} moduleCount - module count of a size of the matrix\n * @returns {boolean[][]} module table\n */\nfunction createModuleTable (moduleCount) {\n  const modules = new Array(moduleCount)\n  for (let row = 0; row < moduleCount; row += 1) {\n    modules[row] = new Array(moduleCount).fill(null)\n  }\n  return modules\n}\n\n/**\n * @param {QrCode} qrcode - qr code object\n * @returns {number} - byte value of mask pattern with less penalty points\n */\nfunction getBestMaskPattern (qrcode) {\n  let minLostPoint = 0\n  let pattern = 1\n  for (let i = 0; i < 8; i += 1) {\n    qrcode.makeImpl(true, i)\n\n    const lostPoint = getLostPoint(qrcode)\n\n    if (i === 0 || minLostPoint > lostPoint) {\n      minLostPoint = lostPoint\n      pattern = i\n    }\n  }\n\n  return pattern\n}\n\n/**\n * Gets the position of alignment patterns for the QR Code and draws them (the small rectangles in the rectangles in the QR Code)\n * @see paintAlignmentPattern to get more infomation about alignment patterns\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupPositionAdjustPattern (qrcode) {\n  for (const [row, col] of getPatternPositions(qrcode.typeNumber)) {\n    paintAlignmentPattern(qrcode, row, col)\n  }\n}\n\n/**\n * Draws an alignment pattern.\n *\n * Alignment pattern is a fixed reference pattern in defined positions in a matrix symbology,\n * which enables the decode software to resynchronise the coordinate mapping of the image modules\n * in the event of moderate amounts of distortion of the image\n * @example\n * \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n * \u2588\u2588      \u2588\u2588\n * \u2588\u2588  \u2588\u2588  \u2588\u2588\n * \u2588\u2588      \u2588\u2588\n * \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n * @param {QrCode} qrcode - qr code object\n * @param {number} row - row position of the center of alignment pattern\n * @param {number} col - column position of the center of alignment pattern\n */\nfunction paintAlignmentPattern (qrcode, row, col) {\n  const { modules } = qrcode\n\n  for (let r = -2; r <= 2; r += 1) {\n    for (let c = -2; c <= 2; c += 1) {\n      if (r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0)) {\n        modules[row + r][col + c] = true\n      } else {\n        modules[row + r][col + c] = false\n      }\n    }\n  }\n}\n\n/**\n * Draw the QR code timing pattern.\n *\n * A timing Pattern is an alternating sequence of dark and light modules enabling module\n * coordinates in the symbol to be determined.\n * @example\n *                avoid drawing on\n *               alignment patterns\n * \u2588\u2580\u2580\u2580\u2580\u2580\u2588               v               \u2588\u2580\u2580\u2580\u2580\u2580\u2588\n * \u2588 \u2588\u2588\u2588 \u2588             \u2584\u2584\u2584\u2584\u2584             \u2588 \u2588\u2588\u2588 \u2588\n * \u2588 \u2580\u2580\u2580 \u2588 \u2584 \u2584 \u2584 \u2584 \u2584 \u2584 \u2588 \u2584 \u2588 \u2584 \u2584 \u2584 \u2584 \u2584 \u2584 \u2588 \u2580\u2580\u2580 \u2588\n * \u2580\u2580\u2580\u2580\u2580\u2580\u2580     ^       \u2588\u2584\u2584\u2584\u2588   ^         \u2580\u2580\u2580\u2580\u2580\u2580\u2580\n *      \u2580   < timing patterns \u2500\u2518\n *      \u2580\n *      \u2580\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupTimingPattern (qrcode) {\n  const { modules, moduleCount } = qrcode\n\n  for (let r = 8; r < moduleCount - 8; r += 1) {\n    if (modules[r][6] != null) {\n      continue\n    }\n    modules[r][6] = (r % 2 === 0)\n  }\n\n  for (let c = 8; c < moduleCount - 8; c += 1) {\n    if (modules[6][c] != null) {\n      continue\n    }\n    modules[6][c] = (c % 2 === 0)\n  }\n};\n\n/**\n * @param {boolean} test - flag to determine if it is used for mask pattern evaluation\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupTypeNumber (test, qrcode) {\n  const { typeNumber, modules, moduleCount } = qrcode\n\n  const bits = getBCHTypeNumber(typeNumber)\n\n  for (let i = 0; i < 18; i += 1) {\n    const mod = (!test && ((bits >> i) & 1) === 1)\n    modules[Math.floor(i / 3)][i % 3 + moduleCount - 8 - 3] = mod\n  }\n\n  for (let i = 0; i < 18; i += 1) {\n    const mod = (!test && ((bits >> i) & 1) === 1)\n    modules[i % 3 + moduleCount - 8 - 3][Math.floor(i / 3)] = mod\n  }\n}\n\n/**\n *\n * @param {number[]} data - bit data of qrcode\n * @param {number} maskPattern - mask pattern number\n * @param {QrCode} qrcode - qr code object\n */\n// eslint-disable-next-line sonarjs/cognitive-complexity -- it's low level and simple enough\nfunction mapData (data, maskPattern, qrcode) {\n  const { moduleCount, modules } = qrcode\n\n  let inc = -1\n  let row = moduleCount - 1\n  let bitIndex = 7\n  let byteIndex = 0\n  const maskFunc = getMaskPatternFunction(maskPattern)\n\n  for (let col = moduleCount - 1; col > 0; col -= 2) {\n    if (col === 6) col -= 1\n\n    while (true) {\n      for (let c = 0; c < 2; c += 1) {\n        if (modules[row][col - c] == null) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          const mask = maskFunc(row, col - c)\n\n          if (mask) {\n            dark = !dark\n          }\n\n          modules[row][col - c] = dark\n          bitIndex -= 1\n\n          if (bitIndex === -1) {\n            byteIndex += 1\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || moduleCount <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Calculates the penalty point of QR Code, used to evaluate the masking results\n *\n * After performing the masking operation with each Mask Pattern in turn, the results shall be evaluated by scoring\n * penalty points for each occurrence of the following features. The higher the number of points, the less acceptable\n * the result. In the table, the variables N1 to N4 represent weighted penalty scores for the undesirable features\n * (N1 = 3, N2 = 3, N3 = 40, N4 = 10), i is the amount by which the number of adjacent modules of the same color exceeds 5\n * and k is the rating of the deviation of the proportion of dark modules in the symbol from 50% in steps of 5%.\n * Although the masking operation is only performed on the encoding region of the symbol excluding the Format\n * Information, the area to be evaluated is the complete symbol\n * @example\n * \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n * \u2502 Feature                                      \u2502 Evaluation                            \u2502 condition Points        \u2502\n * \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n * \u2502 Adjacent modules in row/column in same color \u2502  No. of modules = (5 + i)             \u2502  N1 + i                 \u2502\n * \u2502                                              \u2502                                       \u2502                         \u2502\n * \u2502 Block of modules in same color               \u2502  Block size = m * n                   \u2502  N2 * (m - 1) * (n - 1) \u2502\n * \u2502                                              \u2502                                       \u2502                         \u2502\n * \u2502 1:1:3:1:1 ratio (dark:light:dark:light:dark) \u2502                                       \u2502  N3                     \u2502\n * \u2502 pattern in row/column                        \u2502                                       \u2502                         \u2502\n * \u2502                                              \u2502                                       \u2502                         \u2502\n * \u2502 Proportion of dark modules in entire symbol  \u2502  50 \u00B1 (5 * k)% to 50 \u00B1 (5 * (k + 1))% \u2502  N4 * k                 \u2502\n * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n *                         Evaluation table from ISO/IEC 18004:2000(E) International Standard\n * @param {QrCode} qrcode - qr code object\n * @returns {number} calculated penalty points\n */\n// eslint-disable-next-line max-lines-per-function, sonarjs/cognitive-complexity -- even it we split one function per level, we would have to use eslint-disable in them anyway\nexport function getLostPoint (qrcode) {\n  const { moduleCount, modules } = qrcode\n  /** @type {(r:number, c:number) => boolean} */\n  const isDark = (r, c) => modules[r][c]\n  let lostPoint = 0\n\n  // Feature 1 - Adjacent modules in row/column in same color\n\n  for (let row = 0; row < moduleCount; row += 1) {\n    for (let col = 0; col < moduleCount; col += 1) {\n      let sameCount = 0\n      const dark = isDark(row, col)\n\n      for (let r = -1; r <= 1; r += 1) {\n        if (row + r < 0 || moduleCount <= row + r) {\n          continue\n        }\n\n        for (let c = -1; c <= 1; c += 1) {\n          if (col + c < 0 || moduleCount <= col + c) {\n            continue\n          }\n\n          if (r === 0 && c === 0) {\n            continue\n          }\n\n          if (dark === isDark(row + r, col + c)) {\n            sameCount += 1\n          }\n        }\n      }\n\n      if (sameCount > 5) {\n        lostPoint += (3 + sameCount - 5)\n      }\n    }\n  };\n\n  // Feature 2 - Block of modules in same color\n\n  for (let row = 0; row < moduleCount - 1; row += 1) {\n    for (let col = 0; col < moduleCount - 1; col += 1) {\n      let count = 0\n      if (isDark(row, col)) count += 1\n      if (isDark(row + 1, col)) count += 1\n      if (isDark(row, col + 1)) count += 1\n      if (isDark(row + 1, col + 1)) count += 1\n      if (count === 0 || count === 4) {\n        lostPoint += 3\n      }\n    }\n  }\n\n  // Feature 3 - 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column\n\n  for (let row = 0; row < moduleCount; row += 1) {\n    for (let col = 0; col < moduleCount - 6; col += 1) {\n      if (isDark(row, col) &&\n          !isDark(row, col + 1) &&\n          isDark(row, col + 2) &&\n          isDark(row, col + 3) &&\n          isDark(row, col + 4) &&\n          !isDark(row, col + 5) &&\n          isDark(row, col + 6)) {\n        lostPoint += 40\n      }\n    }\n  }\n\n  for (let col = 0; col < moduleCount; col += 1) {\n    for (let row = 0; row < moduleCount - 6; row += 1) {\n      if (isDark(row, col) &&\n          !isDark(row + 1, col) &&\n          isDark(row + 2, col) &&\n          isDark(row + 3, col) &&\n          isDark(row + 4, col) &&\n          !isDark(row + 5, col) &&\n          isDark(row + 6, col)) {\n        lostPoint += 40\n      }\n    }\n  }\n\n  // Feature 4 - Proportion of dark modules in entire symbol\n\n  let darkCount = 0\n\n  for (let col = 0; col < moduleCount; col += 1) {\n    for (let row = 0; row < moduleCount; row += 1) {\n      if (isDark(row, col)) {\n        darkCount += 1\n      }\n    }\n  }\n\n  const ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5\n  lostPoint += ratio * 10\n\n  return lostPoint\n};\n\n/**\n * @param {boolean} test - flag to determine if it is used for mask pattern evaluation\n * @param {number} maskPattern - mask pattern number\n * @param {QrCode} qrcode - qr code object\n */\nfunction setupTypeInfo (test, maskPattern, qrcode) {\n  const { errorCorrectionLevel, modules, moduleCount } = qrcode\n\n  const data = (errorCorrectionLevel << 3) | maskPattern\n  const bits = getBCHTypeInfo(data)\n\n  // vertical\n  for (let i = 0; i < 15; i += 1) {\n    const mod = (!test && ((bits >> i) & 1) === 1)\n\n    if (i < 6) {\n      modules[i][8] = mod\n    } else if (i < 8) {\n      modules[i + 1][8] = mod\n    } else {\n      modules[moduleCount - 15 + i][8] = mod\n    }\n  }\n\n  // horizontal\n  for (let i = 0; i < 15; i += 1) {\n    const mod = (!test && ((bits >> i) & 1) === 1)\n\n    if (i < 8) {\n      modules[8][moduleCount - i - 1] = mod\n    } else if (i < 9) {\n      modules[8][15 - i - 1 + 1] = mod\n    } else {\n      modules[8][15 - i - 1] = mod\n    }\n  }\n\n  // fixed module\n  modules[moduleCount - 8][8] = (!test)\n};\n", "/** @type {{[key: string]: string}} */\nconst xmlEscapeMap = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '&': '&amp;',\n  \"'\": '&apos;',\n  '\"': '&quot;',\n}\n\n/**\n * Escapes XML entities characters in `xml` string\n * @param {string} xml - xml to escape\n * @returns {string} escaped xml\n */\nexport function escapeXml (xml) {\n  return xml.replace(/[<>&'\"]/g, c => xmlEscapeMap[c])\n};\n", "/** @type {WeakRef<HTMLElement>} */\nlet tempDiv\n\n/**\n *\n */\nfunction getTempDiv () {\n  const elem = tempDiv?.deref()\n  if (elem) { return elem }\n  const newElem = document.createElement('div')\n  tempDiv = new WeakRef(newElem)\n  return newElem\n}\n\n/**\n *\n * @param {string} color - color to check\n * @param {string} fallback - fallback color if `color` is invalid\n */\nfunction getCssColorOrElse (color, fallback) {\n  const ele = getTempDiv()\n  ele.style.color = color\n  const result = ele.style.color.replace(/\\s+/, '').toLowerCase()\n  ele.style.color = ''\n  return result || fallback\n}\n\n/**\n * @returns {QRCodeCssColors} default CSS colors\n */\nexport function getDefaultColors () {\n  return {\n    darkColor: 'black',\n    lightColor: 'white',\n    cornerBorderColor: 'black',\n    cornerCenterColor: 'black',\n  }\n}\n\n/**\n *\n * @param {string} colorsVar - value of '--qrcode-color' property\n * @param {QRCodeCssColors} defaultColors - current default colors\n * @returns {QRCodeCssColors} updated colors\n */\nfunction parseQrcodeColorProp (colorsVar, defaultColors) {\n  const currentColors = { ...defaultColors }\n  if (colorsVar) {\n    const colorsList = colorsVar.split(/\\s+/)\n    const length = colorsList.length\n    if (length >= 1) {\n      currentColors.darkColor = getCssColorOrElse(colorsList[0], currentColors.darkColor)\n    }\n    if (length >= 2) {\n      currentColors.lightColor = getCssColorOrElse(colorsList[1], currentColors.lightColor)\n    }\n    if (length >= 3) {\n      currentColors.cornerBorderColor = getCssColorOrElse(colorsList[2], currentColors.cornerBorderColor)\n    }\n    if (length >= 4) {\n      currentColors.cornerCenterColor = getCssColorOrElse(colorsList[3], currentColors.cornerCenterColor)\n    }\n  }\n  return currentColors\n}\n\n/**\n *\n * @param {string} colorsVar - value of '--qrcode-corner-color' property\n * @param {QRCodeCssColors} defaultColors - current default colors\n * @returns {QRCodeCssColors} updated colors\n */\nfunction parseQrcodeCornerColorProp (colorsVar, defaultColors) {\n  const currentColors = { ...defaultColors }\n  if (colorsVar) {\n    const colorsList = colorsVar.split(/\\s+/)\n    if (colorsList.length === 1) {\n      currentColors.cornerBorderColor = getCssColorOrElse(colorsList[0], currentColors.cornerBorderColor)\n      currentColors.cornerCenterColor = currentColors.cornerBorderColor\n    }\n    if (colorsList.length >= 2) {\n      currentColors.cornerBorderColor = getCssColorOrElse(colorsList[0], currentColors.cornerBorderColor)\n      currentColors.cornerCenterColor = getCssColorOrElse(colorsList[1], currentColors.cornerCenterColor)\n    }\n  }\n  return currentColors\n}\n\n/**\n * @param {HTMLElement} element - target element\n * @returns {QRCodeColorProperties} cssColors to draw the QRCode\n */\nfunction QRCodeColorProperties (element) {\n  const computedStyle = getComputedStyle(element)\n  const propertyOf = (/** @type {string} */ prop) => computedStyle.getPropertyValue(prop).trim()\n\n  return {\n    color: propertyOf('--qrcode-color'),\n    darkColor: propertyOf('--qrcode-dark-color'),\n    lightColor: propertyOf('--qrcode-light-color'),\n    cornerColor: propertyOf('--qrcode-corner-color'),\n    cornerBorderColor: propertyOf('--qrcode-corner-border-color'),\n    cornerCenterColor: propertyOf('--qrcode-corner-center-color'),\n  }\n}\n\n/**\n * @param {QRCodeColorProperties} colorProperties - color properties\n * @returns {QRCodeCssColors} cssColors to draw the QRCode\n */\nexport function parseQrCodeColors (colorProperties) {\n  let currentColors = {\n    ...getDefaultColors(),\n    cornerBorderColor: '',\n    cornerCenterColor: '',\n  }\n  currentColors = parseQrcodeColorProp(colorProperties.color, currentColors)\n  currentColors.darkColor = getCssColorOrElse(colorProperties.darkColor, currentColors.darkColor)\n  currentColors.lightColor = getCssColorOrElse(colorProperties.lightColor, currentColors.lightColor)\n  currentColors = parseQrcodeCornerColorProp(colorProperties.cornerColor, currentColors)\n  currentColors.cornerBorderColor = getCssColorOrElse(colorProperties.cornerBorderColor, currentColors.cornerBorderColor) || currentColors.darkColor\n  currentColors.cornerCenterColor = getCssColorOrElse(colorProperties.cornerCenterColor, currentColors.cornerCenterColor) || currentColors.cornerBorderColor\n  return currentColors\n}\n\n/**\n * @param {HTMLElement} element - target element\n * @returns {QRCodeCssColors} cssColors to draw the QRCode\n */\nexport function parseQrCodeColorsFromElement (element) {\n  return parseQrCodeColors(QRCodeColorProperties(element))\n}\n\n/**\n * @typedef {object} QRCodeCssColors\n * @property {string} darkColor - color to paint the black spots of the QR Code\n * @property {string} lightColor - color to paint the white spots of the QR Code\n * @property {string} cornerBorderColor - color of the position probe pattern border\n * @property {string} cornerCenterColor - color of the position probe pattern center\n */\n\n/**\n * @typedef {object} QRCodeColorProperties\n * @property {string} color - `--qrcode-color` property value\n * @property {string} darkColor - `--qrcode-dark-color` property value\n * @property {string} lightColor - `--qrcode-light-color` property value\n * @property {string} cornerColor - `--qrcode-corner-color` property value\n * @property {string} cornerBorderColor - `--qrcode-corner-border-color` property value\n * @property {string} cornerCenterColor - `--qrcode-corner-center-color` property value\n */\n", "export const DEFAULT_STYLE = 'default'\nexport const ROUNDED_STYLE = 'rounded'\nexport const SQUARE_STYLE = 'square'\nexport const DOT_STYLE = 'dot'\n\nconst validStyles = /** @type {const} */([DEFAULT_STYLE, ROUNDED_STYLE, SQUARE_STYLE, DOT_STYLE])\n\n/**\n * @param {string} style - style to apply\n * @param {QRCodeCssStyle} fallback - fallback color if `color` is invalid\n * @returns {QRCodeCssStyle} validStyle\n */\nfunction getStyleOrElse (style, fallback) {\n  if (typeof style !== 'string') {\n    return fallback\n  }\n  const toLowerCaseStyle = /** @type {QRCodeCssStyle} */ (style.toLocaleLowerCase())\n  const isValidStyle = validStyles.includes(toLowerCaseStyle)\n  return isValidStyle ? toLowerCaseStyle : fallback\n}\n\n/**\n * @returns {QRCodeCssStyles} default CSS styles\n */\nexport function getDefaultStyles () {\n  return {\n    dots: DEFAULT_STYLE,\n    cornerBorder: DEFAULT_STYLE,\n    cornerCenter: DEFAULT_STYLE,\n  }\n}\n\n/**\n *\n * @param {string} colorsVar - value of '--qrcode-color' property\n * @param {QRCodeCssStyles} defaultColors - current default colors\n * @returns {QRCodeCssStyles} updated colors\n */\nfunction parseQrcodeStyleProp (colorsVar, defaultColors) {\n  const currentStyles = { ...defaultColors }\n  if (colorsVar) {\n    const colorsList = colorsVar.trim().split(/\\s+/)\n    const length = colorsList.length\n    if (length >= 1) {\n      currentStyles.dots = getStyleOrElse(colorsList[0], currentStyles.dots)\n    }\n    if (length >= 2) {\n      currentStyles.cornerBorder = getStyleOrElse(colorsList[1], currentStyles.cornerBorder)\n    }\n    if (length >= 3) {\n      currentStyles.cornerCenter = getStyleOrElse(colorsList[2], currentStyles.cornerCenter)\n    }\n  }\n  return currentStyles\n}\n\n/**\n * @param {HTMLElement} element - target element\n * @returns {QRCodeStyleProperties} cssColors to draw the QRCode\n */\nfunction QRCodeStyleProperties (element) {\n  const computedStyle = getComputedStyle(element)\n  const propertyOf = (/** @type {string} */ prop) => computedStyle.getPropertyValue(prop).trim()\n\n  return {\n    style: propertyOf('--qrcode-style'),\n    dotStyle: propertyOf('--qrcode-dot-style'),\n    cornerBorderStyle: propertyOf('--qrcode-corner-border-style'),\n    cornerCenterStyle: propertyOf('--qrcode-corner-center-style'),\n  }\n}\n\n/**\n * @param {QRCodeStyleProperties} styleProperties - color properties\n * @returns {QRCodeCssStyles} cssColors to draw the QRCode\n */\nexport function parseQrCodeStyles (styleProperties) {\n  let currentStyles = getDefaultStyles()\n  currentStyles = parseQrcodeStyleProp(styleProperties.style, currentStyles)\n  currentStyles.dots = getStyleOrElse(styleProperties.dotStyle, currentStyles.dots)\n  currentStyles.cornerBorder = getStyleOrElse(styleProperties.cornerBorderStyle, currentStyles.cornerBorder)\n  currentStyles.cornerCenter = getStyleOrElse(styleProperties.cornerCenterStyle, currentStyles.cornerCenter)\n  return currentStyles\n}\n\n/**\n * @param {HTMLElement} element - target element\n * @returns {QRCodeCssStyles} cssColors to draw the QRCode\n */\nexport function parseQrCodeStylesFromElement (element) {\n  return parseQrCodeStyles(QRCodeStyleProperties(element))\n}\n\n/**\n * @typedef {typeof validStyles[number]} QRCodeCssStyle\n */\n\n/**\n * @typedef {object} QRCodeCssStyles\n * @property {QRCodeCssStyle} dots -  QR Code dots draw style\n * @property {QRCodeCssStyle} cornerBorder - QR Code position probe pattern border draw style\n * @property {QRCodeCssStyle} cornerCenter - QR Code position probe pattern center  draw style\n */\n\n/**\n * @typedef {object} QRCodeStyleProperties\n * @property {string} style - `--qrcode-style` property value\n * @property {string} dotStyle - `--qrcode-dot-style` property value\n * @property {string} cornerBorderStyle - `--qrcode-corner-border-style` property value\n * @property {string} cornerCenterStyle - `--qrcode-corner-center-style` property value\n */\n", "import { escapeXml } from '../utils/escape-xml.util.js'\nimport { getDefaultColors } from '../utils/css-colors.util.js'\nimport { getDefaultStyles, DOT_STYLE, ROUNDED_STYLE, DEFAULT_STYLE } from '../utils/css-qrcode-style.util.js'\n\n/**\n * @param {object} opts - function parameters\n * @param {number} [opts.cellSize] - cell size in pixels, defaults to 2\n * @param {number} [opts.margin] - margin in pixels, defaults to {@link cellSize} * 4\n * @param {string|SvgProp} [opts.alt] - image description\n * @param {string|SvgProp} [opts.title] - image title\n * @param {boolean} [opts.scalable] - flag to make the svg scalable\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-colors.util.js').QRCodeCssColors} [opts.colors] - qr code colors\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n * @returns {string} &lt;svg> element outer HTML\n */\nexport function createSvgTag ({ cellSize, margin, alt, title, qrcode, scalable, colors = getDefaultColors(), style }) {\n  const { moduleCount } = qrcode\n\n  cellSize ||= 2\n  margin ??= cellSize * 4\n\n  const titleProp = normalizeTitle(title)\n  const altProp = normalizeAlt(alt)\n\n  const paintSize = moduleCount * cellSize\n  const size = paintSize + margin * 2\n\n  const pathData = getPathData({ cellSize, margin, qrcode, style })\n\n  let qrSvg = '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"'\n  qrSvg += !scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : ''\n  qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" preserveAspectRatio=\"xMinYMin meet\"'\n  qrSvg += a11yAttributes(titleProp, altProp) + '>'\n  qrSvg += (titleProp.text) ? '<title id=\"' + escapeXml(titleProp.id) + '\">' + escapeXml(titleProp.text) + '</title>' : ''\n  qrSvg += (altProp.text) ? '<description id=\"' + escapeXml(altProp.id) + '\">' + escapeXml(altProp.text) + '</description>' : ''\n  qrSvg += '<g stroke=\"none\">'\n  qrSvg += `<path d=\"${pathData.bg}\" fill-rule=\"evenodd\" fill=\"${colors.lightColor}\"/>`\n  qrSvg += `<path d=\"${pathData.dots}\" fill=\"${colors.darkColor}\"/>`\n  qrSvg += `<path d=\"${pathData.finderCorner}\" fill=\"${colors.cornerBorderColor}\"/>`\n  qrSvg += `<path d=\"${pathData.finderCenter}\" fill=\"${colors.cornerCenterColor}\"/>`\n  qrSvg += '</g></svg>'\n\n  return qrSvg\n};\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n * @returns {PathData} path info to draw the QR Code\n */\nexport function getPathData ({ cellSize, margin, qrcode, style = getDefaultStyles() }) {\n  const dots = dotPathData({ cellSize, margin, qrcode, style })\n  const finderCorner = finderCornerPathData({ cellSize, margin, qrcode, style })\n  const finderCenter = finderCenterPathData({ cellSize, margin, qrcode, style })\n  const { moduleCount } = qrcode\n  const size = moduleCount * cellSize + margin * 2\n  const bg = `M0,0h${size}v${size}h-${size}z` + dots + finderCorner + finderCenter\n  return { dots, finderCenter, finderCorner, bg }\n}\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} opts.style - qr code colors\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction dotPathData ({ cellSize, margin, qrcode, style }) {\n  const { moduleCount } = qrcode\n\n  let d = ''\n\n  const drawRects = /** @type {const} */ ([\n    [8, 0, moduleCount - 8, 8],\n    [0, 8, 8, moduleCount - 8],\n    [8, 8, moduleCount, moduleCount],\n  ])\n  for (const rect of drawRects) {\n    d += renderQrCodeDotArea({ cellSize, margin, qrcode, style, rect })\n  }\n\n  return d\n}\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} opts.style - qr code colors\n * @param {readonly [number, number,number,number]} opts.rect - qr code colors area to render, values are [minCol, minRow, maxCol, maxRow]\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction renderQrCodeDotArea ({ cellSize, margin, qrcode, style, rect }) {\n  let d = ''\n\n  let render = dotRenders.square\n  if (style.dots === DOT_STYLE) {\n    render = dotRenders.dot\n  }\n  if (style.dots === ROUNDED_STYLE) {\n    render = dotRenders.rounded\n  }\n\n  const [minCol, minRow, maxCol, maxRow] = rect\n  for (let row = minRow; row < maxRow; row += 1) {\n    const mr = row * cellSize + margin\n    for (let col = minCol; col < maxCol; col += 1) {\n      const mc = col * cellSize + margin\n      d += render(mc, mr, cellSize, qrcode, row, col)\n    }\n  }\n\n  return d\n}\n\n/** @type {{[name: string]: DotPathRender}} */\nconst dotRenders = {\n  square: (x, y, cellSize, qrcode, row, col) => qrcode.isDark(row, col) ? `M${x},${y}h${cellSize}v${cellSize}h-${cellSize}z` : '',\n  dot (x, y, cellSize, qrcode, row, col) {\n    if (!qrcode.isDark(row, col)) {\n      return ''\n    }\n    const r = cellSize / 2\n    return circlePath(x + r, y + r, r, 0)\n  },\n  rounded (x, y, cellSize, qrcode, row, col) {\n    const { moduleCount } = qrcode\n    if (!qrcode.isDark(row, col)) {\n      return ''\n    }\n    const isTopDark = row > 0 && qrcode.isDark(row - 1, col)\n    const isLeftDark = col > 0 && qrcode.isDark(row, col - 1)\n    const isBottonDark = row < moduleCount - 1 && qrcode.isDark(row + 1, col)\n    const isRightDark = col < moduleCount - 1 && qrcode.isDark(row, col + 1)\n    const half = cellSize / 2\n\n    if (!isTopDark && !isLeftDark && !isBottonDark && !isRightDark) {\n      return circlePath(x + half, y + half, half, 0)\n    }\n\n    return `M${x + half},${y}` +\n    (isTopDark || isRightDark ? `h${half}v${half}` : `a${half},${half} 0 0,1 ${half},${half}`) +\n    (isRightDark || isBottonDark ? `v${half}h-${half}` : `a${half},${half} 0 0,1 -${half},${half}`) +\n    (isBottonDark || isLeftDark ? `h-${half}v-${half}` : `a${half},${half} 0 0,1 -${half},-${half}`) +\n    (isLeftDark || isTopDark ? `v-${half}h${half}` : `a${half},${half} 0 0,1 ${half},-${half}`) +\n    'z'\n  },\n\n}\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} opts.style - QR code style\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction finderCornerPathData ({ cellSize, margin, qrcode, style }) {\n  const { moduleCount } = qrcode\n  return finderCornerPath(cellSize, 0, 0, margin, qrcode, style) +\n    finderCornerPath(cellSize, moduleCount - 7, 0, margin, qrcode, style) +\n    finderCornerPath(cellSize, 0, moduleCount - 7, margin, qrcode, style)\n}\n\n/**\n * @param {number} cellSize - cell size in pixels\n * @param {number} x - qr code column position of finder path\n * @param {number} y - qr code row position of finder path\n * @param {number} margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} style - QR code style\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction finderCornerPath (cellSize, x, y, margin, qrcode, style) {\n  const rx = x * cellSize + margin\n  const ry = y * cellSize + margin\n  const rectLenght = 7 * cellSize\n  const innerRecLength = 5 * cellSize\n  if (style.cornerBorder === DOT_STYLE) {\n    const radius = rectLenght / 2\n    const cx = rx + radius\n    const cy = ry + radius\n    const innerRadius = innerRecLength / 2\n    return circlePath(cx, cy, radius, 0) + circlePath(cx, cy, innerRadius, 1)\n  }\n  if (style.cornerBorder === ROUNDED_STYLE) {\n    const outerR = 2.5 * cellSize\n    const lenBeforeArc = rectLenght - 2 * outerR\n    const outerRect = `M${rx + outerR},${ry}h${lenBeforeArc}a${outerR},${outerR} 0 0,1 ${outerR},${outerR}v${lenBeforeArc}a${outerR},${outerR} 0 0,1 -${outerR},${outerR}h${-lenBeforeArc}a${outerR},${outerR} 0 0,1 -${outerR},-${outerR}v${-lenBeforeArc}a${outerR},${outerR} 0 0,1 ${outerR},-${outerR}z`\n    const innerR = 1.5 * cellSize\n    const innerlenBeforeArc = rectLenght - 2 * outerR\n    const innerRect = `M${rx + outerR + innerlenBeforeArc},${ry + cellSize}h-${innerlenBeforeArc}a${innerR},${innerR} 0 0,0 -${innerR},${innerR}v${innerlenBeforeArc}a${innerR},${innerR} 0 0,0 ${innerR},${innerR}h${innerlenBeforeArc}a${innerR},${innerR} 0 0,0 ${innerR},-${innerR}v${-innerlenBeforeArc}a${innerR},${innerR} 0 0,0 -${innerR},-${innerR}z`\n    return outerRect + innerRect\n  }\n  if (style.cornerBorder === DEFAULT_STYLE && style.dots !== DEFAULT_STYLE) {\n    const drawRects = /** @type {const} */ ([\n      [x, y, x + 7, y + 1],\n      [x, y + 6, x + 7, y + 7],\n      [x, y + 1, x + 1, y + 6],\n      [x + 6, y + 1, x + 7, y + 6],\n    ])\n    return drawRects.map(rect => renderQrCodeDotArea({ cellSize, margin, qrcode, style, rect })).join('')\n  }\n  return `M${rx},${ry}h${rectLenght}v${rectLenght}h-${rectLenght}zM${rx + cellSize},${ry + cellSize}v${innerRecLength}h${innerRecLength}v-${innerRecLength}z`\n}\n\n/**\n * @param {object} opts - funtion parameters\n * @param {number} opts.cellSize - cell size in pixels\n * @param {number} opts.margin - margin in pixels\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} opts.style - qr code colors\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction finderCenterPathData ({ cellSize, margin, qrcode, style }) {\n  const { moduleCount } = qrcode\n  return finderCenterPath(cellSize, 2, 2, margin, qrcode, style) +\n  finderCenterPath(cellSize, moduleCount - 5, 2, margin, qrcode, style) +\n  finderCenterPath(cellSize, 2, moduleCount - 5, margin, qrcode, style)\n}\n\n/**\n * @param {number} cellSize - cell size in pixels\n * @param {number} x - qr code column position of finder path\n * @param {number} y - qr code row position of finder path\n * @param {number} margin - margin in pixels\n *  @param {import('../qr-code.js').QrCode} qrcode - QR Code data\n *  @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} style - QR code style\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction finderCenterPath (cellSize, x, y, margin, qrcode, style) {\n  const rx = x * cellSize + margin\n  const ry = y * cellSize + margin\n  const rectLenght = 3 * cellSize\n  if (style.cornerCenter === DOT_STYLE) {\n    const radius = rectLenght / 2\n    const cx = rx + radius\n    const cy = ry + radius\n    return circlePath(cx, cy, radius, 0)\n  }\n  if (style.cornerCenter === ROUNDED_STYLE) {\n    const arcR = cellSize\n    const lenBeforeArc = rectLenght - 2 * arcR\n    return `M${rx + arcR},${ry}h${lenBeforeArc}a${arcR},${arcR} 0 0,1 ${arcR},${arcR}v${lenBeforeArc}a${arcR},${arcR} 0 0,1 -${arcR},${arcR}h${-lenBeforeArc}a${arcR},${arcR} 0 0,1 -${arcR},-${arcR}v${-lenBeforeArc}a${arcR},${arcR} 0 0,1 ${arcR},-${arcR}z`\n  }\n\n  if (style.cornerCenter === DEFAULT_STYLE && style.dots !== DEFAULT_STYLE) {\n    return renderQrCodeDotArea({ cellSize, margin, qrcode, style, rect: [x, y, x + 3, y + 3] })\n  }\n\n  return `M${rx},${ry}h${rectLenght}v${rectLenght}h-${rectLenght}z`\n}\n\n/**\n * @param {Required<SvgProp>} title - qr code title\n * @param {Required<SvgProp>} alt - qr code alt\n * @returns {string} acessibility attributes or empty string if empty `title` and `alt`\n */\nconst a11yAttributes = (title, alt) => (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' + escapeXml([title.id, alt.id].join(' ').trim()) + '\"' : ''\n\n/**\n * @param {string|SvgProp} [alt] - qr code alt\n * @returns {Required<SvgProp>} Composed alt property surrogate\n */\nconst normalizeAlt = (alt) => {\n  const result = (typeof alt === 'string') ? { text: alt, id: '' } : { text: '', id: '', ...alt }\n  result.id = result.id || 'qrcode-description'\n  return result\n}\n\n/**\n * Compose title property surrogate\n * @param {string|SvgProp} [title] - qr code title\n * @returns {Required<SvgProp>} Composed title property surrogate\n */\nconst normalizeTitle = (title) => {\n  const result = (typeof title === 'string') ? { text: title, id: '' } : { text: '', id: '', ...title }\n  result.id = result.id || 'qrcode-title'\n  return result\n}\n\n/**\n * Create a circle svg path\n * @param {number} cx - horizontal position of the circle center point\n * @param {number} cy - vericak position of the circle center point\n * @param {number} r - circle radius\n * @param {0|1} d -  to invert direction\n * @returns {string} &lt;path> `d` attribute value\n */\nfunction circlePath (cx, cy, r, d) {\n  return `M${cx + r},${cy} a${r},${r} 0 1,${d} -${r * 2},0 a ${r},${r} 0 1,${d} ${r * 2},0z`\n}\n\n/**\n * @typedef {object} SvgProp\n * @property {string} text - attribute text\n * @property {string} [id] - title tag id\n */\n\n/**\n * @typedef {object} PathData\n * @property {string} dots - dots path d value\n * @property {string} finderCenter - finder center path d value\n * @property {string} finderCorner - finder corner path d value\n * @property {string} bg - light colored part path d value\n */\n\n/**\n * @callback DotPathRender\n * @param {number} x - top left x position of the square area to render\n * @param {number} y - top left y position of the square area to render\n * @param {number} cellSize - lenght of square area to render\n * @param {import('../qr-code.js').QrCode} qrcode - QR Code data\n * @param {number} row - QR Code dot row position to draw\n * @param {number} col - QR Code dot column position to draw\n */\n", "import { getPathData } from './svg.render.js'\nimport { getDefaultColors } from '../utils/css-colors.util.js'\n\n/**\n *\n * @param {object} opts - function parameters\n * @param {CanvasRenderingContext2D} opts.context - canvas rendering context\n * @param {number} [opts.cellSize] - cell size in pixels, defaults to 2\n * @param {number} [opts.margin] - margin in pixels, defaults to {@link cellSize} * 4\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-colors.util.js').QRCodeCssColors} [opts.colors] - qr code colors\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n */\nexport function renderTo2dContext ({ context, margin, cellSize = 2, qrcode, colors = getDefaultColors(), style }) {\n  margin ??= cellSize * 4\n\n  context.save()\n  const pathData = getPathData({ cellSize, margin, qrcode, style })\n  context.fillStyle = colors.lightColor\n  context.fill(new Path2D(pathData.bg), 'evenodd')\n  context.fillStyle = colors.darkColor\n  context.fill(new Path2D(pathData.dots))\n  context.fillStyle = colors.cornerBorderColor\n  context.fill(new Path2D(pathData.finderCorner), 'evenodd')\n  context.fillStyle = colors.cornerCenterColor\n  context.fill(new Path2D(pathData.finderCenter))\n\n  context.restore()\n}\n", "import { renderTo2dContext } from './canvas-2d-context.render.js'\n\n/**\n *\n * @param {object} opts - function parameters\n * @param {number} [opts.cellSize] - cell size in pixels, defaults to 2\n * @param {number} [opts.margin] - margin in pixels, defaults to {@link cellSize} * 4\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-colors.util.js').QRCodeCssColors} [opts.colors] - qr code colors\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n * @returns {string} data url of qr code image\n */\nexport function createDataURL ({ cellSize = 2, margin, qrcode, colors, style }) {\n  margin ??= cellSize * 4\n\n  const paintSize = qrcode.moduleCount * cellSize\n  const size = paintSize + margin * 2\n  const canvas = document.createElement('canvas')\n  canvas.width = size\n  canvas.height = size\n  const context = /** @type {CanvasRenderingContext2D} */(canvas.getContext('2d'))\n  renderTo2dContext({ context, cellSize, margin, qrcode, colors, style })\n  return canvas.toDataURL('image/png', 1.0)\n};\n", "import { createDataURL } from './data-url-canvas.render.js'\nimport { escapeXml } from '../utils/escape-xml.util.js'\n\n/**\n * @param {object} opts - function parameters\n * @param {number} [opts.cellSize] - cell size in pixels, defaults to 2\n * @param {number} [opts.margin] - margin in pixels, defaults to {@link cellSize} * 4\n * @param {string} [opts.alt] - image description\n * @param {import('../qr-code.js').QrCode} opts.qrcode - QR Code data\n * @param {import('../utils/css-colors.util.js').QRCodeCssColors} [opts.colors] - qr code colors\n * @param {import('../utils/css-qrcode-style.util.js').QRCodeCssStyles} [opts.style] - qr code colors\n * @returns {string} &lt;img> element outer HTML\n */\nexport function createImgTag ({ cellSize, margin, alt, qrcode, colors, style }) {\n  cellSize ||= 2\n  margin ??= cellSize * 4\n  const size = qrcode.moduleCount * cellSize + margin * 2\n  const altAttr = alt ? ` alt=\"${escapeXml(alt)}\"` : ''\n  return `<img src=\"${createDataURL({ cellSize, margin, qrcode, colors, style })}\" width=\"${size}\" height=\"${size}\"${altAttr}/>`\n};\n", "/**\n * @param {string} data - QR code data\n * @returns {string} unprocessed data\n */\nconst none = (data) => data\n\n/**\n * @param {string} data - QR code data\n * @returns {string} trimmed QR code data\n */\nconst trim = (data) => data.trim()\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data with trimmed lines\n */\nconst trimLines = (data) => data.split('\\n').map(line => line.trim()).join('\\n')\n\n/**\n * @param {string} lineStr - line content\n * @returns {{ level: number, isBlankLine: boolean }} identation information\n */\nfunction getLineIdentation (lineStr) {\n  const { length } = lineStr\n  for (let level = 0; level < length; level++) {\n    if (lineStr.charAt(level).trim() !== '') {\n      return { level, isBlankLine: false }\n    }\n  }\n  return { level: length, isBlankLine: true }\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data with all lines dedented\n */\nconst dedent = (data) => {\n  const lines = data.split('\\n')\n  const identationsByLine = lines.map(getLineIdentation)\n  const identationsLevelsToCheck = identationsByLine\n    .filter(({ isBlankLine }) => !isBlankLine)\n    .map(({ level }) => level)\n  if (identationsLevelsToCheck.length <= 0 || Math.min(...identationsLevelsToCheck) === 0) {\n    return data\n  }\n  const minIdentation = Math.min(...identationsLevelsToCheck)\n  const detentedLines = lines.map((line, lineNumber) => line.substring(Math.min(identationsByLine[lineNumber].level, minIdentation)))\n  return detentedLines.join('\\n')\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data with all lines dedented\n */\nconst dedentFromFirstLine = (data) => {\n  const lines = data.split('\\n')\n  const identationsByLine = lines.map(getLineIdentation)\n  const firstNonBlankLineIdentation = identationsByLine.find(({ isBlankLine }) => !isBlankLine)\n  if (!firstNonBlankLineIdentation) {\n    return data\n  }\n  const charAmountToDedent = firstNonBlankLineIdentation.level\n  const detentedLines = lines.map((line, lineNumber) => line.substring(Math.min(identationsByLine[lineNumber].level, charAmountToDedent)))\n  return detentedLines.join('\\n')\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data with trimmed lines\n */\nconst removeEmptylines = (data) => data.split('\\n').filter(line => line !== '').join('\\n')\n\n/**\n * @param {string} data - QR code data\n * @returns {string} QR code data without blank lines\n */\nconst removeBlanklines = (data) => data.split('\\n').filter(line => line.trim() !== '').join('\\n')\n\n/**\n * @param {string} data - QR code data\n * @returns {string} vcard handled data\n */\nconst vcard = (data) => {\n  const unwrapedTextData = removeBlanklines(dedentFromFirstLine(data))\n  /*\n    > Content lines SHOULD be folded to a maximum width of 75 octets, excluding the line\n    > break.  Multi-octet characters MUST remain contiguous\n\n    https://www.rfc-editor.org/rfc/rfc6350#section-3.2\n  */\n  let lineWidth = 0\n  let wrapedTextData = ''\n  for (const char of unwrapedTextData) {\n    if (char === '\\n') {\n      wrapedTextData += char\n      lineWidth = 0\n      continue\n    }\n    if (lineWidth >= 75) {\n      wrapedTextData += '\\n '\n      lineWidth = 1\n    }\n\n    wrapedTextData += char\n    lineWidth++\n  }\n  return useCrflLineBreak(wrapedTextData)\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} vevent handled data\n */\nconst vevent = (data) => {\n  /*\n    VEVENT is similar to VCARD\n\n    https://www.rfc-editor.org/rfc/rfc5545\n  */\n  return vcard(data)\n}\n\n/**\n * @param {string} data - QR code data\n * @returns {string} data with newlines converted to CRFL (\\r\\n)\n */\nconst useCrflLineBreak = (data) => data.replaceAll('\\r\\n', '\\n').replaceAll('\\n', '\\r\\n')\n\n/**\n * @type {{[name:string]: (data: string) => string}}\n */\nconst preProcessMap = {\n  none,\n  pre: none,\n  trim,\n  dedent,\n  'dedent-from-first-line': dedentFromFirstLine,\n  'trim-line': trimLines,\n  'trim-lines': trimLines,\n  'no-empty-line': removeEmptylines,\n  'no-empty-lines': removeEmptylines,\n  'no-blank-line': removeBlanklines,\n  'no-blank-lines': removeBlanklines,\n  vcard,\n  vevent,\n}\n\n/**\n * @param {string} data - QR code element text content\n * @returns {string[]} processed data\n */\nfunction getPreproccessesFromContent (data) {\n  const trimmedData = trim(data)\n  if (/^BEGIN:[vV][cC][aA][rR][dD]/.test(trimmedData)) {\n    return ['vcard']\n  }\n  if (/^BEGIN:[vV][eE][vV][eE][nN][tT]/.test(trimmedData)) {\n    return ['vevent']\n  }\n  return ['trim']\n}\n\n/**\n * @param {string} preprocessAttr - QR code data-pre-process attribute\n * @param {string} data - QR code element text content to use `getPreproccessesFromContent` if invalid\n * @returns {string[]} processed data\n */\nfunction getPreproccessesFromAttribute (preprocessAttr, data) {\n  const splitData = preprocessAttr.split(' ')\n    .map(name => name.toLowerCase())\n    .filter(name => Object.hasOwn(preProcessMap, name))\n\n  if (splitData.length === 0) {\n    return getPreproccessesFromContent(data)\n  }\n  return splitData\n}\n\n/**\n * Process QR code element text element before transforming to QRCode\n * @param {string} data - QR code element text content\n * @param {string} [preprocessAttr] - QR code data-pre-process attribute\n * @returns {string} processed data\n */\nexport function preProcess (data, preprocessAttr) {\n  const preprocesses = preprocessAttr ? getPreproccessesFromAttribute(preprocessAttr, data) : getPreproccessesFromContent(data)\n  return preprocesses.reduce((acc, name) => preProcessMap[name](acc), data)\n}\n", "// generated code from src/web-component/qr-code.element.css\nvar stdin_default = \":host{display:inline-flex;justify-content:center}svg,img{align-self:center;max-height:100%}\\n\";\nexport {\n  stdin_default as default\n};\n", "import { QrCode } from '../qr-code.js'\nimport { createImgTag } from '../render/img-tag.render.js'\nimport { createSvgTag } from '../render/svg.render.js'\nimport { isValid } from '../error-correction/ec-level.js'\nimport { preProcess } from '../utils/data-pre-processing.util.js'\nimport { parseQrCodeColorsFromElement } from '../utils/css-colors.util.js'\nimport { parseQrCodeStylesFromElement } from '../utils/css-qrcode-style.util.js'\nimport css from './qr-code.element.css.generated.js'\n\nlet loadStyles = () => {\n  const sheet = new CSSStyleSheet()\n  sheet.replaceSync(css)\n  loadStyles = () => sheet\n  return sheet\n}\n/** @type {WeakMap<QRCodeElement, QrCode>} */\nconst qrCodeData = new WeakMap()\nconst EC_LEVEL_ATTR = 'data-error-correction-level'\nconst DATA_WHITESPACE_ATTR = 'data-whitespace'\n\nexport class QRCodeElement extends HTMLElement {\n  constructor () {\n    super()\n    const shadowRoot = this.attachShadow({ mode: 'open' })\n    shadowRoot.adoptedStyleSheets = [loadStyles()]\n    observer.observe(this, observerOptions)\n  }\n\n  connectedCallback () {\n    applyQrCode(this)\n  }\n\n  get qrCodeContent () {\n    const content = queryQrContent(this)\n    return content && content.length === 1 ? content[0] : content\n  }\n\n  get errorCorrectionLevel () {\n    const errorCorrectionLevelAttr = this.getAttribute(EC_LEVEL_ATTR)\n    return errorCorrectionLevelAttr && isValid(errorCorrectionLevelAttr) ? errorCorrectionLevelAttr : 'Medium'\n  }\n\n  set errorCorrectionLevel (errorCorrectionLevel) {\n    if (isValid(errorCorrectionLevel)) {\n      this.setAttribute(EC_LEVEL_ATTR, errorCorrectionLevel)\n    }\n  }\n}\n\n/** @type {MutationObserverInit} */\nconst observerOptions = {\n  characterData: true,\n  characterDataOldValue: true,\n  childList: true,\n  attributes: true,\n  subtree: true,\n}\nconst observer = new MutationObserver((records) => {\n  const updatedNodes = new Set()\n  for (const record of records) {\n    const { target } = record\n    if (target instanceof QRCodeElement) {\n      updatedNodes.add(target)\n    } else if (target.nodeType === Node.TEXT_NODE) {\n      const { parentElement } = target\n      if (parentElement instanceof QRCodeElement) {\n        updatedNodes.add(target.parentElement)\n      }\n      if (parentElement instanceof HTMLDataElement && parentElement.parentElement instanceof QRCodeElement) {\n        updatedNodes.add(parentElement.parentElement)\n      }\n    } else if (target instanceof HTMLDataElement && target.parentElement instanceof QRCodeElement) {\n      updatedNodes.add(target.parentElement)\n    }\n  }\n  updatedNodes.forEach(el => el instanceof QRCodeElement && applyQrCode(el))\n})\n\n/**\n * @param {QRCodeElement} element - target QRCodeElement component element\n */\nfunction applyQrCode (element) {\n  const typeNumber = 0\n\n  const { shadowRoot } = element\n  if (!shadowRoot) {\n    return\n  }\n\n  const { qrCodeContent } = element\n  if (!qrCodeContent) {\n    return\n  }\n\n  const oldQr = qrCodeData.get(element)\n  const qr = new QrCode(typeNumber, element.errorCorrectionLevel)\n  for (const content of [qrCodeContent].flat()) {\n    qr.addData(content)\n  }\n  qr.make()\n  qrCodeData.set(element, qr)\n\n  const colors = parseQrCodeColorsFromElement(element)\n  const style = parseQrCodeStylesFromElement(element)\n  const marginComputedStyle = getComputedStyle(element).getPropertyValue('--qrcode-margin').trim()\n  const cellSize = 2\n  const margin = /^\\d+$/.test(marginComputedStyle) ? +marginComputedStyle * cellSize : undefined\n\n  const renderMode = getRenderMode(element)\n  if (renderMode === 'svg') {\n    const svg = createSvgTag({ qrcode: qr, colors, cellSize, margin, scalable: isResizeEnabled(element), style })\n    shadowRoot.innerHTML = svg\n    return\n  }\n\n  const imgHtml = createImgTag({ qrcode: qr, colors, cellSize, margin, style })\n  const oldImgElement = shadowRoot.querySelector('img')\n  if (oldImgElement) {\n    const updated = updateImgElement(oldImgElement, imgHtml)\n    if (!updated) {\n      shadowRoot.innerHTML = imgHtml\n    }\n  } else {\n    shadowRoot.innerHTML = imgHtml\n  }\n\n  if (oldQr && (oldQr.dataList.length !== qr.dataList.length || oldQr.dataList.some((val, index) => val.data !== qr.dataList[index].data))) {\n    const customEvent = new CustomEvent('qrcode-content-change', { detail: { previousQRCode: oldQr, qrCode: qr } })\n    element.dispatchEvent(customEvent)\n  }\n}\n\n/**\n * QR Code can have multiple data inside it, for that reason there are 2 structures this element supports:\n *\n * 1. Using textContent - gets the element text content, processes the whitespace and converts to a QR Code image\n * 2. Using <data> child elements - each child element will be processed the join together before converting to a QR Code image\n *\n * It is possible to have both, but when it happens, <data> will take priority, and the text content in the element is to be ignored\n * @param {QRCodeElement} element - target qr code element\n * @returns {string[] | null} QR code contents\n */\nfunction queryQrContent (element) {\n  const dataChildElements = element.querySelectorAll(':scope > data')\n  if (dataChildElements.length > 0) {\n    const contentArray = Array.from(dataChildElements).map(dataChild => {\n      const { textContent } = dataChild\n      if (!textContent) { return '' }\n      const preProcessAttr = dataChild.hasAttribute(DATA_WHITESPACE_ATTR) ? dataChild.getAttribute(DATA_WHITESPACE_ATTR) : element.getAttribute(DATA_WHITESPACE_ATTR)\n      return preProcess(textContent, preProcessAttr || '')\n    }).filter(content => content !== '')\n    return contentArray.length > 0 ? contentArray : null\n  }\n  const { textContent } = element\n  return textContent ? [preProcess(textContent, element.getAttribute(DATA_WHITESPACE_ATTR) || '')] : null\n}\n\n/**\n * Updates the image element.\n *\n * Replacing the element with another &lt;img> will make the image flash and re-render twice,\n * one for the updated HTML without the previous image, as it is loading, and another time with the loaded image, this\n * will make it update once without making it flash\n * @param {HTMLImageElement} imageElement - target &lt;img> element\n * @param {string} imgHtml img rendered with {@link createImgTag}\n * @returns {boolean} true if updated correctly, false if something failed. If false, applyQrCode() will fallback to replace the &lt;img>\n */\nfunction updateImgElement (imageElement, imgHtml) {\n  const imgDom = new DOMParser().parseFromString(imgHtml, 'text/html').querySelector('img')\n  if (!imgDom) {\n    return false\n  }\n  imageElement.src = imgDom.src\n  imageElement.width = imgDom.width\n  imageElement.height = imgDom.height\n  return true\n}\n\n/**\n * Gets the render mode to be used:\n *  - if mode is \"raster\", it will render the qrcode as an rasterized image\n *  - if mode is \"svg\", it will render the qrcode as a scalable image using SVG\n * @param {QRCodeElement} element - target qr code element\n * @returns {\"raster\"|\"svg\"} render mode\n */\nfunction getRenderMode (element) {\n  const renderModeCss = (getComputedStyle(element).getPropertyValue('--qrcode-render') || '').trim().toLowerCase()\n  if (renderModeCss === 'svg') return 'svg'\n  if (renderModeCss === 'raster') return 'raster'\n  if (isResizeEnabled(element)) return 'svg'\n  return 'raster'\n}\n\n/**\n * @param {QRCodeElement} element - target qr code element\n * @returns {boolean} true if resize enabled\n */\nfunction isResizeEnabled (element) {\n  const resizeCss = (getComputedStyle(element).getPropertyValue('--qrcode-resize') || '').trim().toLowerCase()\n  return resizeCss === 'true' || resizeCss === 'yes' || resizeCss === 'enabled' || resizeCss === 'enable'\n}\n", "import { QRCodeElement as Element } from '../web-component/qr-code.element.js'\nexport { QrCode } from '../qr-code.js'\nconst url = new URL(import.meta.url)\nconst tagName = url.searchParams.get('named')?.trim()\ntagName && customElements.define(tagName, Element)\nexport const QRCodeElement = Element\nexport default QRCodeElement\n"],
  "mappings": "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",
  "names": ["EC_BLOCK_TABLE", "correctionLevelNames", "correctionLevelMap", "acc", "name", "bit", "result", "fromString", "string", "validKeys", "idx", "isValid", "ECBlock", "totalCount", "dataCount", "getAvailableModules", "version", "buildECBlocksInfo", "errorCorrectionLevel", "index", "blockAmount", "EC_BLOCK_TABLE", "group2Blocks", "group1Blocks", "totalBlockCount", "ecBlockSize", "dcBlockSize", "totalDcCount", "totalEcCount", "maxDcCount", "maxEcCount", "blocks", "memoEcBlockInfo", "ECBlocksInfo", "typeNumber", "versionEcCheck", "memo", "result", "calculateCoordinates", "version", "intervals", "distance", "step", "_", "index", "calculatePositions", "coords", "pos", "posLength", "i", "j", "positionsMemo", "getPatternPositions", "getBCHDigit", "data", "digit", "G15", "G18", "G15_MASK", "getBCHTypeInfo", "d", "getBCHTypeNumber", "maskPatternFunctions", "i", "j", "_", "getMaskPatternFunction", "maskPattern", "result", "QrBitBuffer", "#byteBuffer", "#bitLength", "num", "length", "byteBuffer", "bitLength", "newBitLength", "newBufferLenght", "restBits", "bufIndex", "i", "shiftLeft", "index", "bit", "QrNumber", "data", "writeDataToBitBuffer", "buffer", "i", "strToNum", "s", "num", "e", "charToNum", "c", "zeroCharCode", "QrAlphaNum", "data", "writeDataToBitBuffer", "buffer", "i", "getCode", "c", "utf8_to_jis_table_constants_default", "xInt", "x", "b64Int", "base64ToHex", "decompressUtf8ToJisTable", "compressedTable", "result", "jisChar", "compressedUtf8ValsStr", "utf8Vals", "decompressUtf8ValsStr", "charIterator", "utf8Value", "key", "kv", "init", "i", "e", "compressedVals", "join", "amount", "str", "val", "ch", "commaSeparatedVals", "match", "acc", "args", "prefix", "initPrefix", "char", "usingTable", "generatedTable", "getUtf8ToJisTable", "utf8_to_jis_table_constants_default", "encoder", "decoder", "sjisDecoder", "textToBytes", "str", "base64ToBytes", "base64", "m", "base64ToHex", "base64", "bytesToHex", "base64ToBytes", "bytesToHex", "bytes", "byte", "textToSjisBytes", "str", "UTF8ToSJIS", "textToBytes", "UTF8ToSJIS", "data", "UTF8_TO_JIS_TABLE", "getUtf8ToJisTable", "results", "len", "b1", "b2", "utf8", "jis", "i", "b", "QrKanji", "data", "bytes", "textToSjisBytes", "writeDataToBitBuffer", "buffer", "i", "c", "getValidQrKanjiOrNull", "text", "modeObject", "Qr8BitByte", "data", "writeDataToBitBuffer", "textToBytes", "buffer", "byte", "getBestMode", "data", "QrNumber", "QrAlphaNum", "getValidQrKanjiOrNull", "Qr8BitByte", "LENGTH_BITS_MATRIX", "getCharCountBitLength", "mode", "version", "modeIndex", "bitsIndex", "EXP_TABLE", "LOG_TABLE", "i", "glog", "n", "gexp", "QRPolynomial", "_QRPolynomial", "num", "shift", "offset", "numLen", "lengthAfterOffset", "array", "i", "index", "other", "length", "otherLength", "otherArray", "j", "gexp", "glog", "ratio", "QrPolynomial", "memoECPolynomials", "QrPolynomial", "getErrorCorrectPolynomial", "errorCorrectLength", "lastIndex", "polynomial", "i", "gexp", "PAD0", "PAD1", "createData", "typeNumber", "errorCorrectionLevel", "dataList", "blocksInfo", "ECBlocksInfo", "buffer", "QrBitBuffer", "data", "getCharCountBitLength", "totalDataCount", "createBytes", "maxDcCount", "maxEcCount", "ecBlocks", "totalCodeCount", "ecdata", "dcdata", "createCodewordsData", "index", "i", "r", "offset", "dcCount", "ecCount", "e", "rsPoly", "getErrorCorrectPolynomial", "modPoly", "QrPolynomial", "modIndex", "QrCode", "#dataCache", "typeNumber", "errorCorrectionLevel", "fromString", "createModuleTable", "test", "maskPattern", "moduleCount", "setupPositionProbePatterns", "setupPositionAdjustPattern", "setupTimingPattern", "setupTypeInfo", "setupTypeNumber", "createData", "mapData", "row", "col", "modules", "data", "mode", "QrNumber", "QrAlphaNum", "Qr8BitByte", "QrKanji", "getBestMode", "getBestTypeNumber", "getBestMaskPattern", "qrcode", "drawPositionProbePattern", "rowMin", "rowMax", "colMin", "colMax", "r", "c", "isDarkSpot", "dataList", "ecBlocksInfo", "ECBlocksInfo", "buffer", "QrBitBuffer", "i", "getCharCountBitLength", "minLostPoint", "pattern", "lostPoint", "getLostPoint", "getPatternPositions", "paintAlignmentPattern", "bits", "getBCHTypeNumber", "mod", "inc", "bitIndex", "byteIndex", "maskFunc", "getMaskPatternFunction", "dark", "isDark", "sameCount", "count", "darkCount", "ratio", "getBCHTypeInfo", "xmlEscapeMap", "escapeXml", "xml", "c", "tempDiv", "getTempDiv", "elem", "newElem", "getCssColorOrElse", "color", "fallback", "ele", "result", "getDefaultColors", "parseQrcodeColorProp", "colorsVar", "defaultColors", "currentColors", "colorsList", "length", "parseQrcodeCornerColorProp", "QRCodeColorProperties", "element", "computedStyle", "propertyOf", "prop", "parseQrCodeColors", "colorProperties", "parseQrCodeColorsFromElement", "DEFAULT_STYLE", "ROUNDED_STYLE", "SQUARE_STYLE", "DOT_STYLE", "validStyles", "getStyleOrElse", "style", "fallback", "toLowerCaseStyle", "getDefaultStyles", "parseQrcodeStyleProp", "colorsVar", "defaultColors", "currentStyles", "colorsList", "length", "QRCodeStyleProperties", "element", "computedStyle", "propertyOf", "prop", "parseQrCodeStyles", "styleProperties", "parseQrCodeStylesFromElement", "createSvgTag", "cellSize", "margin", "alt", "title", "qrcode", "scalable", "colors", "getDefaultColors", "style", "moduleCount", "titleProp", "normalizeTitle", "altProp", "normalizeAlt", "size", "pathData", "getPathData", "qrSvg", "a11yAttributes", "escapeXml", "getDefaultStyles", "dots", "dotPathData", "finderCorner", "finderCornerPathData", "finderCenter", "finderCenterPathData", "bg", "d", "drawRects", "rect", "renderQrCodeDotArea", "render", "dotRenders", "DOT_STYLE", "ROUNDED_STYLE", "minCol", "minRow", "maxCol", "maxRow", "row", "mr", "col", "mc", "x", "y", "r", "circlePath", "isTopDark", "isLeftDark", "isBottonDark", "isRightDark", "half", "finderCornerPath", "rx", "ry", "rectLenght", "innerRecLength", "radius", "cx", "cy", "innerRadius", "outerR", "lenBeforeArc", "outerRect", "innerR", "innerlenBeforeArc", "innerRect", "DEFAULT_STYLE", "finderCenterPath", "arcR", "result", "renderTo2dContext", "context", "margin", "cellSize", "qrcode", "colors", "getDefaultColors", "style", "pathData", "getPathData", "createDataURL", "cellSize", "margin", "qrcode", "colors", "style", "size", "canvas", "context", "renderTo2dContext", "createImgTag", "cellSize", "margin", "alt", "qrcode", "colors", "style", "size", "altAttr", "escapeXml", "createDataURL", "none", "data", "trim", "trimLines", "line", "getLineIdentation", "lineStr", "length", "level", "dedent", "lines", "identationsByLine", "identationsLevelsToCheck", "isBlankLine", "minIdentation", "lineNumber", "dedentFromFirstLine", "firstNonBlankLineIdentation", "charAmountToDedent", "removeEmptylines", "removeBlanklines", "vcard", "unwrapedTextData", "lineWidth", "wrapedTextData", "char", "useCrflLineBreak", "vevent", "preProcessMap", "getPreproccessesFromContent", "trimmedData", "getPreproccessesFromAttribute", "preprocessAttr", "splitData", "name", "preProcess", "acc", "stdin_default", "loadStyles", "sheet", "stdin_default", "qrCodeData", "EC_LEVEL_ATTR", "DATA_WHITESPACE_ATTR", "QRCodeElement", "shadowRoot", "observer", "observerOptions", "applyQrCode", "content", "queryQrContent", "errorCorrectionLevelAttr", "isValid", "errorCorrectionLevel", "records", "updatedNodes", "record", "target", "parentElement", "el", "element", "qrCodeContent", "oldQr", "qr", "QrCode", "colors", "parseQrCodeColorsFromElement", "style", "parseQrCodeStylesFromElement", "marginComputedStyle", "cellSize", "margin", "getRenderMode", "svg", "createSvgTag", "isResizeEnabled", "imgHtml", "createImgTag", "oldImgElement", "updateImgElement", "val", "index", "customEvent", "dataChildElements", "contentArray", "dataChild", "textContent", "preProcessAttr", "preProcess", "imageElement", "imgDom", "renderModeCss", "resizeCss", "url", "tagName", "QRCodeElement", "browser_default"]
}
